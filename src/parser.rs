// auto-generated: "lalrpop 0.20.2"
// sha3: a24ba742abcf98ac5ad98e23c680db93aca0abfbc8e188655d1fe3b808e1aa2c
#![allow(unused)]
#![allow(clippy::all)]
use crate::ast::*;
use crate::token::{TokenKind, Token};
use crate::interpolation::parse_string_parts;
use std::convert::Infallible;
use lexgen_util::{LexerError, Loc};
use smol_str::SmolStr;
#[allow(unused_extern_crates)]
extern crate lalrpop_util as __lalrpop_util;
#[allow(unused_imports)]
use self::__lalrpop_util::state_machine as __state_machine;
extern crate core;
extern crate alloc;

#[rustfmt::skip]
#[allow(non_snake_case, non_camel_case_types, unused_mut, unused_variables, unused_imports, unused_parens, clippy::needless_lifetimes, clippy::type_complexity, clippy::needless_return, clippy::too_many_arguments, clippy::never_loop, clippy::match_single_binding, clippy::needless_raw_string_hashes)]
mod __parse__LExpr {

    use crate::ast::*;
    use crate::token::{TokenKind, Token};
    use crate::interpolation::parse_string_parts;
    use std::convert::Infallible;
    use lexgen_util::{LexerError, Loc};
    use smol_str::SmolStr;
    #[allow(unused_extern_crates)]
    extern crate lalrpop_util as __lalrpop_util;
    #[allow(unused_imports)]
    use self::__lalrpop_util::state_machine as __state_machine;
    extern crate core;
    extern crate alloc;
    use super::__ToTriple;
    #[allow(dead_code)]
    pub(crate) enum __Symbol<'input>
     {
        Variant0(Token<'input>),
        Variant1(core::option::Option<Token<'input>>),
        Variant2(Type),
        Variant3(core::option::Option<Type>),
        Variant4((Token<'input>, Vec<Type>, Token<'input>)),
        Variant5(core::option::Option<(Token<'input>, Vec<Type>, Token<'input>)>),
        Variant6((L<Expr>, Vec<L<Stmt>>)),
        Variant7(alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>),
        Variant8(Vec<L<Stmt>>),
        Variant9(core::option::Option<Vec<L<Stmt>>>),
        Variant10((Token<'input>, core::option::Option<Token<'input>>)),
        Variant11(core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>),
        Variant12((Token<'input>, Type)),
        Variant13(alloc::vec::Vec<(Token<'input>, Type)>),
        Variant14(CallArg),
        Variant15(alloc::vec::Vec<CallArg>),
        Variant16(core::option::Option<(Token<'input>, Type)>),
        Variant17((SmolStr, Type)),
        Variant18(alloc::vec::Vec<(SmolStr, Type)>),
        Variant19((Option<SmolStr>, L<Expr>)),
        Variant20(alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>),
        Variant21((Option<SmolStr>, L<Pat>)),
        Variant22(alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>),
        Variant23(Named<Type>),
        Variant24(alloc::vec::Vec<Named<Type>>),
        Variant25(alloc::vec::Vec<Type>),
        Variant26(alloc::vec::Vec<Token<'input>>),
        Variant27(Loc),
        Variant28(Alt),
        Variant29(alloc::vec::Vec<Alt>),
        Variant30(Vec<Alt>),
        Variant31(AssignOp),
        Variant32(core::option::Option<CallArg>),
        Variant33(ConstrPattern),
        Variant34(Constructor),
        Variant35(ConstructorDecl),
        Variant36(alloc::vec::Vec<ConstructorDecl>),
        Variant37(Expr),
        Variant38(L<FunDecl>),
        Variant39(L<ImportDecl>),
        Variant40(L<Expr>),
        Variant41(L<Pat>),
        Variant42(L<Stmt>),
        Variant43(alloc::vec::Vec<L<Stmt>>),
        Variant44(Vec<(SmolStr, Type)>),
        Variant45(core::option::Option<(Option<SmolStr>, L<Expr>)>),
        Variant46(Pat),
        Variant47(core::option::Option<(Option<SmolStr>, L<Pat>)>),
        Variant48(core::option::Option<Named<Type>>),
        Variant49(Vec<(Token<'input>, Type)>),
        Variant50(Vec<CallArg>),
        Variant51(Vec<(Option<SmolStr>, L<Expr>)>),
        Variant52(Vec<(Option<SmolStr>, L<Pat>)>),
        Variant53(Vec<Named<Type>>),
        Variant54(Vec<Type>),
        Variant55(Vec<Token<'input>>),
        Variant56(Stmt),
        Variant57(L<TopDecl>),
        Variant58(alloc::vec::Vec<L<TopDecl>>),
        Variant59(Vec<L<TopDecl>>),
        Variant60(Vec<ConstructorDecl>),
        Variant61(L<TypeDecl>),
        Variant62(TypeDeclRhs),
        Variant63(Vec<SmolStr>),
    }
    const __ACTION: &[i16] = &[
        // State 0
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 1
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 2
        2, 0, 0, 3, -206, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 41, 0, 34, 35,
        // State 3
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 4
        2, 0, 0, 3, -202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 46, 0, 34, 35,
        // State 5
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 6
        0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 7
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 8
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 9
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 10
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 11
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 12
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 13
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 14
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 15
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 16
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 17
        2, 0, 0, 3, -208, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 41, 0, 34, 35,
        // State 18
        2, 0, 0, 3, -204, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 46, 0, 34, 35,
        // State 19
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 20
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 33, 0, 34, 35,
        // State 21
        0, 0, 0, 0, -164, 0, 0, 0, -164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 22
        0, -110, -110, 5, -110, -110, -110, 0, -110, -110, 0, 36, -110, 0, -110, -110, 0, -110, -110, -110, 6, -110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -110, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 23
        0, -112, -112, 0, -112, -112, -112, 0, -112, -112, 0, 0, 7, 0, -112, -112, 0, -112, -112, -112, 0, -112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 24
        0, -114, -114, 0, -114, -114, -114, 0, -114, -114, 0, 0, 0, 0, -114, -114, 0, -114, -114, -114, 0, -114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -114, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 25
        0, -117, -117, 0, -117, 8, -117, 0, -117, -117, 0, 0, 0, 0, -117, -117, 0, -117, -117, -117, 0, -117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -117, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 26
        0, -124, -124, 0, -124, 0, 9, 0, -124, 10, 0, 0, 0, 0, -124, -124, 0, -124, -124, -124, 0, -124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -124, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 27
        0, 11, -126, 0, -126, 0, 0, 0, -126, 0, 0, 0, 0, 0, 12, 13, 0, 14, 15, 16, 0, -126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -126, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 28
        0, 0, 17, 0, -98, 0, 0, 0, -98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -98, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 29
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 30
        0, -99, -99, -99, -99, -99, -99, 0, -99, -99, 0, -99, -99, 0, -99, -99, 0, -99, -99, -99, -99, -99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -99, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 31
        0, -103, -103, -103, -103, -103, -103, 0, -103, -103, 0, -103, -103, 0, -103, -103, 0, -103, -103, -103, -103, -103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -103, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 32
        0, -100, -100, -100, -100, -100, -100, 0, -100, -100, 0, -100, -100, 0, -100, -100, 0, -100, -100, -100, -100, -100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 33
        0, -104, -104, -104, -104, -104, -104, 0, -104, -104, 0, -104, -104, 0, -104, -104, 0, -104, -104, -104, -104, -104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -104, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 34
        0, -101, -101, -101, -101, -101, -101, 0, -101, -101, 0, -101, -101, 0, -101, -101, 0, -101, -101, -101, -101, -101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -101, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 35
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 48,
        // State 36
        0, -111, -111, 0, -111, -111, -111, 0, -111, -111, 0, 0, 0, 0, -111, -111, 0, -111, -111, -111, 0, -111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -111, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 37
        0, 0, 0, 0, -180, 0, 0, 0, -180, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 38
        0, 0, 0, 0, -205, 0, 0, 0, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 39
        0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 40
        0, -100, -100, -100, -100, -100, -100, 0, -100, -100, 0, -100, -100, 0, -100, -100, 20, -100, -100, -100, -100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 41
        0, 0, 17, 0, -97, 0, 0, 0, -97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -97, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 42
        0, 0, 0, 0, -201, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 43
        0, 0, 0, 0, -84, 0, 0, 0, -84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 44
        0, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 45
        0, -100, -100, -100, -100, -100, -100, 0, -100, -100, 0, -100, -100, 0, -100, -100, 21, -100, -100, -100, -100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 46
        0, -107, -107, -107, -107, -107, -107, 0, -107, -107, 0, -107, -107, 0, -107, -107, 0, -107, -107, -107, -107, -107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -107, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 47
        0, -108, -108, -108, -108, -108, -108, 0, -108, -108, 0, -108, -108, 0, -108, -108, 0, -108, -108, -108, -108, -108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -108, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 48
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 49
        0, -109, -109, 5, -109, -109, -109, 0, -109, -109, 0, 36, -109, 0, -109, -109, 0, -109, -109, -109, 6, -109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -109, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 50
        0, -113, -113, 0, -113, -113, -113, 0, -113, -113, 0, 0, 0, 0, -113, -113, 0, -113, -113, -113, 0, -113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -113, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 51
        0, -115, -115, 0, -115, 8, -115, 0, -115, -115, 0, 0, 0, 0, -115, -115, 0, -115, -115, -115, 0, -115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -115, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 52
        0, -116, -116, 0, -116, 8, -116, 0, -116, -116, 0, 0, 0, 0, -116, -116, 0, -116, -116, -116, 0, -116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -116, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 53
        0, -119, -119, 0, -119, 0, 9, 0, -119, 10, 0, 0, 0, 0, -119, -119, 0, -119, -119, -119, 0, -119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -119, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 54
        0, -120, -120, 0, -120, 0, 9, 0, -120, 10, 0, 0, 0, 0, -120, -120, 0, -120, -120, -120, 0, -120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -120, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 55
        0, -122, -122, 0, -122, 0, 9, 0, -122, 10, 0, 0, 0, 0, -122, -122, 0, -122, -122, -122, 0, -122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -122, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 56
        0, -118, -118, 0, -118, 0, 9, 0, -118, 10, 0, 0, 0, 0, -118, -118, 0, -118, -118, -118, 0, -118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -118, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 57
        0, -121, -121, 0, -121, 0, 9, 0, -121, 10, 0, 0, 0, 0, -121, -121, 0, -121, -121, -121, 0, -121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -121, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 58
        0, -123, -123, 0, -123, 0, 9, 0, -123, 10, 0, 0, 0, 0, -123, -123, 0, -123, -123, -123, 0, -123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -123, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 59
        0, 11, -125, 0, -125, 0, 0, 0, -125, 0, 0, 0, 0, 0, 12, 13, 0, 14, 15, 16, 0, -125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -125, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 60
        0, 0, 0, 0, -207, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 61
        -41, 0, 0, -41, -41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -41, 0, 0, 0, 0, 0, 0, 0, -41, -41, 0, -41, -41,
        // State 62
        0, -102, -102, -102, -102, -102, -102, 0, -102, -102, 0, -102, -102, 0, -102, -102, 0, -102, -102, -102, -102, -102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -102, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 63
        0, 0, 0, 0, -203, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 64
        -30, 0, 0, -30, -30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, 0, 0, 0, 0, 0, 0, 0, -30, -30, 0, -30, -30,
        // State 65
        0, -106, -106, -106, -106, -106, -106, 0, -106, -106, 0, -106, -106, 0, -106, -106, 0, -106, -106, -106, -106, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -106, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 66
        0, -105, -105, -105, -105, -105, -105, 0, -105, -105, 0, -105, -105, 0, -105, -105, 0, -105, -105, -105, -105, -105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -105, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 67
        -42, 0, 0, -42, -42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -42, 0, 0, 0, 0, 0, 0, 0, -42, -42, 0, -42, -42,
        // State 68
        0, 0, 0, 0, -179, 0, 0, 0, -179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 69
        -31, 0, 0, -31, -31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -31, 0, 0, 0, 0, 0, 0, 0, -31, -31, 0, -31, -31,
        // State 70
        0, 0, 0, 0, -83, 0, 0, 0, -83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ];
    fn __action(state: i16, integer: usize) -> i16 {
        __ACTION[(state as usize) * 46 + integer]
    }
    const __EOF_ACTION: &[i16] = &[
        // State 0
        0,
        // State 1
        0,
        // State 2
        0,
        // State 3
        0,
        // State 4
        0,
        // State 5
        0,
        // State 6
        0,
        // State 7
        0,
        // State 8
        0,
        // State 9
        0,
        // State 10
        0,
        // State 11
        0,
        // State 12
        0,
        // State 13
        0,
        // State 14
        0,
        // State 15
        0,
        // State 16
        0,
        // State 17
        0,
        // State 18
        0,
        // State 19
        0,
        // State 20
        0,
        // State 21
        -164,
        // State 22
        -110,
        // State 23
        -112,
        // State 24
        -114,
        // State 25
        -117,
        // State 26
        -124,
        // State 27
        -126,
        // State 28
        -98,
        // State 29
        -266,
        // State 30
        -99,
        // State 31
        -103,
        // State 32
        -100,
        // State 33
        -104,
        // State 34
        -101,
        // State 35
        0,
        // State 36
        -111,
        // State 37
        0,
        // State 38
        0,
        // State 39
        0,
        // State 40
        0,
        // State 41
        -97,
        // State 42
        0,
        // State 43
        0,
        // State 44
        0,
        // State 45
        0,
        // State 46
        -107,
        // State 47
        -108,
        // State 48
        0,
        // State 49
        -109,
        // State 50
        -113,
        // State 51
        -115,
        // State 52
        -116,
        // State 53
        -119,
        // State 54
        -120,
        // State 55
        -122,
        // State 56
        -118,
        // State 57
        -121,
        // State 58
        -123,
        // State 59
        -125,
        // State 60
        0,
        // State 61
        0,
        // State 62
        -102,
        // State 63
        0,
        // State 64
        0,
        // State 65
        -106,
        // State 66
        -105,
        // State 67
        0,
        // State 68
        0,
        // State 69
        0,
        // State 70
        0,
    ];
    fn __goto(state: i16, nt: usize) -> i16 {
        match nt {
            17 => 18,
            24 => 17,
            48 => match state {
                18 => 63,
                _ => 42,
            },
            54 => 21,
            55 => match state {
                6 => 49,
                _ => 22,
            },
            56 => 23,
            57 => match state {
                1 => 36,
                7 => 50,
                _ => 24,
            },
            58 => match state {
                8 => 51,
                9 => 52,
                _ => 25,
            },
            59 => match state {
                10 => 53,
                11 => 54,
                12 => 55,
                13 => 56,
                14 => 57,
                15 => 58,
                _ => 26,
            },
            60 => match state {
                16 => 59,
                _ => 27,
            },
            61 => match state {
                3 => 41,
                _ => 28,
            },
            64 => match state {
                0 => 29,
                4 | 18 => 43,
                5 => 48,
                19 => 68,
                20 => 70,
                _ => 37,
            },
            74 => match state {
                17 => 60,
                _ => 38,
            },
            82 => 44,
            83 => 39,
            _ => 0,
        }
    }
    const __TERMINAL: &[&str] = &[
        r###""!""###,
        r###""!=""###,
        r###""&&""###,
        r###""(""###,
        r###"")""###,
        r###""*""###,
        r###""+""###,
        r###""+=""###,
        r###"",""###,
        r###""-""###,
        r###""-=""###,
        r###"".""###,
        r###""..""###,
        r###"":""###,
        r###""<""###,
        r###""<=""###,
        r###""=""###,
        r###""==""###,
        r###"">""###,
        r###"">=""###,
        r###""[""###,
        r###""]""###,
        r###""_""###,
        r###""elif""###,
        r###""else""###,
        r###""fn""###,
        r###""for""###,
        r###""if""###,
        r###""import""###,
        r###""in""###,
        r###""let""###,
        r###""match""###,
        r###""return""###,
        r###""self""###,
        r###""type""###,
        r###""while""###,
        r###""{""###,
        r###""||""###,
        r###""}""###,
        r###"DEDENT"###,
        r###"INDENT"###,
        r###"IntLit"###,
        r###"LowerId"###,
        r###"NEWLINE"###,
        r###"StringLit"###,
        r###"UpperId"###,
    ];
    fn __expected_tokens(__state: i16) -> alloc::vec::Vec<alloc::string::String> {
        __TERMINAL.iter().enumerate().filter_map(|(index, terminal)| {
            let next_state = __action(__state, index);
            if next_state == 0 {
                None
            } else {
                Some(alloc::string::ToString::to_string(terminal))
            }
        }).collect()
    }
    fn __expected_tokens_from_states<
        'input,
    >(
        __states: &[i16],
        _: core::marker::PhantomData<(&'input ())>,
    ) -> alloc::vec::Vec<alloc::string::String>
    {
        __TERMINAL.iter().enumerate().filter_map(|(index, terminal)| {
            if __accepts(None, __states, Some(index), core::marker::PhantomData::<(&())>) {
                Some(alloc::string::ToString::to_string(terminal))
            } else {
                None
            }
        }).collect()
    }
    struct __StateMachine<'input>
    where 
    {
        __phantom: core::marker::PhantomData<(&'input ())>,
    }
    impl<'input> __state_machine::ParserDefinition for __StateMachine<'input>
    where 
    {
        type Location = Loc;
        type Error = LexerError<Infallible>;
        type Token = Token<'input>;
        type TokenIndex = usize;
        type Symbol = __Symbol<'input>;
        type Success = L<Expr>;
        type StateIndex = i16;
        type Action = i16;
        type ReduceIndex = i16;
        type NonterminalIndex = usize;

        #[inline]
        fn start_location(&self) -> Self::Location {
              Default::default()
        }

        #[inline]
        fn start_state(&self) -> Self::StateIndex {
              0
        }

        #[inline]
        fn token_to_index(&self, token: &Self::Token) -> Option<usize> {
            __token_to_integer(token, core::marker::PhantomData::<(&())>)
        }

        #[inline]
        fn action(&self, state: i16, integer: usize) -> i16 {
            __action(state, integer)
        }

        #[inline]
        fn error_action(&self, state: i16) -> i16 {
            __action(state, 46 - 1)
        }

        #[inline]
        fn eof_action(&self, state: i16) -> i16 {
            __EOF_ACTION[state as usize]
        }

        #[inline]
        fn goto(&self, state: i16, nt: usize) -> i16 {
            __goto(state, nt)
        }

        fn token_to_symbol(&self, token_index: usize, token: Self::Token) -> Self::Symbol {
            __token_to_symbol(token_index, token, core::marker::PhantomData::<(&())>)
        }

        fn expected_tokens(&self, state: i16) -> alloc::vec::Vec<alloc::string::String> {
            __expected_tokens(state)
        }

        fn expected_tokens_from_states(&self, states: &[i16]) -> alloc::vec::Vec<alloc::string::String> {
            __expected_tokens_from_states(states, core::marker::PhantomData::<(&())>)
        }

        #[inline]
        fn uses_error_recovery(&self) -> bool {
            false
        }

        #[inline]
        fn error_recovery_symbol(
            &self,
            recovery: __state_machine::ErrorRecovery<Self>,
        ) -> Self::Symbol {
            panic!("error recovery not enabled for this grammar")
        }

        fn reduce(
            &mut self,
            action: i16,
            start_location: Option<&Self::Location>,
            states: &mut alloc::vec::Vec<i16>,
            symbols: &mut alloc::vec::Vec<__state_machine::SymbolTriple<Self>>,
        ) -> Option<__state_machine::ParseResult<Self>> {
            __reduce(
                action,
                start_location,
                states,
                symbols,
                core::marker::PhantomData::<(&())>,
            )
        }

        fn simulate_reduce(&self, action: i16) -> __state_machine::SimulatedReduce<Self> {
            __simulate_reduce(action, core::marker::PhantomData::<(&())>)
        }
    }
    fn __token_to_integer<
        'input,
    >(
        __token: &Token<'input>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> Option<usize>
    {
        match *__token {
            Token { kind: TokenKind::Exclamation, .. } if true => Some(0),
            Token { kind: TokenKind::ExclamationEq, .. } if true => Some(1),
            Token { kind: TokenKind::AmpAmp, .. } if true => Some(2),
            Token { kind: TokenKind::LParen, .. } if true => Some(3),
            Token { kind: TokenKind::RParen, .. } if true => Some(4),
            Token { kind: TokenKind::Star, .. } if true => Some(5),
            Token { kind: TokenKind::Plus, .. } if true => Some(6),
            Token { kind: TokenKind::PlusEq, .. } if true => Some(7),
            Token { kind: TokenKind::Comma, .. } if true => Some(8),
            Token { kind: TokenKind::Minus, .. } if true => Some(9),
            Token { kind: TokenKind::MinusEq, .. } if true => Some(10),
            Token { kind: TokenKind::Dot, .. } if true => Some(11),
            Token { kind: TokenKind::DotDot, .. } if true => Some(12),
            Token { kind: TokenKind::Colon, .. } if true => Some(13),
            Token { kind: TokenKind::LAngle, .. } if true => Some(14),
            Token { kind: TokenKind::LAngleEq, .. } if true => Some(15),
            Token { kind: TokenKind::Eq, .. } if true => Some(16),
            Token { kind: TokenKind::EqEq, .. } if true => Some(17),
            Token { kind: TokenKind::RAngle, .. } if true => Some(18),
            Token { kind: TokenKind::RAngleEq, .. } if true => Some(19),
            Token { kind: TokenKind::LBracket, .. } if true => Some(20),
            Token { kind: TokenKind::RBracket, .. } if true => Some(21),
            Token { kind: TokenKind::Underscore, .. } if true => Some(22),
            Token { kind: TokenKind::Elif, .. } if true => Some(23),
            Token { kind: TokenKind::Else, .. } if true => Some(24),
            Token { kind: TokenKind::Fn, .. } if true => Some(25),
            Token { kind: TokenKind::For, .. } if true => Some(26),
            Token { kind: TokenKind::If, .. } if true => Some(27),
            Token { kind: TokenKind::Import, .. } if true => Some(28),
            Token { kind: TokenKind::In, .. } if true => Some(29),
            Token { kind: TokenKind::Let, .. } if true => Some(30),
            Token { kind: TokenKind::Match, .. } if true => Some(31),
            Token { kind: TokenKind::Return, .. } if true => Some(32),
            Token { kind: TokenKind::Self_, .. } if true => Some(33),
            Token { kind: TokenKind::Type, .. } if true => Some(34),
            Token { kind: TokenKind::While, .. } if true => Some(35),
            Token { kind: TokenKind::LBrace, .. } if true => Some(36),
            Token { kind: TokenKind::PipePipe, .. } if true => Some(37),
            Token { kind: TokenKind::RBrace, .. } if true => Some(38),
            Token { kind: TokenKind::Dedent, .. } if true => Some(39),
            Token { kind: TokenKind::Indent, .. } if true => Some(40),
            Token { kind: TokenKind::Int, .. } if true => Some(41),
            Token { kind: TokenKind::LowerId, .. } if true => Some(42),
            Token { kind: TokenKind::Newline, .. } if true => Some(43),
            Token { kind: TokenKind::String, .. } if true => Some(44),
            Token { kind: TokenKind::UpperId, .. } if true => Some(45),
            _ => None,
        }
    }
    fn __token_to_symbol<
        'input,
    >(
        __token_index: usize,
        __token: Token<'input>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> __Symbol<'input>
    {
        #[allow(clippy::manual_range_patterns)]match __token_index {
            0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 => __Symbol::Variant0(__token),
            _ => unreachable!(),
        }
    }
    fn __simulate_reduce<
        'input,
    >(
        __reduce_index: i16,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> __state_machine::SimulatedReduce<__StateMachine<'input>>
    {
        match __reduce_index {
            0 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 0,
                }
            }
            1 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 0,
                }
            }
            2 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 1,
                }
            }
            3 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 2,
                }
            }
            4 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 2,
                }
            }
            5 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 3,
                }
            }
            6 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 4,
                }
            }
            7 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 4,
                }
            }
            8 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 5,
                }
            }
            9 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 6,
                }
            }
            10 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 6,
                }
            }
            11 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 7,
                }
            }
            12 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 7,
                }
            }
            13 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 8,
                }
            }
            14 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 9,
                }
            }
            15 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 9,
                }
            }
            16 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 10,
                }
            }
            17 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 10,
                }
            }
            18 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 11,
                }
            }
            19 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 11,
                }
            }
            20 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 11,
                }
            }
            21 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 12,
                }
            }
            22 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 13,
                }
            }
            23 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 13,
                }
            }
            24 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 14,
                }
            }
            25 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 14,
                }
            }
            26 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 15,
                }
            }
            27 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 16,
                }
            }
            28 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 16,
                }
            }
            29 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 17,
                }
            }
            30 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 17,
                }
            }
            31 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 18,
                }
            }
            32 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 19,
                }
            }
            33 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 19,
                }
            }
            34 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 20,
                }
            }
            35 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 21,
                }
            }
            36 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 21,
                }
            }
            37 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 22,
                }
            }
            38 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 23,
                }
            }
            39 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 23,
                }
            }
            40 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 24,
                }
            }
            41 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 24,
                }
            }
            42 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 25,
                }
            }
            43 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 26,
                }
            }
            44 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 26,
                }
            }
            45 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 27,
                }
            }
            46 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 27,
                }
            }
            47 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 28,
                }
            }
            48 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 29,
                }
            }
            49 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 29,
                }
            }
            50 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 30,
                }
            }
            51 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 30,
                }
            }
            52 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 31,
                }
            }
            53 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 32,
                }
            }
            54 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 32,
                }
            }
            55 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 33,
                }
            }
            56 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 33,
                }
            }
            57 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 34,
                }
            }
            58 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 35,
                }
            }
            59 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 35,
                }
            }
            60 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 36,
                }
            }
            61 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 36,
                }
            }
            62 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 37,
                }
            }
            63 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 38,
                }
            }
            64 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 38,
                }
            }
            65 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 39,
                }
            }
            66 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 39,
                }
            }
            67 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 40,
                }
            }
            68 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 40,
                }
            }
            69 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 41,
                }
            }
            70 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 42,
                }
            }
            71 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 43,
                }
            }
            72 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 43,
                }
            }
            73 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 44,
                }
            }
            74 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 44,
                }
            }
            75 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 45,
                }
            }
            76 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 45,
                }
            }
            77 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 46,
                }
            }
            78 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 46,
                }
            }
            79 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 47,
                }
            }
            80 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 47,
                }
            }
            81 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 47,
                }
            }
            82 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 48,
                }
            }
            83 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 48,
                }
            }
            84 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 49,
                }
            }
            85 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 49,
                }
            }
            86 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 50,
                }
            }
            87 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 50,
                }
            }
            88 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 51,
                }
            }
            89 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 51,
                }
            }
            90 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 52,
                }
            }
            91 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 52,
                }
            }
            92 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 52,
                }
            }
            93 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 52,
                }
            }
            94 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 53,
                }
            }
            95 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 53,
                }
            }
            96 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 54,
                }
            }
            97 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 54,
                }
            }
            98 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            99 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            100 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            101 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 55,
                }
            }
            102 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            103 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            104 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 55,
                }
            }
            105 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 55,
                }
            }
            106 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 55,
                }
            }
            107 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 55,
                }
            }
            108 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 56,
                }
            }
            109 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 56,
                }
            }
            110 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 57,
                }
            }
            111 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 57,
                }
            }
            112 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 58,
                }
            }
            113 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 58,
                }
            }
            114 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 59,
                }
            }
            115 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 59,
                }
            }
            116 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 59,
                }
            }
            117 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 60,
                }
            }
            118 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 60,
                }
            }
            119 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 60,
                }
            }
            120 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 60,
                }
            }
            121 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 60,
                }
            }
            122 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 60,
                }
            }
            123 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 60,
                }
            }
            124 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 61,
                }
            }
            125 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 61,
                }
            }
            126 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 16,
                    nonterminal_produced: 62,
                }
            }
            127 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 62,
                }
            }
            128 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 15,
                    nonterminal_produced: 62,
                }
            }
            129 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 62,
                }
            }
            130 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 62,
                }
            }
            131 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 62,
                }
            }
            132 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 62,
                }
            }
            133 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 62,
                }
            }
            134 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 62,
                }
            }
            135 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 62,
                }
            }
            136 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 62,
                }
            }
            137 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 62,
                }
            }
            138 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 22,
                    nonterminal_produced: 62,
                }
            }
            139 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 20,
                    nonterminal_produced: 62,
                }
            }
            140 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 21,
                    nonterminal_produced: 62,
                }
            }
            141 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 19,
                    nonterminal_produced: 62,
                }
            }
            142 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 20,
                    nonterminal_produced: 62,
                }
            }
            143 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 18,
                    nonterminal_produced: 62,
                }
            }
            144 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 19,
                    nonterminal_produced: 62,
                }
            }
            145 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 17,
                    nonterminal_produced: 62,
                }
            }
            146 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 18,
                    nonterminal_produced: 62,
                }
            }
            147 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 16,
                    nonterminal_produced: 62,
                }
            }
            148 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 17,
                    nonterminal_produced: 62,
                }
            }
            149 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 15,
                    nonterminal_produced: 62,
                }
            }
            150 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 20,
                    nonterminal_produced: 62,
                }
            }
            151 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 18,
                    nonterminal_produced: 62,
                }
            }
            152 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 19,
                    nonterminal_produced: 62,
                }
            }
            153 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 17,
                    nonterminal_produced: 62,
                }
            }
            154 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 18,
                    nonterminal_produced: 62,
                }
            }
            155 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 16,
                    nonterminal_produced: 62,
                }
            }
            156 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 17,
                    nonterminal_produced: 62,
                }
            }
            157 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 15,
                    nonterminal_produced: 62,
                }
            }
            158 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 16,
                    nonterminal_produced: 62,
                }
            }
            159 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 62,
                }
            }
            160 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 15,
                    nonterminal_produced: 62,
                }
            }
            161 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 62,
                }
            }
            162 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 63,
                }
            }
            163 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 64,
                }
            }
            164 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 65,
                }
            }
            165 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 66,
                }
            }
            166 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 67,
                }
            }
            167 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 67,
                }
            }
            168 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 68,
                }
            }
            169 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 68,
                }
            }
            170 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 69,
                }
            }
            171 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            172 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 70,
                }
            }
            173 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 70,
                }
            }
            174 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 71,
                }
            }
            175 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 71,
                }
            }
            176 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 72,
                }
            }
            177 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 73,
                }
            }
            178 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            179 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 74,
                }
            }
            180 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 75,
                }
            }
            181 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 75,
                }
            }
            182 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 76,
                }
            }
            183 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 76,
                }
            }
            184 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 76,
                }
            }
            185 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 76,
                }
            }
            186 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 76,
                }
            }
            187 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 76,
                }
            }
            188 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 77,
                }
            }
            189 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 77,
                }
            }
            190 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 78,
                }
            }
            191 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 78,
                }
            }
            192 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 79,
                }
            }
            193 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 79,
                }
            }
            194 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 80,
                }
            }
            195 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 80,
                }
            }
            196 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 81,
                }
            }
            197 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 81,
                }
            }
            198 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 81,
                }
            }
            199 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 81,
                }
            }
            200 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 82,
                }
            }
            201 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 82,
                }
            }
            202 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 82,
                }
            }
            203 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 82,
                }
            }
            204 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 83,
                }
            }
            205 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 83,
                }
            }
            206 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 83,
                }
            }
            207 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 83,
                }
            }
            208 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 84,
                }
            }
            209 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 84,
                }
            }
            210 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 84,
                }
            }
            211 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 84,
                }
            }
            212 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 85,
                }
            }
            213 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 85,
                }
            }
            214 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 85,
                }
            }
            215 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 85,
                }
            }
            216 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 86,
                }
            }
            217 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 86,
                }
            }
            218 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 86,
                }
            }
            219 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 86,
                }
            }
            220 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 87,
                }
            }
            221 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 87,
                }
            }
            222 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 87,
                }
            }
            223 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 87,
                }
            }
            224 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 88,
                }
            }
            225 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 88,
                }
            }
            226 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 88,
                }
            }
            227 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 88,
                }
            }
            228 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 89,
                }
            }
            229 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 89,
                }
            }
            230 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 89,
                }
            }
            231 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 89,
                }
            }
            232 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 89,
                }
            }
            233 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 89,
                }
            }
            234 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 89,
                }
            }
            235 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 89,
                }
            }
            236 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 89,
                }
            }
            237 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 89,
                }
            }
            238 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 89,
                }
            }
            239 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 89,
                }
            }
            240 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 90,
                }
            }
            241 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 90,
                }
            }
            242 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 90,
                }
            }
            243 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 90,
                }
            }
            244 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 91,
                }
            }
            245 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 91,
                }
            }
            246 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 92,
                }
            }
            247 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 92,
                }
            }
            248 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 93,
                }
            }
            249 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 93,
                }
            }
            250 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 94,
                }
            }
            251 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 94,
                }
            }
            252 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 94,
                }
            }
            253 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 95,
                }
            }
            254 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 95,
                }
            }
            255 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 96,
                }
            }
            256 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 97,
                }
            }
            257 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 98,
                }
            }
            258 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 98,
                }
            }
            259 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 99,
                }
            }
            260 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 99,
                }
            }
            261 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 100,
                }
            }
            262 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 100,
                }
            }
            263 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 101,
                }
            }
            264 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 101,
                }
            }
            265 => __state_machine::SimulatedReduce::Accept,
            266 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 103,
                }
            }
            _ => panic!("invalid reduction index {}", __reduce_index)
        }
    }
    pub struct LExprParser {
        _priv: (),
    }

    impl Default for LExprParser { fn default() -> Self { Self::new() } }
    impl LExprParser {
        pub fn new() -> LExprParser {
            LExprParser {
                _priv: (),
            }
        }

        #[allow(dead_code)]
        pub fn parse<
            'input,
            __TOKEN: __ToTriple<'input, >,
            __TOKENS: IntoIterator<Item=__TOKEN>,
        >(
            &self,
            __tokens0: __TOKENS,
        ) -> Result<L<Expr>, __lalrpop_util::ParseError<Loc, Token<'input>, LexerError<Infallible>>>
        {
            let __tokens = __tokens0.into_iter();
            let mut __tokens = __tokens.map(|t| __ToTriple::to_triple(t));
            __state_machine::Parser::drive(
                __StateMachine {
                    __phantom: core::marker::PhantomData::<(&())>,
                },
                __tokens,
            )
        }
    }
    fn __accepts<
        'input,
    >(
        __error_state: Option<i16>,
        __states: &[i16],
        __opt_integer: Option<usize>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> bool
    {
        let mut __states = __states.to_vec();
        __states.extend(__error_state);
        loop {
            let mut __states_len = __states.len();
            let __top = __states[__states_len - 1];
            let __action = match __opt_integer {
                None => __EOF_ACTION[__top as usize],
                Some(__integer) => __action(__top, __integer),
            };
            if __action == 0 { return false; }
            if __action > 0 { return true; }
            let (__to_pop, __nt) = match __simulate_reduce(-(__action + 1), core::marker::PhantomData::<(&())>) {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop, nonterminal_produced
                } => (states_to_pop, nonterminal_produced),
                __state_machine::SimulatedReduce::Accept => return true,
            };
            __states_len -= __to_pop;
            __states.truncate(__states_len);
            let __top = __states[__states_len - 1];
            let __next_state = __goto(__top, __nt);
            __states.push(__next_state);
        }
    }
    fn __reduce<
        'input,
    >(
        __action: i16,
        __lookahead_start: Option<&Loc>,
        __states: &mut alloc::vec::Vec<i16>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> Option<Result<L<Expr>,__lalrpop_util::ParseError<Loc, Token<'input>, LexerError<Infallible>>>>
    {
        let (__pop_states, __nonterminal) = match __action {
            0 => {
                __reduce0(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            1 => {
                __reduce1(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            2 => {
                __reduce2(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            3 => {
                __reduce3(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            4 => {
                __reduce4(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            5 => {
                __reduce5(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            6 => {
                __reduce6(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            7 => {
                __reduce7(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            8 => {
                __reduce8(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            9 => {
                __reduce9(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            10 => {
                __reduce10(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            11 => {
                __reduce11(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            12 => {
                __reduce12(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            13 => {
                __reduce13(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            14 => {
                __reduce14(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            15 => {
                __reduce15(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            16 => {
                __reduce16(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            17 => {
                __reduce17(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            18 => {
                __reduce18(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            19 => {
                __reduce19(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            20 => {
                __reduce20(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            21 => {
                __reduce21(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            22 => {
                __reduce22(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            23 => {
                __reduce23(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            24 => {
                __reduce24(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            25 => {
                __reduce25(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            26 => {
                __reduce26(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            27 => {
                __reduce27(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            28 => {
                __reduce28(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            29 => {
                __reduce29(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            30 => {
                __reduce30(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            31 => {
                __reduce31(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            32 => {
                __reduce32(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            33 => {
                __reduce33(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            34 => {
                __reduce34(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            35 => {
                __reduce35(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            36 => {
                __reduce36(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            37 => {
                __reduce37(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            38 => {
                __reduce38(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            39 => {
                __reduce39(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            40 => {
                __reduce40(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            41 => {
                __reduce41(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            42 => {
                __reduce42(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            43 => {
                __reduce43(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            44 => {
                __reduce44(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            45 => {
                __reduce45(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            46 => {
                __reduce46(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            47 => {
                __reduce47(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            48 => {
                __reduce48(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            49 => {
                __reduce49(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            50 => {
                __reduce50(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            51 => {
                __reduce51(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            52 => {
                __reduce52(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            53 => {
                __reduce53(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            54 => {
                __reduce54(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            55 => {
                __reduce55(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            56 => {
                __reduce56(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            57 => {
                __reduce57(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            58 => {
                __reduce58(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            59 => {
                __reduce59(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            60 => {
                __reduce60(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            61 => {
                __reduce61(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            62 => {
                __reduce62(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            63 => {
                __reduce63(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            64 => {
                __reduce64(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            65 => {
                __reduce65(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            66 => {
                __reduce66(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            67 => {
                __reduce67(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            68 => {
                __reduce68(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            69 => {
                __reduce69(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            70 => {
                __reduce70(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            71 => {
                __reduce71(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            72 => {
                __reduce72(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            73 => {
                __reduce73(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            74 => {
                __reduce74(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            75 => {
                __reduce75(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            76 => {
                __reduce76(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            77 => {
                __reduce77(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            78 => {
                __reduce78(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            79 => {
                __reduce79(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            80 => {
                __reduce80(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            81 => {
                __reduce81(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            82 => {
                __reduce82(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            83 => {
                __reduce83(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            84 => {
                __reduce84(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            85 => {
                __reduce85(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            86 => {
                __reduce86(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            87 => {
                __reduce87(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            88 => {
                __reduce88(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            89 => {
                __reduce89(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            90 => {
                __reduce90(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            91 => {
                __reduce91(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            92 => {
                __reduce92(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            93 => {
                __reduce93(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            94 => {
                __reduce94(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            95 => {
                __reduce95(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            96 => {
                __reduce96(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            97 => {
                __reduce97(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            98 => {
                __reduce98(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            99 => {
                __reduce99(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            100 => {
                __reduce100(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            101 => {
                __reduce101(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            102 => {
                __reduce102(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            103 => {
                __reduce103(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            104 => {
                __reduce104(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            105 => {
                __reduce105(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            106 => {
                __reduce106(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            107 => {
                __reduce107(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            108 => {
                __reduce108(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            109 => {
                __reduce109(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            110 => {
                __reduce110(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            111 => {
                __reduce111(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            112 => {
                __reduce112(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            113 => {
                __reduce113(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            114 => {
                __reduce114(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            115 => {
                __reduce115(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            116 => {
                __reduce116(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            117 => {
                __reduce117(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            118 => {
                __reduce118(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            119 => {
                __reduce119(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            120 => {
                __reduce120(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            121 => {
                __reduce121(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            122 => {
                __reduce122(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            123 => {
                __reduce123(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            124 => {
                __reduce124(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            125 => {
                __reduce125(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            126 => {
                __reduce126(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            127 => {
                __reduce127(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            128 => {
                __reduce128(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            129 => {
                __reduce129(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            130 => {
                __reduce130(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            131 => {
                __reduce131(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            132 => {
                __reduce132(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            133 => {
                __reduce133(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            134 => {
                __reduce134(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            135 => {
                __reduce135(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            136 => {
                __reduce136(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            137 => {
                __reduce137(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            138 => {
                __reduce138(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            139 => {
                __reduce139(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            140 => {
                __reduce140(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            141 => {
                __reduce141(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            142 => {
                __reduce142(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            143 => {
                __reduce143(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            144 => {
                __reduce144(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            145 => {
                __reduce145(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            146 => {
                __reduce146(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            147 => {
                __reduce147(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            148 => {
                __reduce148(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            149 => {
                __reduce149(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            150 => {
                __reduce150(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            151 => {
                __reduce151(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            152 => {
                __reduce152(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            153 => {
                __reduce153(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            154 => {
                __reduce154(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            155 => {
                __reduce155(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            156 => {
                __reduce156(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            157 => {
                __reduce157(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            158 => {
                __reduce158(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            159 => {
                __reduce159(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            160 => {
                __reduce160(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            161 => {
                __reduce161(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            162 => {
                __reduce162(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            163 => {
                __reduce163(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            164 => {
                __reduce164(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            165 => {
                __reduce165(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            166 => {
                __reduce166(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            167 => {
                __reduce167(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            168 => {
                __reduce168(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            169 => {
                __reduce169(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            170 => {
                __reduce170(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            171 => {
                __reduce171(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            172 => {
                __reduce172(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            173 => {
                __reduce173(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            174 => {
                __reduce174(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            175 => {
                __reduce175(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            176 => {
                __reduce176(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            177 => {
                __reduce177(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            178 => {
                __reduce178(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            179 => {
                __reduce179(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            180 => {
                __reduce180(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            181 => {
                __reduce181(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            182 => {
                __reduce182(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            183 => {
                __reduce183(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            184 => {
                __reduce184(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            185 => {
                __reduce185(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            186 => {
                __reduce186(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            187 => {
                __reduce187(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            188 => {
                __reduce188(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            189 => {
                __reduce189(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            190 => {
                __reduce190(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            191 => {
                __reduce191(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            192 => {
                __reduce192(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            193 => {
                __reduce193(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            194 => {
                __reduce194(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            195 => {
                __reduce195(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            196 => {
                __reduce196(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            197 => {
                __reduce197(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            198 => {
                __reduce198(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            199 => {
                __reduce199(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            200 => {
                __reduce200(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            201 => {
                __reduce201(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            202 => {
                __reduce202(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            203 => {
                __reduce203(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            204 => {
                __reduce204(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            205 => {
                __reduce205(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            206 => {
                __reduce206(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            207 => {
                __reduce207(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            208 => {
                __reduce208(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            209 => {
                __reduce209(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            210 => {
                __reduce210(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            211 => {
                __reduce211(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            212 => {
                __reduce212(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            213 => {
                __reduce213(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            214 => {
                __reduce214(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            215 => {
                __reduce215(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            216 => {
                __reduce216(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            217 => {
                __reduce217(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            218 => {
                __reduce218(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            219 => {
                __reduce219(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            220 => {
                __reduce220(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            221 => {
                __reduce221(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            222 => {
                __reduce222(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            223 => {
                __reduce223(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            224 => {
                __reduce224(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            225 => {
                __reduce225(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            226 => {
                __reduce226(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            227 => {
                __reduce227(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            228 => {
                __reduce228(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            229 => {
                __reduce229(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            230 => {
                __reduce230(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            231 => {
                __reduce231(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            232 => {
                __reduce232(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            233 => {
                __reduce233(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            234 => {
                __reduce234(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            235 => {
                __reduce235(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            236 => {
                __reduce236(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            237 => {
                __reduce237(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            238 => {
                __reduce238(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            239 => {
                __reduce239(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            240 => {
                __reduce240(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            241 => {
                __reduce241(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            242 => {
                __reduce242(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            243 => {
                __reduce243(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            244 => {
                __reduce244(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            245 => {
                __reduce245(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            246 => {
                __reduce246(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            247 => {
                __reduce247(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            248 => {
                __reduce248(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            249 => {
                __reduce249(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            250 => {
                __reduce250(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            251 => {
                __reduce251(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            252 => {
                __reduce252(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            253 => {
                __reduce253(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            254 => {
                __reduce254(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            255 => {
                __reduce255(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            256 => {
                __reduce256(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            257 => {
                __reduce257(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            258 => {
                __reduce258(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            259 => {
                __reduce259(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            260 => {
                __reduce260(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            261 => {
                __reduce261(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            262 => {
                __reduce262(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            263 => {
                __reduce263(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            264 => {
                __reduce264(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            265 => {
                // __LExpr = LExpr => ActionFn(0);
                let __sym0 = __pop_Variant40(__symbols);
                let __start = __sym0.0;
                let __end = __sym0.2;
                let __nt = super::__action0::<>(__sym0);
                return Some(Ok(__nt));
            }
            266 => {
                __reduce266(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            _ => panic!("invalid action code {}", __action)
        };
        let __states_len = __states.len();
        __states.truncate(__states_len - __pop_states);
        let __state = *__states.last().unwrap();
        let __next_state = __goto(__state, __nonterminal);
        __states.push(__next_state);
        None
    }
    #[inline(never)]
    fn __symbol_type_mismatch() -> ! {
        panic!("symbol type mismatch")
    }
    fn __pop_Variant6<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (L<Expr>, Vec<L<Stmt>>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant6(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant19<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (Option<SmolStr>, L<Expr>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant19(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant21<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (Option<SmolStr>, L<Pat>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant21(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant17<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (SmolStr, Type), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant17(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant12<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (Token<'input>, Type), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant12(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant4<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (Token<'input>, Vec<Type>, Token<'input>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant4(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant10<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (Token<'input>, core::option::Option<Token<'input>>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant10(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant28<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Alt, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant28(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant31<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, AssignOp, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant31(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant14<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, CallArg, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant14(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant33<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, ConstrPattern, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant33(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant34<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Constructor, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant34(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant35<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, ConstructorDecl, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant35(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant37<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Expr, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant37(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant40<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<Expr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant40(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant38<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<FunDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant38(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant39<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<ImportDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant39(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant41<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<Pat>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant41(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant42<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<Stmt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant42(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant57<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<TopDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant57(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant61<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<TypeDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant61(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant27<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Loc, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant27(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant23<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Named<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant23(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant46<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Pat, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant46(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant56<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Stmt, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant56(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant0<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Token<'input>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant0(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant2<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Type, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant2(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant62<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, TypeDeclRhs, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant62(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant51<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant51(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant52<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant52(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant44<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<(SmolStr, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant44(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant49<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<(Token<'input>, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant49(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant30<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<Alt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant30(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant50<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant50(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant60<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<ConstructorDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant60(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant8<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<L<Stmt>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant8(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant59<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<L<TopDecl>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant59(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant53<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant53(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant63<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<SmolStr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant63(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant55<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<Token<'input>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant55(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant54<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant54(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant7<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant7(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant20<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant20(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant22<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant22(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant18<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(SmolStr, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant18(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant13<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Token<'input>, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant13(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant29<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Alt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant29(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant15<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant15(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant36<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<ConstructorDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant36(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant43<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<Stmt>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant43(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant58<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<TopDecl>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant58(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant24<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant24(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant26<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Token<'input>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant26(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant25<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant25(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant45<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant45(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant47<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant47(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant16<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<(Token<'input>, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant16(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant5<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<(Token<'input>, Vec<Type>, Token<'input>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant5(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant11<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant11(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant32<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant32(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant48<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant48(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant1<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<Token<'input>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant1(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant3<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant3(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant9<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<Vec<L<Stmt>>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant9(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __reduce0<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ","? = "," => ActionFn(127);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action127::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (1, 0)
    }
    fn __reduce1<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ","? =  => ActionFn(128);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action128::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (0, 0)
    }
    fn __reduce2<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (":" <Type>) = ":", Type => ActionFn(113);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action113::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 1)
    }
    fn __reduce3<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (":" <Type>)? = ":", Type => ActionFn(201);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action201::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (2, 2)
    }
    fn __reduce4<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (":" <Type>)? =  => ActionFn(112);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action112::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (0, 2)
    }
    fn __reduce5<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("[" Sep<Type, ","> "]") = "[", Sep<Type, ",">, "]" => ActionFn(110);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant54(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action110::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 3)
    }
    fn __reduce6<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("[" Sep<Type, ","> "]")? = "[", Sep<Type, ",">, "]" => ActionFn(208);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant54(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action208::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant5(__nt), __end));
        (3, 4)
    }
    fn __reduce7<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("[" Sep<Type, ","> "]")? =  => ActionFn(109);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action109::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant5(__nt), __end));
        (0, 4)
    }
    fn __reduce8<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT) = "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(105);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action105::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (7, 5)
    }
    fn __reduce9<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)* =  => ActionFn(103);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action103::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (0, 6)
    }
    fn __reduce10<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)* = ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ => ActionFn(104);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action104::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (1, 6)
    }
    fn __reduce11<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ = "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(213);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action213::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (7, 7)
    }
    fn __reduce12<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ = ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+, "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(214);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant8(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant40(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action214::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (8, 7)
    }
    fn __reduce13<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT) = "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(102);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant8(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action102::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant8(__nt), __end));
        (6, 8)
    }
    fn __reduce14<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT)? = "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(217);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant8(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action217::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (6, 9)
    }
    fn __reduce15<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT)? =  => ActionFn(101);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action101::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (0, 9)
    }
    fn __reduce16<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?) = "self", "," => ActionFn(197);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action197::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (2, 10)
    }
    fn __reduce17<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?) = "self" => ActionFn(198);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action198::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (1, 10)
    }
    fn __reduce18<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? = "self", "," => ActionFn(222);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action222::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (2, 11)
    }
    fn __reduce19<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? = "self" => ActionFn(223);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action223::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (1, 11)
    }
    fn __reduce20<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? =  => ActionFn(117);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action117::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (0, 11)
    }
    fn __reduce21<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <Type>)> ",") = LowerId, ":", Type, "," => ActionFn(242);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action242::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (4, 12)
    }
    fn __reduce22<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <Type>)> ",")* =  => ActionFn(149);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action149::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (0, 13)
    }
    fn __reduce23<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <Type>)> ",")* = (<(<LowerId> ":" <Type>)> ",")+ => ActionFn(150);
        let __sym0 = __pop_Variant13(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action150::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (1, 13)
    }
    fn __reduce24<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <Type>)> ",")+ = LowerId, ":", Type, "," => ActionFn(244);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action244::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (4, 14)
    }
    fn __reduce25<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <Type>)> ",")+ = (<(<LowerId> ":" <Type>)> ",")+, LowerId, ":", Type, "," => ActionFn(245);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant13(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action245::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (5, 14)
    }
    fn __reduce26<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",") = CallArg, "," => ActionFn(167);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant14(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action167::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (2, 15)
    }
    fn __reduce27<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")* =  => ActionFn(165);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action165::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (0, 16)
    }
    fn __reduce28<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")* = (<CallArg> ",")+ => ActionFn(166);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action166::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (1, 16)
    }
    fn __reduce29<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")+ = CallArg, "," => ActionFn(248);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant14(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action248::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (2, 17)
    }
    fn __reduce30<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")+ = (<CallArg> ",")+, CallArg, "," => ActionFn(249);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant14(__symbols);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action249::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (3, 17)
    }
    fn __reduce31<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <Type>) = LowerId, ":", Type => ActionFn(115);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action115::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (3, 18)
    }
    fn __reduce32<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <Type>)? = LowerId, ":", Type => ActionFn(243);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action243::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (3, 19)
    }
    fn __reduce33<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <Type>)? =  => ActionFn(148);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action148::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (0, 19)
    }
    fn __reduce34<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE) = NamedField, NEWLINE => ActionFn(126);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action126::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (2, 20)
    }
    fn __reduce35<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE)+ = NamedField, NEWLINE => ActionFn(256);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action256::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (2, 21)
    }
    fn __reduce36<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE)+ = (<NamedField> NEWLINE)+, NamedField, NEWLINE => ActionFn(257);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant17(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action257::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (3, 21)
    }
    fn __reduce37<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",") = ParenExpr, "," => ActionFn(162);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action162::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (2, 22)
    }
    fn __reduce38<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")* =  => ActionFn(160);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action160::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (0, 23)
    }
    fn __reduce39<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")* = (<ParenExpr> ",")+ => ActionFn(161);
        let __sym0 = __pop_Variant20(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action161::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (1, 23)
    }
    fn __reduce40<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")+ = ParenExpr, "," => ActionFn(258);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action258::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (2, 24)
    }
    fn __reduce41<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")+ = (<ParenExpr> ",")+, ParenExpr, "," => ActionFn(259);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant20(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action259::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (3, 24)
    }
    fn __reduce42<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",") = PatternField, "," => ActionFn(172);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant21(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action172::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (2, 25)
    }
    fn __reduce43<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")* =  => ActionFn(170);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action170::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (0, 26)
    }
    fn __reduce44<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")* = (<PatternField> ",")+ => ActionFn(171);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action171::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (1, 26)
    }
    fn __reduce45<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")+ = PatternField, "," => ActionFn(262);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant21(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action262::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (2, 27)
    }
    fn __reduce46<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")+ = (<PatternField> ",")+, PatternField, "," => ActionFn(263);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant21(__symbols);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action263::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (3, 27)
    }
    fn __reduce47<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",") = RecordTypeField, "," => ActionFn(146);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action146::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (2, 28)
    }
    fn __reduce48<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")* =  => ActionFn(144);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action144::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (0, 29)
    }
    fn __reduce49<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")* = (<RecordTypeField> ",")+ => ActionFn(145);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action145::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 29)
    }
    fn __reduce50<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")+ = RecordTypeField, "," => ActionFn(266);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action266::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (2, 30)
    }
    fn __reduce51<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")+ = (<RecordTypeField> ",")+, RecordTypeField, "," => ActionFn(267);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant23(__symbols);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action267::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (3, 30)
    }
    fn __reduce52<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<Type> ",") = Type, "," => ActionFn(141);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action141::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 31)
    }
    fn __reduce53<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<Type> ",")* =  => ActionFn(139);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action139::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (0, 32)
    }
    fn __reduce54<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<Type> ",")* = (<Type> ",")+ => ActionFn(140);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action140::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (1, 32)
    }
    fn __reduce55<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<Type> ",")+ = Type, "," => ActionFn(270);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action270::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (2, 33)
    }
    fn __reduce56<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<Type> ",")+ = (<Type> ",")+, Type, "," => ActionFn(271);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action271::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (3, 33)
    }
    fn __reduce57<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",") = UpperId, "," => ActionFn(136);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action136::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant0(__nt), __end));
        (2, 34)
    }
    fn __reduce58<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")* =  => ActionFn(134);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action134::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (0, 35)
    }
    fn __reduce59<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")* = (<UpperId> ",")+ => ActionFn(135);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action135::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 35)
    }
    fn __reduce60<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")+ = UpperId, "," => ActionFn(274);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action274::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (2, 36)
    }
    fn __reduce61<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")+ = (<UpperId> ",")+, UpperId, "," => ActionFn(275);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action275::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (3, 36)
    }
    fn __reduce62<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".") = UpperId, "." => ActionFn(121);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action121::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant0(__nt), __end));
        (2, 37)
    }
    fn __reduce63<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")* =  => ActionFn(175);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action175::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (0, 38)
    }
    fn __reduce64<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")* = (<UpperId> ".")+ => ActionFn(176);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action176::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 38)
    }
    fn __reduce65<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")+ = UpperId, "." => ActionFn(278);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action278::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (2, 39)
    }
    fn __reduce66<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")+ = (<UpperId> ".")+, UpperId, "." => ActionFn(279);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action279::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (3, 39)
    }
    fn __reduce67<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")? = UpperId, "." => ActionFn(280);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action280::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (2, 40)
    }
    fn __reduce68<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")? =  => ActionFn(120);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action120::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (0, 40)
    }
    fn __reduce69<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // @L =  => ActionFn(133);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action133::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (0, 41)
    }
    fn __reduce70<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // @R =  => ActionFn(132);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action132::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (0, 42)
    }
    fn __reduce71<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alt = LPat, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(33);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant8(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant41(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action33::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (6, 43)
    }
    fn __reduce72<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alt = LPat, ":", LStmt => ActionFn(34);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant42(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant41(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action34::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (3, 43)
    }
    fn __reduce73<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alt* =  => ActionFn(98);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action98::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (0, 44)
    }
    fn __reduce74<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alt* = Alt+ => ActionFn(99);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action99::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 44)
    }
    fn __reduce75<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alt+ = Alt => ActionFn(156);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action156::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 45)
    }
    fn __reduce76<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alt+ = Alt+, Alt => ActionFn(157);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant28(__symbols);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action157::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (2, 45)
    }
    fn __reduce77<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alts =  => ActionFn(437);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action437::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (0, 46)
    }
    fn __reduce78<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alts = Alt+ => ActionFn(438);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action438::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (1, 46)
    }
    fn __reduce79<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "=" => ActionFn(35);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action35::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (1, 47)
    }
    fn __reduce80<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "+=" => ActionFn(36);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action36::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (1, 47)
    }
    fn __reduce81<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "-=" => ActionFn(37);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action37::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (1, 47)
    }
    fn __reduce82<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // CallArg = LowerId, "=", LExpr => ActionFn(71);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant40(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action71::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (3, 48)
    }
    fn __reduce83<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // CallArg = LExpr => ActionFn(72);
        let __sym0 = __pop_Variant40(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action72::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (1, 48)
    }
    fn __reduce84<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // CallArg? = CallArg => ActionFn(163);
        let __sym0 = __pop_Variant14(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action163::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 49)
    }
    fn __reduce85<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // CallArg? =  => ActionFn(164);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action164::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (0, 49)
    }
    fn __reduce86<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstrPattern = Constructor => ActionFn(82);
        let __sym0 = __pop_Variant34(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action82::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant33(__nt), __end));
        (1, 50)
    }
    fn __reduce87<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstrPattern = Constructor, "(", Sep<PatternField, ",">, ")" => ActionFn(83);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant52(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant34(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action83::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant33(__nt), __end));
        (4, 50)
    }
    fn __reduce88<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Constructor = UpperId, ".", UpperId => ActionFn(80);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action80::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant34(__nt), __end));
        (3, 51)
    }
    fn __reduce89<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Constructor = UpperId => ActionFn(81);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action81::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant34(__nt), __end));
        (1, 51)
    }
    fn __reduce90<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, NEWLINE => ActionFn(8);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action8::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (2, 52)
    }
    fn __reduce91<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, ":", NEWLINE, INDENT, NamedFields, DEDENT => ActionFn(9);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant44(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action9::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (6, 52)
    }
    fn __reduce92<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, "(", UnnamedFields, ",", ")", NEWLINE => ActionFn(199);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant54(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action199::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (6, 52)
    }
    fn __reduce93<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, "(", UnnamedFields, ")", NEWLINE => ActionFn(200);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant54(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action200::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (5, 52)
    }
    fn __reduce94<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl+ = ConstructorDecl => ActionFn(129);
        let __sym0 = __pop_Variant35(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action129::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant36(__nt), __end));
        (1, 53)
    }
    fn __reduce95<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl+ = ConstructorDecl+, ConstructorDecl => ActionFn(130);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant35(__symbols);
        let __sym0 = __pop_Variant36(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action130::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant36(__nt), __end));
        (2, 53)
    }
    fn __reduce96<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr = Expr, "||", Expr6 => ActionFn(378);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action378::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 54)
    }
    fn __reduce97<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr = Expr6 => ActionFn(68);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action68::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 54)
    }
    fn __reduce98<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = "self" => ActionFn(39);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action39::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 55)
    }
    fn __reduce99<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = LowerId => ActionFn(40);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action40::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 55)
    }
    fn __reduce100<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = UpperId => ActionFn(41);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action41::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 55)
    }
    fn __reduce101<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = "(", Sep<ParenExpr, ",">, ")" => ActionFn(42);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant51(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action42::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 55)
    }
    fn __reduce102<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = IntLit => ActionFn(43);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action43::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 55)
    }
    fn __reduce103<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = StringLit => ActionFn(44);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action44::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 55)
    }
    fn __reduce104<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = Expr0, "[", LExpr, "]" => ActionFn(379);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant40(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action379::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (4, 55)
    }
    fn __reduce105<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = Expr0, "(", Sep<CallArg, ",">, ")" => ActionFn(380);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant50(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action380::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (4, 55)
    }
    fn __reduce106<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = Expr0, ".", LowerId => ActionFn(381);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action381::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 55)
    }
    fn __reduce107<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = Expr0, ".", UpperId => ActionFn(48);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action48::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 55)
    }
    fn __reduce108<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr1 = Expr1, "..", Expr0 => ActionFn(382);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action382::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 56)
    }
    fn __reduce109<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr1 = Expr0 => ActionFn(50);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action50::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 56)
    }
    fn __reduce110<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr2 = "!", Expr2 => ActionFn(383);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant37(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action383::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (2, 57)
    }
    fn __reduce111<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr2 = Expr1 => ActionFn(52);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action52::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 57)
    }
    fn __reduce112<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr3 = Expr3, "*", Expr2 => ActionFn(384);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action384::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 58)
    }
    fn __reduce113<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr3 = Expr2 => ActionFn(54);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action54::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 58)
    }
    fn __reduce114<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr4 = Expr4, "+", Expr3 => ActionFn(385);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action385::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 59)
    }
    fn __reduce115<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr4 = Expr4, "-", Expr3 => ActionFn(386);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action386::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 59)
    }
    fn __reduce116<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr4 = Expr3 => ActionFn(57);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action57::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 59)
    }
    fn __reduce117<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr5, "==", Expr4 => ActionFn(387);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action387::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 60)
    }
    fn __reduce118<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr5, "!=", Expr4 => ActionFn(388);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action388::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 60)
    }
    fn __reduce119<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr5, "<", Expr4 => ActionFn(389);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action389::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 60)
    }
    fn __reduce120<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr5, ">", Expr4 => ActionFn(390);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action390::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 60)
    }
    fn __reduce121<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr5, "<=", Expr4 => ActionFn(391);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action391::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 60)
    }
    fn __reduce122<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr5, ">=", Expr4 => ActionFn(392);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action392::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 60)
    }
    fn __reduce123<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr4 => ActionFn(64);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action64::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 60)
    }
    fn __reduce124<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr6 = Expr6, "&&", Expr5 => ActionFn(393);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action393::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 61)
    }
    fn __reduce125<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr6 = Expr5 => ActionFn(66);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action66::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 61)
    }
    fn __reduce126<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(394);
        assert!(__symbols.len() >= 16);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant8(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant2(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant49(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym15.2;
        let __nt = super::__action394::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (16, 62)
    }
    fn __reduce127<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(395);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant8(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant2(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant49(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action395::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (14, 62)
    }
    fn __reduce128<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(396);
        assert!(__symbols.len() >= 15);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant8(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant2(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant49(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym14.2;
        let __nt = super::__action396::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (15, 62)
    }
    fn __reduce129<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(397);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant8(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant2(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant49(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action397::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (13, 62)
    }
    fn __reduce130<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "(", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(398);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant8(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant2(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant49(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action398::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (14, 62)
    }
    fn __reduce131<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "(", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(399);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant8(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant2(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant49(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action399::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (12, 62)
    }
    fn __reduce132<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(400);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant8(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant49(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action400::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (14, 62)
    }
    fn __reduce133<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(401);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant8(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant49(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action401::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (12, 62)
    }
    fn __reduce134<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(402);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant8(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant49(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action402::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (13, 62)
    }
    fn __reduce135<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(403);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant8(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant49(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action403::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (11, 62)
    }
    fn __reduce136<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "(", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(404);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant8(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant49(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action404::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (12, 62)
    }
    fn __reduce137<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "(", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(405);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant8(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant49(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action405::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (10, 62)
    }
    fn __reduce138<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(406);
        assert!(__symbols.len() >= 22);
        let __sym21 = __pop_Variant0(__symbols);
        let __sym20 = __pop_Variant8(__symbols);
        let __sym19 = __pop_Variant0(__symbols);
        let __sym18 = __pop_Variant0(__symbols);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant2(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant49(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant54(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym21.2;
        let __nt = super::__action406::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18, __sym19, __sym20, __sym21);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (22, 62)
    }
    fn __reduce139<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(407);
        assert!(__symbols.len() >= 20);
        let __sym19 = __pop_Variant0(__symbols);
        let __sym18 = __pop_Variant8(__symbols);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant2(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant49(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant54(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym19.2;
        let __nt = super::__action407::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18, __sym19);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (20, 62)
    }
    fn __reduce140<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(408);
        assert!(__symbols.len() >= 21);
        let __sym20 = __pop_Variant0(__symbols);
        let __sym19 = __pop_Variant8(__symbols);
        let __sym18 = __pop_Variant0(__symbols);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant2(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant49(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant54(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym20.2;
        let __nt = super::__action408::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18, __sym19, __sym20);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (21, 62)
    }
    fn __reduce141<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(409);
        assert!(__symbols.len() >= 19);
        let __sym18 = __pop_Variant0(__symbols);
        let __sym17 = __pop_Variant8(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant2(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant49(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant54(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym18.2;
        let __nt = super::__action409::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (19, 62)
    }
    fn __reduce142<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(410);
        assert!(__symbols.len() >= 20);
        let __sym19 = __pop_Variant0(__symbols);
        let __sym18 = __pop_Variant8(__symbols);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant2(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant49(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant54(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym19.2;
        let __nt = super::__action410::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18, __sym19);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (20, 62)
    }
    fn __reduce143<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(411);
        assert!(__symbols.len() >= 18);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant8(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant2(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant49(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant54(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym17.2;
        let __nt = super::__action411::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (18, 62)
    }
    fn __reduce144<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(412);
        assert!(__symbols.len() >= 19);
        let __sym18 = __pop_Variant0(__symbols);
        let __sym17 = __pop_Variant8(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant2(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant49(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym18.2;
        let __nt = super::__action412::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (19, 62)
    }
    fn __reduce145<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(413);
        assert!(__symbols.len() >= 17);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant8(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant2(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant49(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym16.2;
        let __nt = super::__action413::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (17, 62)
    }
    fn __reduce146<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(414);
        assert!(__symbols.len() >= 18);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant8(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant2(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant49(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym17.2;
        let __nt = super::__action414::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (18, 62)
    }
    fn __reduce147<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(415);
        assert!(__symbols.len() >= 16);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant8(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant2(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant49(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym15.2;
        let __nt = super::__action415::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (16, 62)
    }
    fn __reduce148<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(416);
        assert!(__symbols.len() >= 17);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant8(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant2(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant49(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym16.2;
        let __nt = super::__action416::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (17, 62)
    }
    fn __reduce149<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(417);
        assert!(__symbols.len() >= 15);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant8(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant2(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant49(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym14.2;
        let __nt = super::__action417::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (15, 62)
    }
    fn __reduce150<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(418);
        assert!(__symbols.len() >= 20);
        let __sym19 = __pop_Variant0(__symbols);
        let __sym18 = __pop_Variant8(__symbols);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant49(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant54(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym19.2;
        let __nt = super::__action418::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18, __sym19);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (20, 62)
    }
    fn __reduce151<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(419);
        assert!(__symbols.len() >= 18);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant8(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant49(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant54(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym17.2;
        let __nt = super::__action419::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (18, 62)
    }
    fn __reduce152<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(420);
        assert!(__symbols.len() >= 19);
        let __sym18 = __pop_Variant0(__symbols);
        let __sym17 = __pop_Variant8(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant49(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant54(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym18.2;
        let __nt = super::__action420::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (19, 62)
    }
    fn __reduce153<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(421);
        assert!(__symbols.len() >= 17);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant8(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant49(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant54(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym16.2;
        let __nt = super::__action421::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (17, 62)
    }
    fn __reduce154<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(422);
        assert!(__symbols.len() >= 18);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant8(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant49(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant54(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym17.2;
        let __nt = super::__action422::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (18, 62)
    }
    fn __reduce155<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(423);
        assert!(__symbols.len() >= 16);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant8(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant49(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant54(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym15.2;
        let __nt = super::__action423::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (16, 62)
    }
    fn __reduce156<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(424);
        assert!(__symbols.len() >= 17);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant8(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant49(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym16.2;
        let __nt = super::__action424::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (17, 62)
    }
    fn __reduce157<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(425);
        assert!(__symbols.len() >= 15);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant8(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant49(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym14.2;
        let __nt = super::__action425::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (15, 62)
    }
    fn __reduce158<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(426);
        assert!(__symbols.len() >= 16);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant8(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant49(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym15.2;
        let __nt = super::__action426::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (16, 62)
    }
    fn __reduce159<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(427);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant8(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant49(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action427::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (14, 62)
    }
    fn __reduce160<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(428);
        assert!(__symbols.len() >= 15);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant8(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant49(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym14.2;
        let __nt = super::__action428::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (15, 62)
    }
    fn __reduce161<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(429);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant8(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant49(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action429::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (13, 62)
    }
    fn __reduce162<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ImportDecl = "import", Sep<UpperId, ".">, NEWLINE => ActionFn(430);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant55(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action430::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant39(__nt), __end));
        (3, 63)
    }
    fn __reduce163<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LExpr = Expr => ActionFn(431);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action431::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant40(__nt), __end));
        (1, 64)
    }
    fn __reduce164<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LPat = Pat => ActionFn(432);
        let __sym0 = __pop_Variant46(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action432::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant41(__nt), __end));
        (1, 65)
    }
    fn __reduce165<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmt = Stmt => ActionFn(433);
        let __sym0 = __pop_Variant56(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action433::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (1, 66)
    }
    fn __reduce166<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmt* =  => ActionFn(106);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action106::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (0, 67)
    }
    fn __reduce167<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmt* = LStmt+ => ActionFn(107);
        let __sym0 = __pop_Variant43(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action107::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (1, 67)
    }
    fn __reduce168<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmt+ = LStmt => ActionFn(152);
        let __sym0 = __pop_Variant42(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action152::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (1, 68)
    }
    fn __reduce169<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmt+ = LStmt+, LStmt => ActionFn(153);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant42(__symbols);
        let __sym0 = __pop_Variant43(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action153::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (2, 68)
    }
    fn __reduce170<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmts =  => ActionFn(443);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action443::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant8(__nt), __end));
        (0, 69)
    }
    fn __reduce171<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmts = LStmt+ => ActionFn(444);
        let __sym0 = __pop_Variant43(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action444::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant8(__nt), __end));
        (1, 69)
    }
    fn __reduce172<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // NEWLINE* =  => ActionFn(90);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action90::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (0, 70)
    }
    fn __reduce173<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // NEWLINE* = NEWLINE+ => ActionFn(91);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action91::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 70)
    }
    fn __reduce174<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // NEWLINE+ = NEWLINE => ActionFn(179);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action179::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 71)
    }
    fn __reduce175<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // NEWLINE+ = NEWLINE+, NEWLINE => ActionFn(180);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action180::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (2, 71)
    }
    fn __reduce176<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // NamedField = LowerId, ":", Type => ActionFn(12);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action12::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (3, 72)
    }
    fn __reduce177<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // NamedFields = (<NamedField> NEWLINE)+ => ActionFn(11);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action11::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant44(__nt), __end));
        (1, 73)
    }
    fn __reduce178<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ParenExpr = LowerId, "=", LExpr => ActionFn(69);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant40(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action69::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (3, 74)
    }
    fn __reduce179<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ParenExpr = LExpr => ActionFn(70);
        let __sym0 = __pop_Variant40(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action70::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (1, 74)
    }
    fn __reduce180<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ParenExpr? = ParenExpr => ActionFn(158);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action158::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (1, 75)
    }
    fn __reduce181<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ParenExpr? =  => ActionFn(159);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action159::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (0, 75)
    }
    fn __reduce182<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Pat = LowerId => ActionFn(74);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action74::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (1, 76)
    }
    fn __reduce183<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Pat = ConstrPattern => ActionFn(75);
        let __sym0 = __pop_Variant33(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action75::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (1, 76)
    }
    fn __reduce184<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Pat = "(", Sep<PatternField, ",">, ")" => ActionFn(76);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant52(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action76::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (3, 76)
    }
    fn __reduce185<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Pat = "_" => ActionFn(77);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action77::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (1, 76)
    }
    fn __reduce186<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Pat = StringLit => ActionFn(78);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action78::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (1, 76)
    }
    fn __reduce187<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Pat = StringLit, LowerId => ActionFn(79);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action79::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (2, 76)
    }
    fn __reduce188<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // PatternField = LowerId, "=", LPat => ActionFn(84);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant41(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action84::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (3, 77)
    }
    fn __reduce189<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // PatternField = LPat => ActionFn(85);
        let __sym0 = __pop_Variant41(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action85::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (1, 77)
    }
    fn __reduce190<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // PatternField? = PatternField => ActionFn(168);
        let __sym0 = __pop_Variant21(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action168::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 78)
    }
    fn __reduce191<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // PatternField? =  => ActionFn(169);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action169::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (0, 78)
    }
    fn __reduce192<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField = LowerId, ":", Type => ActionFn(18);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action18::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (3, 79)
    }
    fn __reduce193<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField = Type => ActionFn(19);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action19::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (1, 79)
    }
    fn __reduce194<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField? = RecordTypeField => ActionFn(142);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action142::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant48(__nt), __end));
        (1, 80)
    }
    fn __reduce195<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField? =  => ActionFn(143);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action143::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant48(__nt), __end));
        (0, 80)
    }
    fn __reduce196<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <Type>), ","> = LowerId, ":", Type => ActionFn(252);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action252::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (3, 81)
    }
    fn __reduce197<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <Type>), ","> =  => ActionFn(253);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action253::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (0, 81)
    }
    fn __reduce198<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <Type>), ","> = (<(<LowerId> ":" <Type>)> ",")+, LowerId, ":", Type => ActionFn(254);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant13(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action254::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (4, 81)
    }
    fn __reduce199<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <Type>), ","> = (<(<LowerId> ":" <Type>)> ",")+ => ActionFn(255);
        let __sym0 = __pop_Variant13(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action255::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (1, 81)
    }
    fn __reduce200<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = CallArg => ActionFn(439);
        let __sym0 = __pop_Variant14(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action439::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant50(__nt), __end));
        (1, 82)
    }
    fn __reduce201<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> =  => ActionFn(440);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action440::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant50(__nt), __end));
        (0, 82)
    }
    fn __reduce202<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = (<CallArg> ",")+, CallArg => ActionFn(441);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant14(__symbols);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action441::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant50(__nt), __end));
        (2, 82)
    }
    fn __reduce203<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = (<CallArg> ",")+ => ActionFn(442);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action442::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant50(__nt), __end));
        (1, 82)
    }
    fn __reduce204<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = ParenExpr => ActionFn(449);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action449::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (1, 83)
    }
    fn __reduce205<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> =  => ActionFn(450);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action450::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (0, 83)
    }
    fn __reduce206<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = (<ParenExpr> ",")+, ParenExpr => ActionFn(451);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant20(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action451::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (2, 83)
    }
    fn __reduce207<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = (<ParenExpr> ",")+ => ActionFn(452);
        let __sym0 = __pop_Variant20(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action452::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (1, 83)
    }
    fn __reduce208<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = PatternField => ActionFn(453);
        let __sym0 = __pop_Variant21(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action453::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (1, 84)
    }
    fn __reduce209<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> =  => ActionFn(454);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action454::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (0, 84)
    }
    fn __reduce210<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = (<PatternField> ",")+, PatternField => ActionFn(455);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant21(__symbols);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action455::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (2, 84)
    }
    fn __reduce211<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = (<PatternField> ",")+ => ActionFn(456);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action456::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (1, 84)
    }
    fn __reduce212<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = RecordTypeField => ActionFn(457);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action457::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant53(__nt), __end));
        (1, 85)
    }
    fn __reduce213<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> =  => ActionFn(458);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action458::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant53(__nt), __end));
        (0, 85)
    }
    fn __reduce214<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = (<RecordTypeField> ",")+, RecordTypeField => ActionFn(459);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant23(__symbols);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action459::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant53(__nt), __end));
        (2, 85)
    }
    fn __reduce215<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = (<RecordTypeField> ",")+ => ActionFn(460);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action460::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant53(__nt), __end));
        (1, 85)
    }
    fn __reduce216<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<Type, ","> = Type => ActionFn(463);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action463::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (1, 86)
    }
    fn __reduce217<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<Type, ","> =  => ActionFn(464);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action464::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (0, 86)
    }
    fn __reduce218<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<Type, ","> = (<Type> ",")+, Type => ActionFn(465);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action465::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (2, 86)
    }
    fn __reduce219<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<Type, ","> = (<Type> ",")+ => ActionFn(466);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action466::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (1, 86)
    }
    fn __reduce220<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = UpperId => ActionFn(467);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action467::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 87)
    }
    fn __reduce221<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> =  => ActionFn(468);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action468::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (0, 87)
    }
    fn __reduce222<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = (<UpperId> ",")+, UpperId => ActionFn(469);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action469::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (2, 87)
    }
    fn __reduce223<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = (<UpperId> ",")+ => ActionFn(470);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action470::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 87)
    }
    fn __reduce224<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = UpperId => ActionFn(471);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action471::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 88)
    }
    fn __reduce225<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> =  => ActionFn(472);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action472::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (0, 88)
    }
    fn __reduce226<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = (<UpperId> ".")+, UpperId => ActionFn(473);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action473::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (2, 88)
    }
    fn __reduce227<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = (<UpperId> ".")+ => ActionFn(474);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action474::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 88)
    }
    fn __reduce228<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, ":", Type, "=", LExpr, NEWLINE => ActionFn(206);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant40(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant41(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action206::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (7, 89)
    }
    fn __reduce229<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, "=", LExpr, NEWLINE => ActionFn(207);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant40(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant41(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action207::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (5, 89)
    }
    fn __reduce230<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(218);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant8(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action218::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (13, 89)
    }
    fn __reduce231<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(219);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action219::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (7, 89)
    }
    fn __reduce232<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+, "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(220);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant8(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant7(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action220::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (14, 89)
    }
    fn __reduce233<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ => ActionFn(221);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant7(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action221::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (8, 89)
    }
    fn __reduce234<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = LExpr, AssignOp, LExpr, NEWLINE => ActionFn(26);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant40(__symbols);
        let __sym1 = __pop_Variant31(__symbols);
        let __sym0 = __pop_Variant40(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action26::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (4, 89)
    }
    fn __reduce235<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = LExpr, NEWLINE => ActionFn(27);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant40(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action27::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (2, 89)
    }
    fn __reduce236<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "match", LExpr, ":", NEWLINE, INDENT, Alts, DEDENT => ActionFn(28);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant30(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action28::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (7, 89)
    }
    fn __reduce237<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "for", LowerId, "in", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(29);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant8(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant40(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action29::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (9, 89)
    }
    fn __reduce238<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "while", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(30);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action30::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (7, 89)
    }
    fn __reduce239<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "return", LExpr, NEWLINE => ActionFn(31);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action31::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (3, 89)
    }
    fn __reduce240<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl = TypeDecl => ActionFn(445);
        let __sym0 = __pop_Variant61(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action445::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (1, 90)
    }
    fn __reduce241<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, TypeDecl => ActionFn(446);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant61(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action446::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (2, 90)
    }
    fn __reduce242<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl = FunDecl => ActionFn(447);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action447::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (1, 90)
    }
    fn __reduce243<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, FunDecl => ActionFn(448);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant38(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action448::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (2, 90)
    }
    fn __reduce244<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl* =  => ActionFn(92);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action92::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (0, 91)
    }
    fn __reduce245<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl* = TopDecl+ => ActionFn(93);
        let __sym0 = __pop_Variant58(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action93::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (1, 91)
    }
    fn __reduce246<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl+ = TopDecl => ActionFn(177);
        let __sym0 = __pop_Variant57(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action177::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (1, 92)
    }
    fn __reduce247<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl+ = TopDecl+, TopDecl => ActionFn(178);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant57(__symbols);
        let __sym0 = __pop_Variant58(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action178::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (2, 92)
    }
    fn __reduce248<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecls =  => ActionFn(461);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action461::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (0, 93)
    }
    fn __reduce249<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecls = TopDecl+ => ActionFn(462);
        let __sym0 = __pop_Variant58(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action462::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (1, 93)
    }
    fn __reduce250<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Type = UpperId => ActionFn(15);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action15::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (1, 94)
    }
    fn __reduce251<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Type = UpperId, "[", Sep<Type, ",">, "]" => ActionFn(16);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant54(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action16::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (4, 94)
    }
    fn __reduce252<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Type = "(", Sep<RecordTypeField, ",">, ")" => ActionFn(17);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant53(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action17::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (3, 94)
    }
    fn __reduce253<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Type? = Type => ActionFn(137);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action137::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (1, 95)
    }
    fn __reduce254<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Type? =  => ActionFn(138);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action138::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (0, 95)
    }
    fn __reduce255<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TypeConstrs = ConstructorDecl+ => ActionFn(7);
        let __sym0 = __pop_Variant36(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action7::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (1, 96)
    }
    fn __reduce256<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TypeDecl = "type", UpperId, TypeParams, TypeDeclRhs => ActionFn(436);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant62(__symbols);
        let __sym2 = __pop_Variant63(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action436::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (4, 97)
    }
    fn __reduce257<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TypeDeclRhs = ":", NEWLINE, INDENT, TypeConstrs, DEDENT => ActionFn(3);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant60(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action3::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (5, 98)
    }
    fn __reduce258<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TypeDeclRhs = ":", NEWLINE, INDENT, NamedFields, DEDENT => ActionFn(4);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant44(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action4::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (5, 98)
    }
    fn __reduce259<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TypeParams =  => ActionFn(5);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action5::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (0, 99)
    }
    fn __reduce260<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TypeParams = "[", Sep<UpperId, ",">, "]" => ActionFn(6);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant55(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action6::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (3, 99)
    }
    fn __reduce261<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // UnnamedFields = UnnamedFields, ",", Type => ActionFn(13);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant54(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action13::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (3, 100)
    }
    fn __reduce262<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // UnnamedFields = Type => ActionFn(14);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action14::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (1, 100)
    }
    fn __reduce263<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // UpperId? = UpperId => ActionFn(173);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action173::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (1, 101)
    }
    fn __reduce264<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // UpperId? =  => ActionFn(174);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action174::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (0, 101)
    }
    fn __reduce266<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // __TopDecls = TopDecls => ActionFn(1);
        let __sym0 = __pop_Variant59(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action1::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (1, 103)
    }
}
#[allow(unused_imports)]
pub use self::__parse__LExpr::LExprParser;

#[rustfmt::skip]
#[allow(non_snake_case, non_camel_case_types, unused_mut, unused_variables, unused_imports, unused_parens, clippy::needless_lifetimes, clippy::type_complexity, clippy::needless_return, clippy::too_many_arguments, clippy::never_loop, clippy::match_single_binding, clippy::needless_raw_string_hashes)]
mod __parse__TopDecls {

    use crate::ast::*;
    use crate::token::{TokenKind, Token};
    use crate::interpolation::parse_string_parts;
    use std::convert::Infallible;
    use lexgen_util::{LexerError, Loc};
    use smol_str::SmolStr;
    #[allow(unused_extern_crates)]
    extern crate lalrpop_util as __lalrpop_util;
    #[allow(unused_imports)]
    use self::__lalrpop_util::state_machine as __state_machine;
    extern crate core;
    extern crate alloc;
    use super::__ToTriple;
    #[allow(dead_code)]
    pub(crate) enum __Symbol<'input>
     {
        Variant0(Token<'input>),
        Variant1(core::option::Option<Token<'input>>),
        Variant2(Type),
        Variant3(core::option::Option<Type>),
        Variant4((Token<'input>, Vec<Type>, Token<'input>)),
        Variant5(core::option::Option<(Token<'input>, Vec<Type>, Token<'input>)>),
        Variant6((L<Expr>, Vec<L<Stmt>>)),
        Variant7(alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>),
        Variant8(Vec<L<Stmt>>),
        Variant9(core::option::Option<Vec<L<Stmt>>>),
        Variant10((Token<'input>, core::option::Option<Token<'input>>)),
        Variant11(core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>),
        Variant12((Token<'input>, Type)),
        Variant13(alloc::vec::Vec<(Token<'input>, Type)>),
        Variant14(CallArg),
        Variant15(alloc::vec::Vec<CallArg>),
        Variant16(core::option::Option<(Token<'input>, Type)>),
        Variant17((SmolStr, Type)),
        Variant18(alloc::vec::Vec<(SmolStr, Type)>),
        Variant19((Option<SmolStr>, L<Expr>)),
        Variant20(alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>),
        Variant21((Option<SmolStr>, L<Pat>)),
        Variant22(alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>),
        Variant23(Named<Type>),
        Variant24(alloc::vec::Vec<Named<Type>>),
        Variant25(alloc::vec::Vec<Type>),
        Variant26(alloc::vec::Vec<Token<'input>>),
        Variant27(Loc),
        Variant28(Alt),
        Variant29(alloc::vec::Vec<Alt>),
        Variant30(Vec<Alt>),
        Variant31(AssignOp),
        Variant32(core::option::Option<CallArg>),
        Variant33(ConstrPattern),
        Variant34(Constructor),
        Variant35(ConstructorDecl),
        Variant36(alloc::vec::Vec<ConstructorDecl>),
        Variant37(Expr),
        Variant38(L<FunDecl>),
        Variant39(L<ImportDecl>),
        Variant40(L<Expr>),
        Variant41(L<Pat>),
        Variant42(L<Stmt>),
        Variant43(alloc::vec::Vec<L<Stmt>>),
        Variant44(Vec<(SmolStr, Type)>),
        Variant45(core::option::Option<(Option<SmolStr>, L<Expr>)>),
        Variant46(Pat),
        Variant47(core::option::Option<(Option<SmolStr>, L<Pat>)>),
        Variant48(core::option::Option<Named<Type>>),
        Variant49(Vec<(Token<'input>, Type)>),
        Variant50(Vec<CallArg>),
        Variant51(Vec<(Option<SmolStr>, L<Expr>)>),
        Variant52(Vec<(Option<SmolStr>, L<Pat>)>),
        Variant53(Vec<Named<Type>>),
        Variant54(Vec<Type>),
        Variant55(Vec<Token<'input>>),
        Variant56(Stmt),
        Variant57(L<TopDecl>),
        Variant58(alloc::vec::Vec<L<TopDecl>>),
        Variant59(Vec<L<TopDecl>>),
        Variant60(Vec<ConstructorDecl>),
        Variant61(L<TypeDecl>),
        Variant62(TypeDeclRhs),
        Variant63(Vec<SmolStr>),
    }
    const __ACTION: &[i16] = &[
        // State 0
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
        // State 1
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0,
        // State 2
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
        // State 3
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -260, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 4
        0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 5
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -222, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
        // State 6
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 7
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -222, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
        // State 8
        0, 0, 0, 0, -198, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 9
        0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 10
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 11
        0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 12
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -222, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
        // State 13
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 14
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 15
        0, 0, 0, 16, -214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 196, 0, 0, 183,
        // State 16
        0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 17
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 18
        0, 0, 0, 0, -198, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 19
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 207, 0, 0, 208,
        // State 20
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 21
        0, 0, 0, 16, -216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 196, 0, 0, 183,
        // State 22
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 23
        0, 0, 0, 0, -198, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 24
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 25
        0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 26
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -178, 0, 0, 207, 0, 0, 0,
        // State 27
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -256, 0, 0, 0, 0, 0, 208,
        // State 28
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 29
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 30
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 31
        0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 32
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 33
        0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 34
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 35
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 36
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 37
        0, 0, 0, 0, 0, 0, 0, 273, 0, 0, 274, 0, 0, 0, 0, 0, 275, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
        // State 38
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -172, 0, 247, 248, 0, 249, 250,
        // State 39
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 40
        40, 0, 0, 41, -206, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 283, 0, 249, 250,
        // State 41
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 42
        0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 290, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 291, 0, 292, 293,
        // State 43
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 44
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 45
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 46
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 47
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 48
        0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 49
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 50
        0, 0, 0, 0, -198, 0, 0, 0, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 51
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 52
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 53
        40, 0, 0, 41, -202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 318, 0, 249, 250,
        // State 54
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 55
        0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 56
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 57
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 58
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 59
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 60
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 61
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 62
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 63
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 64
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 65
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 66
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 67
        40, 0, 0, 41, -208, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 283, 0, 249, 250,
        // State 68
        0, 0, 0, 69, -210, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 290, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 341, 0, 292, 293,
        // State 69
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 70
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 71
        0, 0, 0, 0, -198, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 72
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 73
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 74
        0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 75
        0, 0, 0, 16, 366, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 76
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
        // State 77
        40, 0, 0, 41, -204, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 318, 0, 249, 250,
        // State 78
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 79
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 80
        0, 0, 0, 69, -210, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 290, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 341, 0, 292, 293,
        // State 81
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 82
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 83
        0, 0, 0, 69, -212, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 290, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 341, 0, 292, 293,
        // State 84
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 85
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 86
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 87
        0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 88
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 89
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 90
        0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 91
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 92
        0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 290, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 291, 0, 292, 293,
        // State 93
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 94
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 95
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 96
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 97
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 98
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 99
        0, 0, 0, 0, -198, 0, 0, 0, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 100
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 101
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 102
        0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 290, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -78, 0, 0, 291, 0, 292, 293,
        // State 103
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 104
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 105
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 106
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 107
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 108
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 109
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 110
        0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
        // State 111
        0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 290, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -79, 0, 0, 291, 0, 292, 293,
        // State 112
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 113
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 114
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 115
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 116
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 117
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 118
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 119
        -232, 0, 0, -232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -232, 127, 486, 0, -232, -232, 0, 0, -232, -232, -232, -232, 0, -232, 0, 0, 0, -232, 0, -232, -232, 0, -232, -232,
        // State 120
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, 0, 0, 247, 248, 488, 249, 250,
        // State 121
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 122
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 123
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 124
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 125
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 126
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 127
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 128
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 129
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 130
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 131
        0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        // State 132
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 246, 0, 0, 0, 0, 0, 0, 0, 247, 248, 0, 249, 250,
        // State 133
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 134
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 135
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 136
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 137
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 138
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 139
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 140
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 141
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 142
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 143
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 144
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 145
        40, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 42, 0, 0, 43, 44, 45, 246, 0, 46, 0, 0, 0, -171, 0, 247, 248, 0, 249, 250,
        // State 146
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -243, 0, 0, 0, 0, 0, 0, 0, 0, -243, 0, 0, 0, 0, 0, 0, 0, 0, -243, 0, 0,
        // State 147
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -247, 0, 0, 0, 0, 0, 0, 0, 0, -247, 0, 0, 0, 0, 0, 0, 0, 0, -247, 0, 0,
        // State 148
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 149
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -241, 0, 0, 0, 0, 0, 0, 0, 0, -241, 0, 0, 0, 0, 0, 0, 0, 0, -241, 0, 0,
        // State 150
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 158, 0, 0, 159,
        // State 151
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
        // State 152
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -175, 0, 0, 0, 0, 0, 0, 0, 0, -175, 0, 0, 0, 0, 0, 0, 0, 0, -175, 0, 0,
        // State 153
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -244, 0, 0, 0, 0, 0, 0, 0, 0, -244, 0, 0, 0, 0, 0, 0, 0, 0, -244, 0, 0,
        // State 154
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -242, 0, 0, 0, 0, 0, 0, 0, 0, -242, 0, 0, 0, 0, 0, 0, 0, 0, -242, 0, 0,
        // State 155
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, -176, 0, 0,
        // State 156
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -248, 0, 0, 0, 0, 0, 0, 0, 0, -248, 0, 0, 0, 0, 0, 0, 0, 0, -248, 0, 0,
        // State 157
        0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 158
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 159
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
        // State 160
        0, 0, 0, 0, -200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
        // State 161
        0, 0, 0, 0, 172, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 162
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 163
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
        // State 164
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 175, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 165
        0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -221, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 166
        0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 167
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -257, 0, 0, 0, 0, 0, 0, 0, 0, -257, 0, 0, 0, 0, 0, 0, 0, 0, -257, 0, 0,
        // State 168
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
        // State 169
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 170
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 171
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 172
        0, 0, 0, 0, 180, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 173
        0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -223, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 174
        0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 175
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -61,
        // State 176
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0,
        // State 177
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -261, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 178
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
        // State 179
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 180
        0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 181
        0, 0, 0, 0, -197, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 182
        0, 0, 0, 0, -251, 0, 0, 0, -251, 0, 0, 0, 0, 0, 0, 0, -251, 0, 0, 0, 23, -251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -251, 0, 0,
        // State 183
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -62,
        // State 184
        0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 185
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 186
        0, 0, 0, 0, -199, 0, 0, 0, 209, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 187
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 188
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0,
        // State 189
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
        // State 190
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 191
        0, 0, 0, 0, -25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -25, 0, 0, 0,
        // State 192
        0, 0, 0, 0, -213, 0, 0, 0, 215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 193
        0, 0, 0, 0, 216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 194
        0, 0, 0, 0, -194, 0, 0, 0, -194, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 195
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 196
        0, 0, 0, 0, 218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 197
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 221, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 198
        0, 0, 0, 0, 0, 0, 0, 0, 222, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -217, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 199
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 223, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 200
        0, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 201
        0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 202
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -95, 0, 0, 0, 0, 0, -95,
        // State 203
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
        // State 204
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
        // State 205
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
        // State 206
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 207
        0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
        // State 208
        0, 0, 0, 0, -26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -26, 0, 0, 0,
        // State 209
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
        // State 210
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 211
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0,
        // State 212
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
        // State 213
        0, 0, 0, 0, -215, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 214
        0, 0, 0, -51, -51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -51, 0, 0, -51,
        // State 215
        0, 0, 0, 0, -253, 0, 0, 0, -253, 0, 0, 0, 0, 0, 0, 0, -253, 0, 0, 0, 0, -253, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -253, 0, 0,
        // State 216
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 217
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 257, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 218
        0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 219
        0, 0, 0, 0, 0, 0, 0, 0, 260, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -219, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 220
        0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 221
        0, 0, 0, -56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -56,
        // State 222
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
        // State 223
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 263, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 224
        0, 0, 0, 0, 264, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 225
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
        // State 226
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -96, 0, 0, 0, 0, 0, -96,
        // State 227
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -36, 0, 0, -36, 0, 0, 0,
        // State 228
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -259, 0, 0, 0, 0, 0, 0, 0, 0, -259, 0, 0, 0, 0, 0, 0, 0, 0, -259, 0, 0,
        // State 229
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -258, 0, 0, 0, 0, 0, 0, 0, 0, -258, 0, 0, 0, 0, 0, 0, 0, 0, -258, 0, 0,
        // State 230
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
        // State 231
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -91, 0, 0, 0, 0, 0, -91,
        // State 232
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0,
        // State 233
        0, 0, 0, 0, -164, 0, 0, -164, -164, 0, -164, 0, 0, -164, 0, 0, -164, 0, 0, 0, 0, -164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 53, 0, 0, 0, 0, 0, -164, 0, 0,
        // State 234
        0, -110, -110, 54, -110, -110, -110, -110, -110, -110, -110, 272, -110, -110, -110, -110, -110, -110, -110, -110, 55, -110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -110, 0, 0, 0, 0, 0, -110, 0, 0,
        // State 235
        0, -112, -112, 0, -112, -112, -112, -112, -112, -112, -112, 0, 56, -112, -112, -112, -112, -112, -112, -112, 0, -112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0, 0, 0, -112, 0, 0,
        // State 236
        0, -114, -114, 0, -114, -114, -114, -114, -114, -114, -114, 0, 0, -114, -114, -114, -114, -114, -114, -114, 0, -114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -114, 0, 0, 0, 0, 0, -114, 0, 0,
        // State 237
        0, -117, -117, 0, -117, 57, -117, -117, -117, -117, -117, 0, 0, -117, -117, -117, -117, -117, -117, -117, 0, -117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -117, 0, 0, 0, 0, 0, -117, 0, 0,
        // State 238
        0, -124, -124, 0, -124, 0, 58, -124, -124, 59, -124, 0, 0, -124, -124, -124, -124, -124, -124, -124, 0, -124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -124, 0, 0, 0, 0, 0, -124, 0, 0,
        // State 239
        0, 60, -126, 0, -126, 0, 0, -126, -126, 0, -126, 0, 0, -126, 61, 62, -126, 63, 64, 65, 0, -126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -126, 0, 0, 0, 0, 0, -126, 0, 0,
        // State 240
        0, 0, 66, 0, -98, 0, 0, -98, -98, 0, -98, 0, 0, -98, 0, 0, -98, 0, 0, 0, 0, -98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -98, 0, 0, 0, 0, 0, -98, 0, 0,
        // State 241
        -169, 0, 0, -169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -169, -169, 0, 0, -169, -169, -169, -169, 0, -169, 0, 0, 0, -169, 0, -169, -169, 0, -169, -169,
        // State 242
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
        // State 243
        -166, 0, 0, -166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -166, 0, 0, 0, -166, -166, 0, 0, -166, -166, -166, -166, 0, -166, 0, 0, 0, -166, 0, -166, -166, 0, -166, -166,
        // State 244
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 284, 0, 0, 0,
        // State 245
        0, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -99, 0, 0, 0, 0, 0, -99, 0, 0,
        // State 246
        0, -103, -103, -103, -103, -103, -103, -103, -103, -103, -103, -103, -103, -103, -103, -103, -103, -103, -103, -103, -103, -103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -103, 0, 0, 0, 0, 0, -103, 0, 0,
        // State 247
        0, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -100, 0, 0, 0, 0, 0, -100, 0, 0,
        // State 248
        0, -104, -104, -104, -104, -104, -104, -104, -104, -104, -104, -104, -104, -104, -104, -104, -104, -104, -104, -104, -104, -104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -104, 0, 0, 0, 0, 0, -104, 0, 0,
        // State 249
        0, -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -101, 0, 0, 0, 0, 0, -101, 0, 0,
        // State 250
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 297, 0, 0,
        // State 251
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 299, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 252
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0,
        // State 253
        0, 0, 0, -52, -52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -52, 0, 0, -52,
        // State 254
        0, 0, 0, 0, -193, 0, 0, 0, -193, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 255
        0, 0, 0, 0, -252, 0, 0, 0, -252, 0, 0, 0, 0, 0, 0, 0, -252, 0, 0, 0, 0, -252, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -252, 0, 0,
        // State 256
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 301, 0, 0,
        // State 257
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 258
        0, 0, 0, 0, 303, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 259
        0, 0, 0, -57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -57,
        // State 260
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 261
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
        // State 262
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
        // State 263
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 264
        0, 0, 0, 0, 309, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 265
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 311, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 266
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -37, 0, 0, -37, 0, 0, 0,
        // State 267
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -177, 0, 0,
        // State 268
        0, 0, 0, 0, -263, 0, 0, 0, -263, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 269
        0, 0, 0, 0, 312, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 270
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
        // State 271
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 319, 0, 0, 320,
        // State 272
        -81, 0, 0, -81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -81, 0, 0, 0, 0, 0, 0, 0, -81, -81, 0, -81, -81,
        // State 273
        -82, 0, 0, -82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -82, 0, 0, 0, 0, 0, 0, 0, -82, -82, 0, -82, -82,
        // State 274
        -80, 0, 0, -80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -80, 0, 0, 0, 0, 0, 0, 0, -80, -80, 0, -80, -80,
        // State 275
        -236, 0, 0, -236, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -236, 0, 0, 0, -236, -236, 0, 0, -236, -236, -236, -236, 0, -236, 0, 0, 0, -236, 0, -236, -236, 0, -236, -236,
        // State 276
        -170, 0, 0, -170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -170, -170, 0, 0, -170, -170, -170, -170, 0, -170, 0, 0, 0, -170, 0, -170, -170, 0, -170, -170,
        // State 277
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -138, 0, 0, 0, 0, 0, 0, 0, 0, -138, 0, 0, 0, 0, 0, 0, 0, 0, -138, 0, 0,
        // State 278
        0, -111, -111, 0, -111, -111, -111, -111, -111, -111, -111, 0, 0, -111, -111, -111, -111, -111, -111, -111, 0, -111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -111, 0, 0, 0, 0, 0, -111, 0, 0,
        // State 279
        0, 0, 0, 0, -180, 0, 0, 0, -180, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 280
        0, 0, 0, 0, -205, 0, 0, 0, 335, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 281
        0, 0, 0, 0, 336, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 282
        0, -100, -100, -100, -100, -100, -100, 0, -100, -100, 0, -100, -100, 0, -100, -100, 79, -100, -100, -100, -100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 283
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 284
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 337, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 285
        0, 0, 0, 0, -184, 0, 0, 0, -184, 0, 0, 0, 0, -184, 0, 0, -184, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 286
        0, 0, 0, 81, -87, 0, 0, 0, -87, 0, 0, 0, 0, -87, 0, 0, -87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 287
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 288
        0, 0, 0, 0, -165, 0, 0, 0, -165, 0, 0, 0, 0, -165, 0, 0, -165, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 289
        0, 0, 0, 0, -186, 0, 0, 0, -186, 0, 0, 0, 0, -186, 0, 0, -186, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 290
        0, 0, 0, 0, -183, 0, 0, 0, -183, 0, 0, 0, 0, -183, 0, 0, -183, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 291
        0, 0, 0, 0, -187, 0, 0, 0, -187, 0, 0, 0, 0, -187, 0, 0, -187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
        // State 292
        0, 0, 0, -90, -90, 0, 0, 0, -90, 0, 0, 343, 0, -90, 0, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 293
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 294
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
        // State 295
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 296
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
        // State 297
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
        // State 298
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 348, 0, 0,
        // State 299
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 300
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0,
        // State 301
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 352, 0, 0,
        // State 302
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 303
        0, 0, 0, 0, 354, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 304
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 356, 0, 0,
        // State 305
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 306
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
        // State 307
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
        // State 308
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 309
        0, 0, 0, 0, 362, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 310
        0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 311
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 364, 0, 0,
        // State 312
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 368, 0, 0, 0, 0, 0, 0,
        // State 313
        0, 0, 66, 0, -97, 0, 0, -97, -97, 0, -97, 0, 0, -97, 0, 0, -97, 0, 0, 0, 0, -97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -97, 0, 0, 0, 0, 0, -97, 0, 0,
        // State 314
        0, 0, 0, 0, -201, 0, 0, 0, 370, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 315
        0, 0, 0, 0, -84, 0, 0, 0, -84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 316
        0, 0, 0, 0, 371, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 317
        0, -100, -100, -100, -100, -100, -100, 0, -100, -100, 0, -100, -100, 0, -100, -100, 92, -100, -100, -100, -100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 318
        0, -107, -107, -107, -107, -107, -107, -107, -107, -107, -107, -107, -107, -107, -107, -107, -107, -107, -107, -107, -107, -107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -107, 0, 0, 0, 0, 0, -107, 0, 0,
        // State 319
        0, -108, -108, -108, -108, -108, -108, -108, -108, -108, -108, -108, -108, -108, -108, -108, -108, -108, -108, -108, -108, -108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -108, 0, 0, 0, 0, 0, -108, 0, 0,
        // State 320
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 372, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 321
        0, -109, -109, 54, -109, -109, -109, -109, -109, -109, -109, 272, -109, -109, -109, -109, -109, -109, -109, -109, 55, -109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -109, 0, 0, 0, 0, 0, -109, 0, 0,
        // State 322
        0, -113, -113, 0, -113, -113, -113, -113, -113, -113, -113, 0, 0, -113, -113, -113, -113, -113, -113, -113, 0, -113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -113, 0, 0, 0, 0, 0, -113, 0, 0,
        // State 323
        0, -115, -115, 0, -115, 57, -115, -115, -115, -115, -115, 0, 0, -115, -115, -115, -115, -115, -115, -115, 0, -115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -115, 0, 0, 0, 0, 0, -115, 0, 0,
        // State 324
        0, -116, -116, 0, -116, 57, -116, -116, -116, -116, -116, 0, 0, -116, -116, -116, -116, -116, -116, -116, 0, -116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -116, 0, 0, 0, 0, 0, -116, 0, 0,
        // State 325
        0, -119, -119, 0, -119, 0, 58, -119, -119, 59, -119, 0, 0, -119, -119, -119, -119, -119, -119, -119, 0, -119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -119, 0, 0, 0, 0, 0, -119, 0, 0,
        // State 326
        0, -120, -120, 0, -120, 0, 58, -120, -120, 59, -120, 0, 0, -120, -120, -120, -120, -120, -120, -120, 0, -120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -120, 0, 0, 0, 0, 0, -120, 0, 0,
        // State 327
        0, -122, -122, 0, -122, 0, 58, -122, -122, 59, -122, 0, 0, -122, -122, -122, -122, -122, -122, -122, 0, -122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -122, 0, 0, 0, 0, 0, -122, 0, 0,
        // State 328
        0, -118, -118, 0, -118, 0, 58, -118, -118, 59, -118, 0, 0, -118, -118, -118, -118, -118, -118, -118, 0, -118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -118, 0, 0, 0, 0, 0, -118, 0, 0,
        // State 329
        0, -121, -121, 0, -121, 0, 58, -121, -121, 59, -121, 0, 0, -121, -121, -121, -121, -121, -121, -121, 0, -121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -121, 0, 0, 0, 0, 0, -121, 0, 0,
        // State 330
        0, -123, -123, 0, -123, 0, 58, -123, -123, 59, -123, 0, 0, -123, -123, -123, -123, -123, -123, -123, 0, -123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -123, 0, 0, 0, 0, 0, -123, 0, 0,
        // State 331
        0, 60, -125, 0, -125, 0, 0, -125, -125, 0, -125, 0, 0, -125, 61, 62, -125, 63, 64, 65, 0, -125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -125, 0, 0, 0, 0, 0, -125, 0, 0,
        // State 332
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
        // State 333
        0, 0, 0, 0, -207, 0, 0, 0, 374, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 334
        -41, 0, 0, -41, -41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -41, 0, 0, 0, 0, 0, 0, 0, -41, -41, 0, -41, -41,
        // State 335
        0, -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -102, 0, 0, 0, 0, 0, -102, 0, 0,
        // State 336
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
        // State 337
        0, 0, 0, 0, -190, 0, 0, 0, -190, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 338
        0, 0, 0, 0, -209, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 339
        0, 0, 0, 0, 383, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 340
        0, 0, 0, 0, -183, 0, 0, 0, -183, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 341
        0, 0, 0, 0, -188, 0, 0, 0, -188, 0, 0, 0, 0, -188, 0, 0, -188, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 342
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
        // State 343
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
        // State 344
        -240, 0, 0, -240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -240, 0, 0, 0, -240, -240, 0, 0, -240, -240, -240, -240, 0, -240, 0, 0, 0, -240, 0, -240, -240, 0, -240, -240,
        // State 345
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
        // State 346
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -136, 0, 0, 0, 0, 0, 0, 0, 0, -136, 0, 0, 0, 0, 0, 0, 0, 0, -136, 0, 0,
        // State 347
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
        // State 348
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
        // State 349
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
        // State 350
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 391, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 351
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95, 0, 0, 0, 0, 0,
        // State 352
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
        // State 353
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 394, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 354
        0, 0, 0, 0, 395, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 355
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
        // State 356
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
        // State 357
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 398, 0, 0,
        // State 358
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 359
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0,
        // State 360
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 402, 0, 0,
        // State 361
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 0, 0, 403, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 362
        0, 0, 0, 0, 404, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 363
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -94, 0, 0, 0, 0, 0, -94,
        // State 364
        0, 0, 0, 0, -262, 0, 0, 0, -262, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 365
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 406, 0, 0,
        // State 366
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 407, 0, 0, 0, 0, 0, 0,
        // State 367
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -132, 0, 0, 0, 0, 0, 0, 0, 0, -132, 0, 0, 0, 0, 0, 0, 0, 0, -132, 0, 0,
        // State 368
        0, 0, 0, 0, -203, 0, 0, 0, 408, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 369
        -30, 0, 0, -30, -30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, 0, 0, 0, 0, 0, 0, 0, -30, -30, 0, -30, -30,
        // State 370
        0, -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -106, 0, 0, 0, 0, 0, -106, 0, 0,
        // State 371
        0, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, -105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -105, 0, 0, 0, 0, 0, -105, 0, 0,
        // State 372
        -235, 0, 0, -235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -235, 0, 0, 0, -235, -235, 0, 0, -235, -235, -235, -235, 0, -235, 0, 0, 0, -235, 0, -235, -235, 0, -235, -235,
        // State 373
        -42, 0, 0, -42, -42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -42, 0, 0, 0, 0, 0, 0, 0, -42, -42, 0, -42, -42,
        // State 374
        0, 0, 0, 0, -179, 0, 0, 0, -179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 375
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 410, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 376
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0,
        // State 377
        0, 0, 0, 0, 411, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 378
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 379
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 412, 0, 0,
        // State 380
        0, 0, 0, 0, -211, 0, 0, 0, 413, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 381
        0, 0, 0, -46, -46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -46, 0, -46, -46,
        // State 382
        0, 0, 0, 0, -185, 0, 0, 0, -185, 0, 0, 0, 0, -185, 0, 0, -185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 383
        0, 0, 0, -89, -89, 0, 0, 0, -89, 0, 0, 0, 0, -89, 0, 0, -89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 384
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
        // State 385
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0,
        // State 386
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
        // State 387
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -134, 0, 0, 0, 0, 0, 0, 0, 0, -134, 0, 0, 0, 0, 0, 0, 0, 0, -134, 0, 0,
        // State 388
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0,
        // State 389
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
        // State 390
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
        // State 391
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 420, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 392
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
        // State 393
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 422, 0, 0,
        // State 394
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 0, 0, 423, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 395
        0, 0, 0, 0, 424, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 396
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -137, 0, 0, 0, 0, 0, 0, 0, 0, -137, 0, 0, 0, 0, 0, 0, 0, 0, -137, 0, 0,
        // State 397
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0,
        // State 398
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 426, 0, 0, 0, 0, 0, 0,
        // State 399
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 427, 0, 0,
        // State 400
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 429, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 401
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
        // State 402
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 431, 0, 0,
        // State 403
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 432, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 404
        0, 0, 0, 0, 433, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 405
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -93, 0, 0, 0, 0, 0, -93,
        // State 406
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -92, 0, 0, 0, 0, 0, -92,
        // State 407
        -31, 0, 0, -31, -31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -31, 0, 0, 0, 0, 0, 0, 0, -31, -31, 0, -31, -31,
        // State 408
        0, 0, 0, 0, -83, 0, 0, 0, -83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 409
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 435, 0, 0,
        // State 410
        0, 0, 0, 0, -88, 0, 0, 0, -88, 0, 0, 0, 0, -88, 0, 0, -88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 411
        -230, 0, 0, -230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -230, 0, 0, 0, -230, -230, 0, 0, -230, -230, -230, -230, 0, -230, 0, 0, 0, -230, 0, -230, -230, 0, -230, -230,
        // State 412
        0, 0, 0, -47, -47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -47, 0, -47, -47,
        // State 413
        0, 0, 0, 0, -189, 0, 0, 0, -189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 414
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -130, 0, 0, 0, 0, 0, 0, 0, 0, -130, 0, 0, 0, 0, 0, 0, 0, 0, -130, 0, 0,
        // State 415
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
        // State 416
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -162, 0, 0, 0, 0, 0, 0, 0, 0, -162, 0, 0, 0, 0, 0, 0, 0, 0, -162, 0, 0,
        // State 417
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 113, 0, 0, 0, 0, 0,
        // State 418
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
        // State 419
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 445, 0, 0,
        // State 420
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 447, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 421
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
        // State 422
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 449, 0, 0,
        // State 423
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115, 0, 0, 450, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 424
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 451, 0, 0, 0, 0, 0, 0,
        // State 425
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -135, 0, 0, 0, 0, 0, 0, 0, 0, -135, 0, 0, 0, 0, 0, 0, 0, 0, -135, 0, 0,
        // State 426
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0,
        // State 427
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
        // State 428
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 454, 0, 0,
        // State 429
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 430
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
        // State 431
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 458, 0, 0,
        // State 432
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 459, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 433
        0, 0, 0, 0, 460, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 434
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 0, 0, 0, 0, 0,
        // State 435
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0,
        // State 436
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 462, 0, 0,
        // State 437
        0, 0, 0, -76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -76, 0, 0, -76, 0, -76, -76,
        // State 438
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 464, 0, 0, 0, 0, 0, 0,
        // State 439
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 440
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 465, 0, 0, 0, 0, 0, 0,
        // State 441
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -128, 0, 0, 0, 0, 0, 0, 0, 0, -128, 0, 0, 0, 0, 0, 0, 0, 0, -128, 0, 0,
        // State 442
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 466, 0, 0, 0, 0, 0, 0,
        // State 443
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -160, 0, 0, 0, 0, 0, 0, 0, 0, -160, 0, 0, 0, 0, 0, 0, 0, 0, -160, 0, 0,
        // State 444
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0,
        // State 445
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 468, 0, 0, 0, 0, 0, 0,
        // State 446
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
        // State 447
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 471, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 448
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 123, 0, 0, 0, 0, 0,
        // State 449
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 473, 0, 0,
        // State 450
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -131, 0, 0, 0, 0, 0, 0, 0, 0, -131, 0, 0, 0, 0, 0, 0, 0, 0, -131, 0, 0,
        // State 451
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
        // State 452
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -133, 0, 0, 0, 0, 0, 0, 0, 0, -133, 0, 0, 0, 0, 0, 0, 0, 0, -133, 0, 0,
        // State 453
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
        // State 454
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0,
        // State 455
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
        // State 456
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 479, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 457
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
        // State 458
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 481, 0, 0,
        // State 459
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 482, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 460
        0, 0, 0, 0, 483, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 461
        -229, 0, 0, -229, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -229, 0, 0, 0, -229, -229, 0, 0, -229, -229, -229, -229, 0, -229, 0, 0, 0, -229, 0, -229, -229, 0, -229, -229,
        // State 462
        0, 0, 0, -77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -77, 0, 0, -77, 0, -77, -77,
        // State 463
        -237, 0, 0, -237, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -237, 0, 0, 0, -237, -237, 0, 0, -237, -237, -237, -237, 0, -237, 0, 0, 0, -237, 0, -237, -237, 0, -237, -237,
        // State 464
        -239, 0, 0, -239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -239, 0, 0, 0, -239, -239, 0, 0, -239, -239, -239, -239, 0, -239, 0, 0, 0, -239, 0, -239, -239, 0, -239, -239,
        // State 465
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -150, 0, 0, 0, 0, 0, 0, 0, 0, -150, 0, 0, 0, 0, 0, 0, 0, 0, -150, 0, 0,
        // State 466
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 489, 0, 0, 0, 0, 0, 0,
        // State 467
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -158, 0, 0, 0, 0, 0, 0, 0, 0, -158, 0, 0, 0, 0, 0, 0, 0, 0, -158, 0, 0,
        // State 468
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
        // State 469
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
        // State 470
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
        // State 471
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 472
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 0, 0, 0, 0, 0,
        // State 473
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -129, 0, 0, 0, 0, 0, 0, 0, 0, -129, 0, 0, 0, 0, 0, 0, 0, 0, -129, 0, 0,
        // State 474
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
        // State 475
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -161, 0, 0, 0, 0, 0, 0, 0, 0, -161, 0, 0, 0, 0, 0, 0, 0, 0, -161, 0, 0,
        // State 476
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0,
        // State 477
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
        // State 478
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 498, 0, 0,
        // State 479
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 480
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131, 0, 0, 0, 0, 0,
        // State 481
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 502, 0, 0,
        // State 482
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 503, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 483
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 504, 0, 0, 0, 0, 0, 0,
        // State 484
        -234, 0, 0, -234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -234, 133, 505, 0, -234, -234, 0, 0, -234, -234, -234, -234, 0, -234, 0, 0, 0, -234, 0, -234, -234, 0, -234, -234,
        // State 485
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 507, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 486
        0, 0, 0, -73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -73, 0, 0, -73, 0, -73, -73,
        // State 487
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0,
        // State 488
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -148, 0, 0, 0, 0, 0, 0, 0, 0, -148, 0, 0, 0, 0, 0, 0, 0, 0, -148, 0, 0,
        // State 489
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 508, 0, 0, 0, 0, 0, 0,
        // State 490
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -156, 0, 0, 0, 0, 0, 0, 0, 0, -156, 0, 0, 0, 0, 0, 0, 0, 0, -156, 0, 0,
        // State 491
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
        // State 492
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 510, 0, 0, 0, 0, 0, 0,
        // State 493
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 511, 0, 0,
        // State 494
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -127, 0, 0, 0, 0, 0, 0, 0, 0, -127, 0, 0, 0, 0, 0, 0, 0, 0, -127, 0, 0,
        // State 495
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 513, 0, 0, 0, 0, 0, 0,
        // State 496
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -159, 0, 0, 0, 0, 0, 0, 0, 0, -159, 0, 0, 0, 0, 0, 0, 0, 0, -159, 0, 0,
        // State 497
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0,
        // State 498
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 515, 0, 0, 0, 0, 0, 0,
        // State 499
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 516, 0, 0,
        // State 500
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 518, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 501
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
        // State 502
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 520, 0, 0,
        // State 503
        -238, 0, 0, -238, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -238, 0, 0, 0, -238, -238, 0, 0, -238, -238, -238, -238, 0, -238, 0, 0, 0, -238, 0, -238, -238, 0, -238, -238,
        // State 504
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 522, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 505
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 523, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 506
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 524, 0, 0,
        // State 507
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -146, 0, 0, 0, 0, 0, 0, 0, 0, -146, 0, 0, 0, 0, 0, 0, 0, 0, -146, 0, 0,
        // State 508
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
        // State 509
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -154, 0, 0, 0, 0, 0, 0, 0, 0, -154, 0, 0, 0, 0, 0, 0, 0, 0, -154, 0, 0,
        // State 510
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
        // State 511
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 528, 0, 0, 0, 0, 0, 0,
        // State 512
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -149, 0, 0, 0, 0, 0, 0, 0, 0, -149, 0, 0, 0, 0, 0, 0, 0, 0, -149, 0, 0,
        // State 513
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0, 0, 0,
        // State 514
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -157, 0, 0, 0, 0, 0, 0, 0, 0, -157, 0, 0, 0, 0, 0, 0, 0, 0, -157, 0, 0,
        // State 515
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 139, 0, 0, 0, 0, 0,
        // State 516
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
        // State 517
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 532, 0, 0,
        // State 518
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 534, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 519
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0, 0,
        // State 520
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 535, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 521
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 536, 0, 0,
        // State 522
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 537, 0, 0,
        // State 523
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 0, 0, 0, 0, 0,
        // State 524
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
        // State 525
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -144, 0, 0, 0, 0, 0, 0, 0, 0, -144, 0, 0, 0, 0, 0, 0, 0, 0, -144, 0, 0,
        // State 526
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 539, 0, 0, 0, 0, 0, 0,
        // State 527
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -152, 0, 0, 0, 0, 0, 0, 0, 0, -152, 0, 0, 0, 0, 0, 0, 0, 0, -152, 0, 0,
        // State 528
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -147, 0, 0, 0, 0, 0, 0, 0, 0, -147, 0, 0, 0, 0, 0, 0, 0, 0, -147, 0, 0,
        // State 529
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
        // State 530
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -155, 0, 0, 0, 0, 0, 0, 0, 0, -155, 0, 0, 0, 0, 0, 0, 0, 0, -155, 0, 0,
        // State 531
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
        // State 532
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0,
        // State 533
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 544, 0, 0,
        // State 534
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 546, 0, 0,
        // State 535
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0, 0, 0, 0,
        // State 536
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
        // State 537
        0, 0, 0, -72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -72, 0, 0, -72, 0, -72, -72,
        // State 538
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -142, 0, 0, 0, 0, 0, 0, 0, 0, -142, 0, 0, 0, 0, 0, 0, 0, 0, -142, 0, 0,
        // State 539
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 548, 0, 0, 0, 0, 0, 0,
        // State 540
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -145, 0, 0, 0, 0, 0, 0, 0, 0, -145, 0, 0, 0, 0, 0, 0, 0, 0, -145, 0, 0,
        // State 541
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0, 0, 0, 0, 0,
        // State 542
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -153, 0, 0, 0, 0, 0, 0, 0, 0, -153, 0, 0, 0, 0, 0, 0, 0, 0, -153, 0, 0,
        // State 543
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
        // State 544
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 551, 0, 0, 0, 0, 0, 0,
        // State 545
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
        // State 546
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 554, 0, 0, 0, 0, 0, 0,
        // State 547
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -140, 0, 0, 0, 0, 0, 0, 0, 0, -140, 0, 0, 0, 0, 0, 0, 0, 0, -140, 0, 0,
        // State 548
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -143, 0, 0, 0, 0, 0, 0, 0, 0, -143, 0, 0, 0, 0, 0, 0, 0, 0, -143, 0, 0,
        // State 549
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0, 0, 0,
        // State 550
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -151, 0, 0, 0, 0, 0, 0, 0, 0, -151, 0, 0, 0, 0, 0, 0, 0, 0, -151, 0, 0,
        // State 551
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
        // State 552
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
        // State 553
        -231, 0, 0, -231, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -231, 0, 0, 0, -231, -231, 0, 0, -231, -231, -231, -231, 0, -231, 0, 0, 0, -231, 0, -231, -231, 0, -231, -231,
        // State 554
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -141, 0, 0, 0, 0, 0, 0, 0, 0, -141, 0, 0, 0, 0, 0, 0, 0, 0, -141, 0, 0,
        // State 555
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 560, 0, 0, 0, 0, 0, 0,
        // State 556
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0, 0, 0,
        // State 557
        -233, 0, 0, -233, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -233, 0, 0, 0, -233, -233, 0, 0, -233, -233, -233, -233, 0, -233, 0, 0, 0, -233, 0, -233, -233, 0, -233, -233,
        // State 558
        -12, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -12, -12, -12, 0, -12, -12, 0, 0, -12, -12, -12, -12, 0, -12, 0, 0, 0, -12, 0, -12, -12, 0, -12, -12,
        // State 559
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -139, 0, 0, 0, 0, 0, 0, 0, 0, -139, 0, 0, 0, 0, 0, 0, 0, 0, -139, 0, 0,
        // State 560
        -13, 0, 0, -13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -13, -13, -13, 0, -13, -13, 0, 0, -13, -13, -13, -13, 0, -13, 0, 0, 0, -13, 0, -13, -13, 0, -13, -13,
    ];
    fn __action(state: i16, integer: usize) -> i16 {
        __ACTION[(state as usize) * 46 + integer]
    }
    const __EOF_ACTION: &[i16] = &[
        // State 0
        -249,
        // State 1
        0,
        // State 2
        -250,
        // State 3
        0,
        // State 4
        0,
        // State 5
        0,
        // State 6
        0,
        // State 7
        0,
        // State 8
        0,
        // State 9
        0,
        // State 10
        0,
        // State 11
        0,
        // State 12
        0,
        // State 13
        0,
        // State 14
        0,
        // State 15
        0,
        // State 16
        0,
        // State 17
        0,
        // State 18
        0,
        // State 19
        0,
        // State 20
        0,
        // State 21
        0,
        // State 22
        0,
        // State 23
        0,
        // State 24
        0,
        // State 25
        0,
        // State 26
        0,
        // State 27
        0,
        // State 28
        0,
        // State 29
        0,
        // State 30
        0,
        // State 31
        0,
        // State 32
        0,
        // State 33
        0,
        // State 34
        0,
        // State 35
        0,
        // State 36
        0,
        // State 37
        0,
        // State 38
        0,
        // State 39
        0,
        // State 40
        0,
        // State 41
        0,
        // State 42
        0,
        // State 43
        0,
        // State 44
        0,
        // State 45
        0,
        // State 46
        0,
        // State 47
        0,
        // State 48
        0,
        // State 49
        0,
        // State 50
        0,
        // State 51
        0,
        // State 52
        0,
        // State 53
        0,
        // State 54
        0,
        // State 55
        0,
        // State 56
        0,
        // State 57
        0,
        // State 58
        0,
        // State 59
        0,
        // State 60
        0,
        // State 61
        0,
        // State 62
        0,
        // State 63
        0,
        // State 64
        0,
        // State 65
        0,
        // State 66
        0,
        // State 67
        0,
        // State 68
        0,
        // State 69
        0,
        // State 70
        0,
        // State 71
        0,
        // State 72
        0,
        // State 73
        0,
        // State 74
        0,
        // State 75
        0,
        // State 76
        0,
        // State 77
        0,
        // State 78
        0,
        // State 79
        0,
        // State 80
        0,
        // State 81
        0,
        // State 82
        0,
        // State 83
        0,
        // State 84
        0,
        // State 85
        0,
        // State 86
        0,
        // State 87
        0,
        // State 88
        0,
        // State 89
        0,
        // State 90
        0,
        // State 91
        0,
        // State 92
        0,
        // State 93
        0,
        // State 94
        0,
        // State 95
        0,
        // State 96
        0,
        // State 97
        0,
        // State 98
        0,
        // State 99
        0,
        // State 100
        0,
        // State 101
        0,
        // State 102
        0,
        // State 103
        0,
        // State 104
        0,
        // State 105
        0,
        // State 106
        0,
        // State 107
        0,
        // State 108
        0,
        // State 109
        0,
        // State 110
        0,
        // State 111
        0,
        // State 112
        0,
        // State 113
        0,
        // State 114
        0,
        // State 115
        0,
        // State 116
        0,
        // State 117
        0,
        // State 118
        0,
        // State 119
        0,
        // State 120
        0,
        // State 121
        0,
        // State 122
        0,
        // State 123
        0,
        // State 124
        0,
        // State 125
        0,
        // State 126
        0,
        // State 127
        0,
        // State 128
        0,
        // State 129
        0,
        // State 130
        0,
        // State 131
        0,
        // State 132
        0,
        // State 133
        0,
        // State 134
        0,
        // State 135
        0,
        // State 136
        0,
        // State 137
        0,
        // State 138
        0,
        // State 139
        0,
        // State 140
        0,
        // State 141
        0,
        // State 142
        0,
        // State 143
        0,
        // State 144
        0,
        // State 145
        0,
        // State 146
        -243,
        // State 147
        -247,
        // State 148
        -267,
        // State 149
        -241,
        // State 150
        0,
        // State 151
        0,
        // State 152
        0,
        // State 153
        -244,
        // State 154
        -242,
        // State 155
        0,
        // State 156
        -248,
        // State 157
        0,
        // State 158
        0,
        // State 159
        0,
        // State 160
        0,
        // State 161
        0,
        // State 162
        0,
        // State 163
        0,
        // State 164
        0,
        // State 165
        0,
        // State 166
        0,
        // State 167
        -257,
        // State 168
        0,
        // State 169
        0,
        // State 170
        0,
        // State 171
        0,
        // State 172
        0,
        // State 173
        0,
        // State 174
        0,
        // State 175
        0,
        // State 176
        0,
        // State 177
        0,
        // State 178
        0,
        // State 179
        0,
        // State 180
        0,
        // State 181
        0,
        // State 182
        0,
        // State 183
        0,
        // State 184
        0,
        // State 185
        0,
        // State 186
        0,
        // State 187
        0,
        // State 188
        0,
        // State 189
        0,
        // State 190
        0,
        // State 191
        0,
        // State 192
        0,
        // State 193
        0,
        // State 194
        0,
        // State 195
        0,
        // State 196
        0,
        // State 197
        0,
        // State 198
        0,
        // State 199
        0,
        // State 200
        0,
        // State 201
        0,
        // State 202
        0,
        // State 203
        0,
        // State 204
        0,
        // State 205
        0,
        // State 206
        0,
        // State 207
        0,
        // State 208
        0,
        // State 209
        0,
        // State 210
        0,
        // State 211
        0,
        // State 212
        0,
        // State 213
        0,
        // State 214
        0,
        // State 215
        0,
        // State 216
        0,
        // State 217
        0,
        // State 218
        0,
        // State 219
        0,
        // State 220
        0,
        // State 221
        0,
        // State 222
        0,
        // State 223
        0,
        // State 224
        0,
        // State 225
        0,
        // State 226
        0,
        // State 227
        0,
        // State 228
        -259,
        // State 229
        -258,
        // State 230
        0,
        // State 231
        0,
        // State 232
        0,
        // State 233
        0,
        // State 234
        0,
        // State 235
        0,
        // State 236
        0,
        // State 237
        0,
        // State 238
        0,
        // State 239
        0,
        // State 240
        0,
        // State 241
        0,
        // State 242
        0,
        // State 243
        0,
        // State 244
        0,
        // State 245
        0,
        // State 246
        0,
        // State 247
        0,
        // State 248
        0,
        // State 249
        0,
        // State 250
        0,
        // State 251
        0,
        // State 252
        0,
        // State 253
        0,
        // State 254
        0,
        // State 255
        0,
        // State 256
        0,
        // State 257
        0,
        // State 258
        0,
        // State 259
        0,
        // State 260
        0,
        // State 261
        0,
        // State 262
        0,
        // State 263
        0,
        // State 264
        0,
        // State 265
        0,
        // State 266
        0,
        // State 267
        0,
        // State 268
        0,
        // State 269
        0,
        // State 270
        0,
        // State 271
        0,
        // State 272
        0,
        // State 273
        0,
        // State 274
        0,
        // State 275
        0,
        // State 276
        0,
        // State 277
        -138,
        // State 278
        0,
        // State 279
        0,
        // State 280
        0,
        // State 281
        0,
        // State 282
        0,
        // State 283
        0,
        // State 284
        0,
        // State 285
        0,
        // State 286
        0,
        // State 287
        0,
        // State 288
        0,
        // State 289
        0,
        // State 290
        0,
        // State 291
        0,
        // State 292
        0,
        // State 293
        0,
        // State 294
        0,
        // State 295
        0,
        // State 296
        0,
        // State 297
        0,
        // State 298
        0,
        // State 299
        0,
        // State 300
        0,
        // State 301
        0,
        // State 302
        0,
        // State 303
        0,
        // State 304
        0,
        // State 305
        0,
        // State 306
        0,
        // State 307
        0,
        // State 308
        0,
        // State 309
        0,
        // State 310
        0,
        // State 311
        0,
        // State 312
        0,
        // State 313
        0,
        // State 314
        0,
        // State 315
        0,
        // State 316
        0,
        // State 317
        0,
        // State 318
        0,
        // State 319
        0,
        // State 320
        0,
        // State 321
        0,
        // State 322
        0,
        // State 323
        0,
        // State 324
        0,
        // State 325
        0,
        // State 326
        0,
        // State 327
        0,
        // State 328
        0,
        // State 329
        0,
        // State 330
        0,
        // State 331
        0,
        // State 332
        0,
        // State 333
        0,
        // State 334
        0,
        // State 335
        0,
        // State 336
        0,
        // State 337
        0,
        // State 338
        0,
        // State 339
        0,
        // State 340
        0,
        // State 341
        0,
        // State 342
        0,
        // State 343
        0,
        // State 344
        0,
        // State 345
        0,
        // State 346
        -136,
        // State 347
        0,
        // State 348
        0,
        // State 349
        0,
        // State 350
        0,
        // State 351
        0,
        // State 352
        0,
        // State 353
        0,
        // State 354
        0,
        // State 355
        0,
        // State 356
        0,
        // State 357
        0,
        // State 358
        0,
        // State 359
        0,
        // State 360
        0,
        // State 361
        0,
        // State 362
        0,
        // State 363
        0,
        // State 364
        0,
        // State 365
        0,
        // State 366
        0,
        // State 367
        -132,
        // State 368
        0,
        // State 369
        0,
        // State 370
        0,
        // State 371
        0,
        // State 372
        0,
        // State 373
        0,
        // State 374
        0,
        // State 375
        0,
        // State 376
        0,
        // State 377
        0,
        // State 378
        0,
        // State 379
        0,
        // State 380
        0,
        // State 381
        0,
        // State 382
        0,
        // State 383
        0,
        // State 384
        0,
        // State 385
        0,
        // State 386
        0,
        // State 387
        -134,
        // State 388
        0,
        // State 389
        0,
        // State 390
        0,
        // State 391
        0,
        // State 392
        0,
        // State 393
        0,
        // State 394
        0,
        // State 395
        0,
        // State 396
        -137,
        // State 397
        0,
        // State 398
        0,
        // State 399
        0,
        // State 400
        0,
        // State 401
        0,
        // State 402
        0,
        // State 403
        0,
        // State 404
        0,
        // State 405
        0,
        // State 406
        0,
        // State 407
        0,
        // State 408
        0,
        // State 409
        0,
        // State 410
        0,
        // State 411
        0,
        // State 412
        0,
        // State 413
        0,
        // State 414
        -130,
        // State 415
        0,
        // State 416
        -162,
        // State 417
        0,
        // State 418
        0,
        // State 419
        0,
        // State 420
        0,
        // State 421
        0,
        // State 422
        0,
        // State 423
        0,
        // State 424
        0,
        // State 425
        -135,
        // State 426
        0,
        // State 427
        0,
        // State 428
        0,
        // State 429
        0,
        // State 430
        0,
        // State 431
        0,
        // State 432
        0,
        // State 433
        0,
        // State 434
        0,
        // State 435
        0,
        // State 436
        0,
        // State 437
        0,
        // State 438
        0,
        // State 439
        0,
        // State 440
        0,
        // State 441
        -128,
        // State 442
        0,
        // State 443
        -160,
        // State 444
        0,
        // State 445
        0,
        // State 446
        0,
        // State 447
        0,
        // State 448
        0,
        // State 449
        0,
        // State 450
        -131,
        // State 451
        0,
        // State 452
        -133,
        // State 453
        0,
        // State 454
        0,
        // State 455
        0,
        // State 456
        0,
        // State 457
        0,
        // State 458
        0,
        // State 459
        0,
        // State 460
        0,
        // State 461
        0,
        // State 462
        0,
        // State 463
        0,
        // State 464
        0,
        // State 465
        -150,
        // State 466
        0,
        // State 467
        -158,
        // State 468
        0,
        // State 469
        0,
        // State 470
        0,
        // State 471
        0,
        // State 472
        0,
        // State 473
        -129,
        // State 474
        0,
        // State 475
        -161,
        // State 476
        0,
        // State 477
        0,
        // State 478
        0,
        // State 479
        0,
        // State 480
        0,
        // State 481
        0,
        // State 482
        0,
        // State 483
        0,
        // State 484
        0,
        // State 485
        0,
        // State 486
        0,
        // State 487
        0,
        // State 488
        -148,
        // State 489
        0,
        // State 490
        -156,
        // State 491
        0,
        // State 492
        0,
        // State 493
        0,
        // State 494
        -127,
        // State 495
        0,
        // State 496
        -159,
        // State 497
        0,
        // State 498
        0,
        // State 499
        0,
        // State 500
        0,
        // State 501
        0,
        // State 502
        0,
        // State 503
        0,
        // State 504
        0,
        // State 505
        0,
        // State 506
        0,
        // State 507
        -146,
        // State 508
        0,
        // State 509
        -154,
        // State 510
        0,
        // State 511
        0,
        // State 512
        -149,
        // State 513
        0,
        // State 514
        -157,
        // State 515
        0,
        // State 516
        0,
        // State 517
        0,
        // State 518
        0,
        // State 519
        0,
        // State 520
        0,
        // State 521
        0,
        // State 522
        0,
        // State 523
        0,
        // State 524
        0,
        // State 525
        -144,
        // State 526
        0,
        // State 527
        -152,
        // State 528
        -147,
        // State 529
        0,
        // State 530
        -155,
        // State 531
        0,
        // State 532
        0,
        // State 533
        0,
        // State 534
        0,
        // State 535
        0,
        // State 536
        0,
        // State 537
        0,
        // State 538
        -142,
        // State 539
        0,
        // State 540
        -145,
        // State 541
        0,
        // State 542
        -153,
        // State 543
        0,
        // State 544
        0,
        // State 545
        0,
        // State 546
        0,
        // State 547
        -140,
        // State 548
        -143,
        // State 549
        0,
        // State 550
        -151,
        // State 551
        0,
        // State 552
        0,
        // State 553
        0,
        // State 554
        -141,
        // State 555
        0,
        // State 556
        0,
        // State 557
        0,
        // State 558
        0,
        // State 559
        -139,
        // State 560
        0,
    ];
    fn __goto(state: i16, nt: usize) -> i16 {
        match nt {
            7 => 484,
            14 => 160,
            17 => 77,
            21 => 26,
            24 => 67,
            27 => 83,
            30 => 21,
            33 => 24,
            36 => 163,
            43 => match state {
                111 => 462,
                _ => 437,
            },
            45 => 111,
            46 => 438,
            47 => 66,
            48 => match state {
                77 => 368,
                _ => 314,
            },
            50 => 285,
            51 => 286,
            52 => match state {
                27 => 226,
                _ => 202,
            },
            53 => 27,
            54 => 233,
            55 => match state {
                55 => 321,
                _ => 234,
            },
            56 => 235,
            57 => match state {
                39 => 278,
                56 => 322,
                _ => 236,
            },
            58 => match state {
                57 => 323,
                58 => 324,
                _ => 237,
            },
            59 => match state {
                59 => 325,
                60 => 326,
                61 => 327,
                62 => 328,
                63 => 329,
                64 => 330,
                _ => 238,
            },
            60 => match state {
                65 => 331,
                _ => 239,
            },
            61 => match state {
                52 => 313,
                _ => 240,
            },
            62 => match state {
                1 => 153,
                _ => 146,
            },
            64 => match state {
                40 | 67 => 279,
                41 => 284,
                43 => 293,
                44 => 294,
                45 => 295,
                53 | 77 => 315,
                54 => 320,
                66 => 332,
                78 => 374,
                79 => 375,
                82 => 379,
                91 => 408,
                101 => 436,
                126 => 505,
                132 => 520,
                _ => 37,
            },
            65 => match state {
                42 => 287,
                92 => 413,
                102 | 111 => 439,
                _ => 337,
            },
            66 => match state {
                38 => 276,
                120 => 486,
                _ => 241,
            },
            68 => 38,
            69 => match state {
                46 => 297,
                51 => 312,
                69 => 348,
                72 => 356,
                84 => 386,
                85 => 389,
                88 => 398,
                93 => 415,
                94 => 418,
                96 => 424,
                97 => 427,
                100 => 435,
                103 => 440,
                104 => 442,
                105 => 445,
                107 => 451,
                108 => 454,
                112 => 466,
                113 => 469,
                115 => 474,
                116 => 477,
                118 => 483,
                121 => 489,
                122 => 492,
                123 => 495,
                124 => 498,
                127 => 508,
                128 => 511,
                129 => 513,
                130 => 516,
                133 => 524,
                134 => 526,
                135 => 529,
                136 => 532,
                137 => 539,
                138 => 541,
                139 => 544,
                140 => 546,
                141 => 549,
                142 => 551,
                143 => 552,
                144 => 555,
                145 => 556,
                _ => 242,
            },
            71 => 1,
            72 => match state {
                26 => 225,
                _ => 203,
            },
            73 => match state {
                76 => 366,
                _ => 204,
            },
            74 => match state {
                67 => 333,
                _ => 280,
            },
            76 => 288,
            77 => match state {
                83 => 380,
                _ => 338,
            },
            79 => match state {
                21 => 213,
                _ => 192,
            },
            81 => match state {
                8 => 172,
                9 => 180,
                11 => 184,
                16 => 196,
                18 => 200,
                23 => 218,
                25 => 224,
                31 => 258,
                33 => 264,
                48 => 303,
                50 => 309,
                71 => 354,
                74 => 362,
                87 => 395,
                90 => 404,
                99 => 433,
                110 => 460,
                _ => 161,
            },
            82 => 316,
            83 => 281,
            84 => match state {
                80 => 377,
                _ => 339,
            },
            85 => 193,
            86 => match state {
                22 => 216,
                34 => 265,
                _ => 197,
            },
            87 => match state {
                7 => 169,
                12 => 185,
                _ => 164,
            },
            89 => 243,
            90 => match state {
                2 => 156,
                _ => 147,
            },
            92 => 2,
            93 => 148,
            94 => match state {
                10 => 181,
                13 => 186,
                14 => 187,
                15 | 21 => 194,
                20 => 210,
                24 => 219,
                29 => 251,
                30 => 254,
                32 => 260,
                35 => 267,
                36 => 268,
                47 => 299,
                49 => 305,
                70 => 350,
                73 => 358,
                75 => 364,
                81 => 378,
                86 => 391,
                89 => 400,
                95 => 420,
                98 => 429,
                106 => 447,
                109 => 456,
                114 => 471,
                117 => 479,
                125 => 500,
                131 => 518,
                _ => 198,
            },
            96 => 205,
            97 => match state {
                1 => 154,
                _ => 149,
            },
            98 => 167,
            99 => 6,
            100 => 269,
            _ => 0,
        }
    }
    const __TERMINAL: &[&str] = &[
        r###""!""###,
        r###""!=""###,
        r###""&&""###,
        r###""(""###,
        r###"")""###,
        r###""*""###,
        r###""+""###,
        r###""+=""###,
        r###"",""###,
        r###""-""###,
        r###""-=""###,
        r###"".""###,
        r###""..""###,
        r###"":""###,
        r###""<""###,
        r###""<=""###,
        r###""=""###,
        r###""==""###,
        r###"">""###,
        r###"">=""###,
        r###""[""###,
        r###""]""###,
        r###""_""###,
        r###""elif""###,
        r###""else""###,
        r###""fn""###,
        r###""for""###,
        r###""if""###,
        r###""import""###,
        r###""in""###,
        r###""let""###,
        r###""match""###,
        r###""return""###,
        r###""self""###,
        r###""type""###,
        r###""while""###,
        r###""{""###,
        r###""||""###,
        r###""}""###,
        r###"DEDENT"###,
        r###"INDENT"###,
        r###"IntLit"###,
        r###"LowerId"###,
        r###"NEWLINE"###,
        r###"StringLit"###,
        r###"UpperId"###,
    ];
    fn __expected_tokens(__state: i16) -> alloc::vec::Vec<alloc::string::String> {
        __TERMINAL.iter().enumerate().filter_map(|(index, terminal)| {
            let next_state = __action(__state, index);
            if next_state == 0 {
                None
            } else {
                Some(alloc::string::ToString::to_string(terminal))
            }
        }).collect()
    }
    fn __expected_tokens_from_states<
        'input,
    >(
        __states: &[i16],
        _: core::marker::PhantomData<(&'input ())>,
    ) -> alloc::vec::Vec<alloc::string::String>
    {
        __TERMINAL.iter().enumerate().filter_map(|(index, terminal)| {
            if __accepts(None, __states, Some(index), core::marker::PhantomData::<(&())>) {
                Some(alloc::string::ToString::to_string(terminal))
            } else {
                None
            }
        }).collect()
    }
    struct __StateMachine<'input>
    where 
    {
        __phantom: core::marker::PhantomData<(&'input ())>,
    }
    impl<'input> __state_machine::ParserDefinition for __StateMachine<'input>
    where 
    {
        type Location = Loc;
        type Error = LexerError<Infallible>;
        type Token = Token<'input>;
        type TokenIndex = usize;
        type Symbol = __Symbol<'input>;
        type Success = Vec<L<TopDecl>>;
        type StateIndex = i16;
        type Action = i16;
        type ReduceIndex = i16;
        type NonterminalIndex = usize;

        #[inline]
        fn start_location(&self) -> Self::Location {
              Default::default()
        }

        #[inline]
        fn start_state(&self) -> Self::StateIndex {
              0
        }

        #[inline]
        fn token_to_index(&self, token: &Self::Token) -> Option<usize> {
            __token_to_integer(token, core::marker::PhantomData::<(&())>)
        }

        #[inline]
        fn action(&self, state: i16, integer: usize) -> i16 {
            __action(state, integer)
        }

        #[inline]
        fn error_action(&self, state: i16) -> i16 {
            __action(state, 46 - 1)
        }

        #[inline]
        fn eof_action(&self, state: i16) -> i16 {
            __EOF_ACTION[state as usize]
        }

        #[inline]
        fn goto(&self, state: i16, nt: usize) -> i16 {
            __goto(state, nt)
        }

        fn token_to_symbol(&self, token_index: usize, token: Self::Token) -> Self::Symbol {
            __token_to_symbol(token_index, token, core::marker::PhantomData::<(&())>)
        }

        fn expected_tokens(&self, state: i16) -> alloc::vec::Vec<alloc::string::String> {
            __expected_tokens(state)
        }

        fn expected_tokens_from_states(&self, states: &[i16]) -> alloc::vec::Vec<alloc::string::String> {
            __expected_tokens_from_states(states, core::marker::PhantomData::<(&())>)
        }

        #[inline]
        fn uses_error_recovery(&self) -> bool {
            false
        }

        #[inline]
        fn error_recovery_symbol(
            &self,
            recovery: __state_machine::ErrorRecovery<Self>,
        ) -> Self::Symbol {
            panic!("error recovery not enabled for this grammar")
        }

        fn reduce(
            &mut self,
            action: i16,
            start_location: Option<&Self::Location>,
            states: &mut alloc::vec::Vec<i16>,
            symbols: &mut alloc::vec::Vec<__state_machine::SymbolTriple<Self>>,
        ) -> Option<__state_machine::ParseResult<Self>> {
            __reduce(
                action,
                start_location,
                states,
                symbols,
                core::marker::PhantomData::<(&())>,
            )
        }

        fn simulate_reduce(&self, action: i16) -> __state_machine::SimulatedReduce<Self> {
            __simulate_reduce(action, core::marker::PhantomData::<(&())>)
        }
    }
    fn __token_to_integer<
        'input,
    >(
        __token: &Token<'input>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> Option<usize>
    {
        match *__token {
            Token { kind: TokenKind::Exclamation, .. } if true => Some(0),
            Token { kind: TokenKind::ExclamationEq, .. } if true => Some(1),
            Token { kind: TokenKind::AmpAmp, .. } if true => Some(2),
            Token { kind: TokenKind::LParen, .. } if true => Some(3),
            Token { kind: TokenKind::RParen, .. } if true => Some(4),
            Token { kind: TokenKind::Star, .. } if true => Some(5),
            Token { kind: TokenKind::Plus, .. } if true => Some(6),
            Token { kind: TokenKind::PlusEq, .. } if true => Some(7),
            Token { kind: TokenKind::Comma, .. } if true => Some(8),
            Token { kind: TokenKind::Minus, .. } if true => Some(9),
            Token { kind: TokenKind::MinusEq, .. } if true => Some(10),
            Token { kind: TokenKind::Dot, .. } if true => Some(11),
            Token { kind: TokenKind::DotDot, .. } if true => Some(12),
            Token { kind: TokenKind::Colon, .. } if true => Some(13),
            Token { kind: TokenKind::LAngle, .. } if true => Some(14),
            Token { kind: TokenKind::LAngleEq, .. } if true => Some(15),
            Token { kind: TokenKind::Eq, .. } if true => Some(16),
            Token { kind: TokenKind::EqEq, .. } if true => Some(17),
            Token { kind: TokenKind::RAngle, .. } if true => Some(18),
            Token { kind: TokenKind::RAngleEq, .. } if true => Some(19),
            Token { kind: TokenKind::LBracket, .. } if true => Some(20),
            Token { kind: TokenKind::RBracket, .. } if true => Some(21),
            Token { kind: TokenKind::Underscore, .. } if true => Some(22),
            Token { kind: TokenKind::Elif, .. } if true => Some(23),
            Token { kind: TokenKind::Else, .. } if true => Some(24),
            Token { kind: TokenKind::Fn, .. } if true => Some(25),
            Token { kind: TokenKind::For, .. } if true => Some(26),
            Token { kind: TokenKind::If, .. } if true => Some(27),
            Token { kind: TokenKind::Import, .. } if true => Some(28),
            Token { kind: TokenKind::In, .. } if true => Some(29),
            Token { kind: TokenKind::Let, .. } if true => Some(30),
            Token { kind: TokenKind::Match, .. } if true => Some(31),
            Token { kind: TokenKind::Return, .. } if true => Some(32),
            Token { kind: TokenKind::Self_, .. } if true => Some(33),
            Token { kind: TokenKind::Type, .. } if true => Some(34),
            Token { kind: TokenKind::While, .. } if true => Some(35),
            Token { kind: TokenKind::LBrace, .. } if true => Some(36),
            Token { kind: TokenKind::PipePipe, .. } if true => Some(37),
            Token { kind: TokenKind::RBrace, .. } if true => Some(38),
            Token { kind: TokenKind::Dedent, .. } if true => Some(39),
            Token { kind: TokenKind::Indent, .. } if true => Some(40),
            Token { kind: TokenKind::Int, .. } if true => Some(41),
            Token { kind: TokenKind::LowerId, .. } if true => Some(42),
            Token { kind: TokenKind::Newline, .. } if true => Some(43),
            Token { kind: TokenKind::String, .. } if true => Some(44),
            Token { kind: TokenKind::UpperId, .. } if true => Some(45),
            _ => None,
        }
    }
    fn __token_to_symbol<
        'input,
    >(
        __token_index: usize,
        __token: Token<'input>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> __Symbol<'input>
    {
        #[allow(clippy::manual_range_patterns)]match __token_index {
            0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 => __Symbol::Variant0(__token),
            _ => unreachable!(),
        }
    }
    fn __simulate_reduce<
        'input,
    >(
        __reduce_index: i16,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> __state_machine::SimulatedReduce<__StateMachine<'input>>
    {
        match __reduce_index {
            0 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 0,
                }
            }
            1 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 0,
                }
            }
            2 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 1,
                }
            }
            3 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 2,
                }
            }
            4 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 2,
                }
            }
            5 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 3,
                }
            }
            6 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 4,
                }
            }
            7 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 4,
                }
            }
            8 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 5,
                }
            }
            9 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 6,
                }
            }
            10 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 6,
                }
            }
            11 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 7,
                }
            }
            12 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 7,
                }
            }
            13 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 8,
                }
            }
            14 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 9,
                }
            }
            15 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 9,
                }
            }
            16 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 10,
                }
            }
            17 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 10,
                }
            }
            18 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 11,
                }
            }
            19 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 11,
                }
            }
            20 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 11,
                }
            }
            21 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 12,
                }
            }
            22 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 13,
                }
            }
            23 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 13,
                }
            }
            24 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 14,
                }
            }
            25 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 14,
                }
            }
            26 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 15,
                }
            }
            27 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 16,
                }
            }
            28 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 16,
                }
            }
            29 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 17,
                }
            }
            30 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 17,
                }
            }
            31 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 18,
                }
            }
            32 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 19,
                }
            }
            33 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 19,
                }
            }
            34 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 20,
                }
            }
            35 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 21,
                }
            }
            36 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 21,
                }
            }
            37 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 22,
                }
            }
            38 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 23,
                }
            }
            39 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 23,
                }
            }
            40 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 24,
                }
            }
            41 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 24,
                }
            }
            42 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 25,
                }
            }
            43 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 26,
                }
            }
            44 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 26,
                }
            }
            45 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 27,
                }
            }
            46 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 27,
                }
            }
            47 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 28,
                }
            }
            48 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 29,
                }
            }
            49 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 29,
                }
            }
            50 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 30,
                }
            }
            51 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 30,
                }
            }
            52 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 31,
                }
            }
            53 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 32,
                }
            }
            54 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 32,
                }
            }
            55 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 33,
                }
            }
            56 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 33,
                }
            }
            57 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 34,
                }
            }
            58 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 35,
                }
            }
            59 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 35,
                }
            }
            60 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 36,
                }
            }
            61 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 36,
                }
            }
            62 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 37,
                }
            }
            63 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 38,
                }
            }
            64 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 38,
                }
            }
            65 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 39,
                }
            }
            66 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 39,
                }
            }
            67 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 40,
                }
            }
            68 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 40,
                }
            }
            69 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 41,
                }
            }
            70 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 42,
                }
            }
            71 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 43,
                }
            }
            72 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 43,
                }
            }
            73 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 44,
                }
            }
            74 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 44,
                }
            }
            75 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 45,
                }
            }
            76 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 45,
                }
            }
            77 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 46,
                }
            }
            78 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 46,
                }
            }
            79 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 47,
                }
            }
            80 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 47,
                }
            }
            81 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 47,
                }
            }
            82 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 48,
                }
            }
            83 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 48,
                }
            }
            84 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 49,
                }
            }
            85 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 49,
                }
            }
            86 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 50,
                }
            }
            87 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 50,
                }
            }
            88 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 51,
                }
            }
            89 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 51,
                }
            }
            90 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 52,
                }
            }
            91 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 52,
                }
            }
            92 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 52,
                }
            }
            93 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 52,
                }
            }
            94 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 53,
                }
            }
            95 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 53,
                }
            }
            96 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 54,
                }
            }
            97 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 54,
                }
            }
            98 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            99 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            100 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            101 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 55,
                }
            }
            102 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            103 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            104 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 55,
                }
            }
            105 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 55,
                }
            }
            106 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 55,
                }
            }
            107 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 55,
                }
            }
            108 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 56,
                }
            }
            109 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 56,
                }
            }
            110 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 57,
                }
            }
            111 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 57,
                }
            }
            112 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 58,
                }
            }
            113 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 58,
                }
            }
            114 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 59,
                }
            }
            115 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 59,
                }
            }
            116 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 59,
                }
            }
            117 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 60,
                }
            }
            118 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 60,
                }
            }
            119 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 60,
                }
            }
            120 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 60,
                }
            }
            121 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 60,
                }
            }
            122 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 60,
                }
            }
            123 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 60,
                }
            }
            124 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 61,
                }
            }
            125 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 61,
                }
            }
            126 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 16,
                    nonterminal_produced: 62,
                }
            }
            127 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 62,
                }
            }
            128 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 15,
                    nonterminal_produced: 62,
                }
            }
            129 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 62,
                }
            }
            130 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 62,
                }
            }
            131 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 62,
                }
            }
            132 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 62,
                }
            }
            133 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 62,
                }
            }
            134 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 62,
                }
            }
            135 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 62,
                }
            }
            136 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 62,
                }
            }
            137 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 62,
                }
            }
            138 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 22,
                    nonterminal_produced: 62,
                }
            }
            139 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 20,
                    nonterminal_produced: 62,
                }
            }
            140 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 21,
                    nonterminal_produced: 62,
                }
            }
            141 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 19,
                    nonterminal_produced: 62,
                }
            }
            142 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 20,
                    nonterminal_produced: 62,
                }
            }
            143 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 18,
                    nonterminal_produced: 62,
                }
            }
            144 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 19,
                    nonterminal_produced: 62,
                }
            }
            145 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 17,
                    nonterminal_produced: 62,
                }
            }
            146 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 18,
                    nonterminal_produced: 62,
                }
            }
            147 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 16,
                    nonterminal_produced: 62,
                }
            }
            148 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 17,
                    nonterminal_produced: 62,
                }
            }
            149 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 15,
                    nonterminal_produced: 62,
                }
            }
            150 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 20,
                    nonterminal_produced: 62,
                }
            }
            151 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 18,
                    nonterminal_produced: 62,
                }
            }
            152 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 19,
                    nonterminal_produced: 62,
                }
            }
            153 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 17,
                    nonterminal_produced: 62,
                }
            }
            154 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 18,
                    nonterminal_produced: 62,
                }
            }
            155 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 16,
                    nonterminal_produced: 62,
                }
            }
            156 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 17,
                    nonterminal_produced: 62,
                }
            }
            157 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 15,
                    nonterminal_produced: 62,
                }
            }
            158 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 16,
                    nonterminal_produced: 62,
                }
            }
            159 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 62,
                }
            }
            160 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 15,
                    nonterminal_produced: 62,
                }
            }
            161 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 62,
                }
            }
            162 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 63,
                }
            }
            163 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 64,
                }
            }
            164 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 65,
                }
            }
            165 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 66,
                }
            }
            166 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 67,
                }
            }
            167 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 67,
                }
            }
            168 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 68,
                }
            }
            169 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 68,
                }
            }
            170 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 69,
                }
            }
            171 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            172 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 70,
                }
            }
            173 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 70,
                }
            }
            174 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 71,
                }
            }
            175 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 71,
                }
            }
            176 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 72,
                }
            }
            177 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 73,
                }
            }
            178 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            179 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 74,
                }
            }
            180 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 75,
                }
            }
            181 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 75,
                }
            }
            182 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 76,
                }
            }
            183 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 76,
                }
            }
            184 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 76,
                }
            }
            185 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 76,
                }
            }
            186 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 76,
                }
            }
            187 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 76,
                }
            }
            188 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 77,
                }
            }
            189 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 77,
                }
            }
            190 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 78,
                }
            }
            191 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 78,
                }
            }
            192 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 79,
                }
            }
            193 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 79,
                }
            }
            194 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 80,
                }
            }
            195 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 80,
                }
            }
            196 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 81,
                }
            }
            197 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 81,
                }
            }
            198 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 81,
                }
            }
            199 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 81,
                }
            }
            200 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 82,
                }
            }
            201 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 82,
                }
            }
            202 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 82,
                }
            }
            203 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 82,
                }
            }
            204 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 83,
                }
            }
            205 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 83,
                }
            }
            206 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 83,
                }
            }
            207 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 83,
                }
            }
            208 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 84,
                }
            }
            209 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 84,
                }
            }
            210 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 84,
                }
            }
            211 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 84,
                }
            }
            212 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 85,
                }
            }
            213 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 85,
                }
            }
            214 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 85,
                }
            }
            215 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 85,
                }
            }
            216 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 86,
                }
            }
            217 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 86,
                }
            }
            218 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 86,
                }
            }
            219 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 86,
                }
            }
            220 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 87,
                }
            }
            221 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 87,
                }
            }
            222 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 87,
                }
            }
            223 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 87,
                }
            }
            224 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 88,
                }
            }
            225 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 88,
                }
            }
            226 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 88,
                }
            }
            227 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 88,
                }
            }
            228 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 89,
                }
            }
            229 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 89,
                }
            }
            230 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 89,
                }
            }
            231 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 89,
                }
            }
            232 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 89,
                }
            }
            233 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 89,
                }
            }
            234 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 89,
                }
            }
            235 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 89,
                }
            }
            236 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 89,
                }
            }
            237 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 89,
                }
            }
            238 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 89,
                }
            }
            239 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 89,
                }
            }
            240 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 90,
                }
            }
            241 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 90,
                }
            }
            242 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 90,
                }
            }
            243 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 90,
                }
            }
            244 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 91,
                }
            }
            245 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 91,
                }
            }
            246 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 92,
                }
            }
            247 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 92,
                }
            }
            248 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 93,
                }
            }
            249 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 93,
                }
            }
            250 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 94,
                }
            }
            251 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 94,
                }
            }
            252 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 94,
                }
            }
            253 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 95,
                }
            }
            254 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 95,
                }
            }
            255 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 96,
                }
            }
            256 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 97,
                }
            }
            257 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 98,
                }
            }
            258 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 98,
                }
            }
            259 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 99,
                }
            }
            260 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 99,
                }
            }
            261 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 100,
                }
            }
            262 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 100,
                }
            }
            263 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 101,
                }
            }
            264 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 101,
                }
            }
            265 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 102,
                }
            }
            266 => __state_machine::SimulatedReduce::Accept,
            _ => panic!("invalid reduction index {}", __reduce_index)
        }
    }
    pub struct TopDeclsParser {
        _priv: (),
    }

    impl Default for TopDeclsParser { fn default() -> Self { Self::new() } }
    impl TopDeclsParser {
        pub fn new() -> TopDeclsParser {
            TopDeclsParser {
                _priv: (),
            }
        }

        #[allow(dead_code)]
        pub fn parse<
            'input,
            __TOKEN: __ToTriple<'input, >,
            __TOKENS: IntoIterator<Item=__TOKEN>,
        >(
            &self,
            __tokens0: __TOKENS,
        ) -> Result<Vec<L<TopDecl>>, __lalrpop_util::ParseError<Loc, Token<'input>, LexerError<Infallible>>>
        {
            let __tokens = __tokens0.into_iter();
            let mut __tokens = __tokens.map(|t| __ToTriple::to_triple(t));
            __state_machine::Parser::drive(
                __StateMachine {
                    __phantom: core::marker::PhantomData::<(&())>,
                },
                __tokens,
            )
        }
    }
    fn __accepts<
        'input,
    >(
        __error_state: Option<i16>,
        __states: &[i16],
        __opt_integer: Option<usize>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> bool
    {
        let mut __states = __states.to_vec();
        __states.extend(__error_state);
        loop {
            let mut __states_len = __states.len();
            let __top = __states[__states_len - 1];
            let __action = match __opt_integer {
                None => __EOF_ACTION[__top as usize],
                Some(__integer) => __action(__top, __integer),
            };
            if __action == 0 { return false; }
            if __action > 0 { return true; }
            let (__to_pop, __nt) = match __simulate_reduce(-(__action + 1), core::marker::PhantomData::<(&())>) {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop, nonterminal_produced
                } => (states_to_pop, nonterminal_produced),
                __state_machine::SimulatedReduce::Accept => return true,
            };
            __states_len -= __to_pop;
            __states.truncate(__states_len);
            let __top = __states[__states_len - 1];
            let __next_state = __goto(__top, __nt);
            __states.push(__next_state);
        }
    }
    fn __reduce<
        'input,
    >(
        __action: i16,
        __lookahead_start: Option<&Loc>,
        __states: &mut alloc::vec::Vec<i16>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> Option<Result<Vec<L<TopDecl>>,__lalrpop_util::ParseError<Loc, Token<'input>, LexerError<Infallible>>>>
    {
        let (__pop_states, __nonterminal) = match __action {
            0 => {
                __reduce0(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            1 => {
                __reduce1(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            2 => {
                __reduce2(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            3 => {
                __reduce3(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            4 => {
                __reduce4(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            5 => {
                __reduce5(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            6 => {
                __reduce6(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            7 => {
                __reduce7(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            8 => {
                __reduce8(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            9 => {
                __reduce9(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            10 => {
                __reduce10(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            11 => {
                __reduce11(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            12 => {
                __reduce12(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            13 => {
                __reduce13(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            14 => {
                __reduce14(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            15 => {
                __reduce15(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            16 => {
                __reduce16(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            17 => {
                __reduce17(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            18 => {
                __reduce18(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            19 => {
                __reduce19(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            20 => {
                __reduce20(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            21 => {
                __reduce21(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            22 => {
                __reduce22(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            23 => {
                __reduce23(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            24 => {
                __reduce24(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            25 => {
                __reduce25(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            26 => {
                __reduce26(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            27 => {
                __reduce27(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            28 => {
                __reduce28(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            29 => {
                __reduce29(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            30 => {
                __reduce30(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            31 => {
                __reduce31(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            32 => {
                __reduce32(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            33 => {
                __reduce33(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            34 => {
                __reduce34(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            35 => {
                __reduce35(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            36 => {
                __reduce36(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            37 => {
                __reduce37(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            38 => {
                __reduce38(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            39 => {
                __reduce39(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            40 => {
                __reduce40(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            41 => {
                __reduce41(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            42 => {
                __reduce42(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            43 => {
                __reduce43(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            44 => {
                __reduce44(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            45 => {
                __reduce45(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            46 => {
                __reduce46(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            47 => {
                __reduce47(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            48 => {
                __reduce48(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            49 => {
                __reduce49(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            50 => {
                __reduce50(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            51 => {
                __reduce51(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            52 => {
                __reduce52(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            53 => {
                __reduce53(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            54 => {
                __reduce54(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            55 => {
                __reduce55(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            56 => {
                __reduce56(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            57 => {
                __reduce57(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            58 => {
                __reduce58(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            59 => {
                __reduce59(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            60 => {
                __reduce60(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            61 => {
                __reduce61(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            62 => {
                __reduce62(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            63 => {
                __reduce63(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            64 => {
                __reduce64(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            65 => {
                __reduce65(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            66 => {
                __reduce66(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            67 => {
                __reduce67(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            68 => {
                __reduce68(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            69 => {
                __reduce69(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            70 => {
                __reduce70(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            71 => {
                __reduce71(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            72 => {
                __reduce72(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            73 => {
                __reduce73(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            74 => {
                __reduce74(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            75 => {
                __reduce75(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            76 => {
                __reduce76(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            77 => {
                __reduce77(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            78 => {
                __reduce78(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            79 => {
                __reduce79(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            80 => {
                __reduce80(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            81 => {
                __reduce81(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            82 => {
                __reduce82(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            83 => {
                __reduce83(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            84 => {
                __reduce84(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            85 => {
                __reduce85(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            86 => {
                __reduce86(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            87 => {
                __reduce87(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            88 => {
                __reduce88(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            89 => {
                __reduce89(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            90 => {
                __reduce90(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            91 => {
                __reduce91(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            92 => {
                __reduce92(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            93 => {
                __reduce93(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            94 => {
                __reduce94(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            95 => {
                __reduce95(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            96 => {
                __reduce96(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            97 => {
                __reduce97(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            98 => {
                __reduce98(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            99 => {
                __reduce99(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            100 => {
                __reduce100(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            101 => {
                __reduce101(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            102 => {
                __reduce102(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            103 => {
                __reduce103(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            104 => {
                __reduce104(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            105 => {
                __reduce105(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            106 => {
                __reduce106(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            107 => {
                __reduce107(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            108 => {
                __reduce108(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            109 => {
                __reduce109(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            110 => {
                __reduce110(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            111 => {
                __reduce111(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            112 => {
                __reduce112(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            113 => {
                __reduce113(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            114 => {
                __reduce114(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            115 => {
                __reduce115(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            116 => {
                __reduce116(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            117 => {
                __reduce117(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            118 => {
                __reduce118(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            119 => {
                __reduce119(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            120 => {
                __reduce120(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            121 => {
                __reduce121(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            122 => {
                __reduce122(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            123 => {
                __reduce123(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            124 => {
                __reduce124(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            125 => {
                __reduce125(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            126 => {
                __reduce126(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            127 => {
                __reduce127(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            128 => {
                __reduce128(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            129 => {
                __reduce129(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            130 => {
                __reduce130(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            131 => {
                __reduce131(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            132 => {
                __reduce132(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            133 => {
                __reduce133(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            134 => {
                __reduce134(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            135 => {
                __reduce135(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            136 => {
                __reduce136(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            137 => {
                __reduce137(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            138 => {
                __reduce138(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            139 => {
                __reduce139(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            140 => {
                __reduce140(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            141 => {
                __reduce141(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            142 => {
                __reduce142(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            143 => {
                __reduce143(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            144 => {
                __reduce144(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            145 => {
                __reduce145(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            146 => {
                __reduce146(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            147 => {
                __reduce147(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            148 => {
                __reduce148(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            149 => {
                __reduce149(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            150 => {
                __reduce150(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            151 => {
                __reduce151(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            152 => {
                __reduce152(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            153 => {
                __reduce153(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            154 => {
                __reduce154(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            155 => {
                __reduce155(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            156 => {
                __reduce156(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            157 => {
                __reduce157(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            158 => {
                __reduce158(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            159 => {
                __reduce159(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            160 => {
                __reduce160(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            161 => {
                __reduce161(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            162 => {
                __reduce162(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            163 => {
                __reduce163(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            164 => {
                __reduce164(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            165 => {
                __reduce165(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            166 => {
                __reduce166(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            167 => {
                __reduce167(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            168 => {
                __reduce168(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            169 => {
                __reduce169(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            170 => {
                __reduce170(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            171 => {
                __reduce171(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            172 => {
                __reduce172(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            173 => {
                __reduce173(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            174 => {
                __reduce174(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            175 => {
                __reduce175(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            176 => {
                __reduce176(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            177 => {
                __reduce177(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            178 => {
                __reduce178(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            179 => {
                __reduce179(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            180 => {
                __reduce180(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            181 => {
                __reduce181(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            182 => {
                __reduce182(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            183 => {
                __reduce183(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            184 => {
                __reduce184(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            185 => {
                __reduce185(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            186 => {
                __reduce186(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            187 => {
                __reduce187(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            188 => {
                __reduce188(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            189 => {
                __reduce189(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            190 => {
                __reduce190(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            191 => {
                __reduce191(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            192 => {
                __reduce192(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            193 => {
                __reduce193(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            194 => {
                __reduce194(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            195 => {
                __reduce195(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            196 => {
                __reduce196(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            197 => {
                __reduce197(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            198 => {
                __reduce198(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            199 => {
                __reduce199(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            200 => {
                __reduce200(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            201 => {
                __reduce201(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            202 => {
                __reduce202(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            203 => {
                __reduce203(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            204 => {
                __reduce204(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            205 => {
                __reduce205(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            206 => {
                __reduce206(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            207 => {
                __reduce207(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            208 => {
                __reduce208(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            209 => {
                __reduce209(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            210 => {
                __reduce210(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            211 => {
                __reduce211(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            212 => {
                __reduce212(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            213 => {
                __reduce213(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            214 => {
                __reduce214(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            215 => {
                __reduce215(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            216 => {
                __reduce216(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            217 => {
                __reduce217(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            218 => {
                __reduce218(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            219 => {
                __reduce219(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            220 => {
                __reduce220(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            221 => {
                __reduce221(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            222 => {
                __reduce222(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            223 => {
                __reduce223(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            224 => {
                __reduce224(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            225 => {
                __reduce225(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            226 => {
                __reduce226(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            227 => {
                __reduce227(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            228 => {
                __reduce228(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            229 => {
                __reduce229(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            230 => {
                __reduce230(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            231 => {
                __reduce231(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            232 => {
                __reduce232(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            233 => {
                __reduce233(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            234 => {
                __reduce234(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            235 => {
                __reduce235(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            236 => {
                __reduce236(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            237 => {
                __reduce237(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            238 => {
                __reduce238(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            239 => {
                __reduce239(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            240 => {
                __reduce240(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            241 => {
                __reduce241(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            242 => {
                __reduce242(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            243 => {
                __reduce243(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            244 => {
                __reduce244(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            245 => {
                __reduce245(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            246 => {
                __reduce246(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            247 => {
                __reduce247(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            248 => {
                __reduce248(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            249 => {
                __reduce249(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            250 => {
                __reduce250(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            251 => {
                __reduce251(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            252 => {
                __reduce252(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            253 => {
                __reduce253(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            254 => {
                __reduce254(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            255 => {
                __reduce255(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            256 => {
                __reduce256(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            257 => {
                __reduce257(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            258 => {
                __reduce258(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            259 => {
                __reduce259(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            260 => {
                __reduce260(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            261 => {
                __reduce261(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            262 => {
                __reduce262(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            263 => {
                __reduce263(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            264 => {
                __reduce264(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            265 => {
                __reduce265(__lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            266 => {
                // __TopDecls = TopDecls => ActionFn(1);
                let __sym0 = __pop_Variant59(__symbols);
                let __start = __sym0.0;
                let __end = __sym0.2;
                let __nt = super::__action1::<>(__sym0);
                return Some(Ok(__nt));
            }
            _ => panic!("invalid action code {}", __action)
        };
        let __states_len = __states.len();
        __states.truncate(__states_len - __pop_states);
        let __state = *__states.last().unwrap();
        let __next_state = __goto(__state, __nonterminal);
        __states.push(__next_state);
        None
    }
    #[inline(never)]
    fn __symbol_type_mismatch() -> ! {
        panic!("symbol type mismatch")
    }
    fn __pop_Variant6<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (L<Expr>, Vec<L<Stmt>>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant6(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant19<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (Option<SmolStr>, L<Expr>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant19(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant21<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (Option<SmolStr>, L<Pat>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant21(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant17<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (SmolStr, Type), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant17(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant12<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (Token<'input>, Type), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant12(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant4<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (Token<'input>, Vec<Type>, Token<'input>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant4(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant10<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, (Token<'input>, core::option::Option<Token<'input>>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant10(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant28<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Alt, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant28(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant31<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, AssignOp, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant31(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant14<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, CallArg, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant14(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant33<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, ConstrPattern, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant33(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant34<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Constructor, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant34(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant35<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, ConstructorDecl, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant35(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant37<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Expr, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant37(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant40<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<Expr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant40(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant38<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<FunDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant38(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant39<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<ImportDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant39(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant41<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<Pat>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant41(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant42<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<Stmt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant42(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant57<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<TopDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant57(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant61<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, L<TypeDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant61(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant27<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Loc, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant27(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant23<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Named<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant23(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant46<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Pat, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant46(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant56<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Stmt, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant56(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant0<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Token<'input>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant0(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant2<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Type, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant2(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant62<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, TypeDeclRhs, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant62(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant51<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant51(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant52<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant52(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant44<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<(SmolStr, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant44(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant49<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<(Token<'input>, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant49(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant30<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<Alt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant30(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant50<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant50(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant60<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<ConstructorDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant60(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant8<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<L<Stmt>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant8(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant59<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<L<TopDecl>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant59(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant53<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant53(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant63<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<SmolStr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant63(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant55<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<Token<'input>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant55(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant54<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, Vec<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant54(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant7<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant7(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant20<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant20(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant22<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant22(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant18<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(SmolStr, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant18(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant13<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Token<'input>, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant13(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant29<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Alt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant29(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant15<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant15(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant36<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<ConstructorDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant36(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant43<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<Stmt>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant43(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant58<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<TopDecl>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant58(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant24<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant24(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant26<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Token<'input>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant26(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant25<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant25(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant45<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant45(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant47<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant47(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant16<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<(Token<'input>, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant16(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant5<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<(Token<'input>, Vec<Type>, Token<'input>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant5(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant11<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant11(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant32<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant32(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant48<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant48(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant1<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<Token<'input>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant1(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant3<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant3(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant9<
      'input,
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>
    ) -> (Loc, core::option::Option<Vec<L<Stmt>>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant9(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __reduce0<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ","? = "," => ActionFn(127);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action127::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (1, 0)
    }
    fn __reduce1<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ","? =  => ActionFn(128);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action128::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (0, 0)
    }
    fn __reduce2<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (":" <Type>) = ":", Type => ActionFn(113);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action113::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 1)
    }
    fn __reduce3<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (":" <Type>)? = ":", Type => ActionFn(201);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action201::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (2, 2)
    }
    fn __reduce4<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (":" <Type>)? =  => ActionFn(112);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action112::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (0, 2)
    }
    fn __reduce5<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("[" Sep<Type, ","> "]") = "[", Sep<Type, ",">, "]" => ActionFn(110);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant54(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action110::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (3, 3)
    }
    fn __reduce6<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("[" Sep<Type, ","> "]")? = "[", Sep<Type, ",">, "]" => ActionFn(208);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant54(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action208::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant5(__nt), __end));
        (3, 4)
    }
    fn __reduce7<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("[" Sep<Type, ","> "]")? =  => ActionFn(109);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action109::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant5(__nt), __end));
        (0, 4)
    }
    fn __reduce8<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT) = "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(105);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action105::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (7, 5)
    }
    fn __reduce9<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)* =  => ActionFn(103);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action103::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (0, 6)
    }
    fn __reduce10<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)* = ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ => ActionFn(104);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action104::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (1, 6)
    }
    fn __reduce11<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ = "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(213);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action213::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (7, 7)
    }
    fn __reduce12<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ = ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+, "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(214);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant8(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant40(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant7(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action214::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (8, 7)
    }
    fn __reduce13<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT) = "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(102);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant8(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action102::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant8(__nt), __end));
        (6, 8)
    }
    fn __reduce14<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT)? = "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(217);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant8(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action217::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (6, 9)
    }
    fn __reduce15<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT)? =  => ActionFn(101);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action101::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (0, 9)
    }
    fn __reduce16<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?) = "self", "," => ActionFn(197);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action197::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (2, 10)
    }
    fn __reduce17<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?) = "self" => ActionFn(198);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action198::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (1, 10)
    }
    fn __reduce18<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? = "self", "," => ActionFn(222);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action222::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (2, 11)
    }
    fn __reduce19<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? = "self" => ActionFn(223);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action223::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (1, 11)
    }
    fn __reduce20<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? =  => ActionFn(117);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action117::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (0, 11)
    }
    fn __reduce21<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <Type>)> ",") = LowerId, ":", Type, "," => ActionFn(242);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action242::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (4, 12)
    }
    fn __reduce22<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <Type>)> ",")* =  => ActionFn(149);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action149::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (0, 13)
    }
    fn __reduce23<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <Type>)> ",")* = (<(<LowerId> ":" <Type>)> ",")+ => ActionFn(150);
        let __sym0 = __pop_Variant13(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action150::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (1, 13)
    }
    fn __reduce24<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <Type>)> ",")+ = LowerId, ":", Type, "," => ActionFn(244);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action244::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (4, 14)
    }
    fn __reduce25<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <Type>)> ",")+ = (<(<LowerId> ":" <Type>)> ",")+, LowerId, ":", Type, "," => ActionFn(245);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant13(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action245::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (5, 14)
    }
    fn __reduce26<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",") = CallArg, "," => ActionFn(167);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant14(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action167::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (2, 15)
    }
    fn __reduce27<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")* =  => ActionFn(165);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action165::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (0, 16)
    }
    fn __reduce28<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")* = (<CallArg> ",")+ => ActionFn(166);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action166::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (1, 16)
    }
    fn __reduce29<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")+ = CallArg, "," => ActionFn(248);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant14(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action248::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (2, 17)
    }
    fn __reduce30<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")+ = (<CallArg> ",")+, CallArg, "," => ActionFn(249);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant14(__symbols);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action249::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (3, 17)
    }
    fn __reduce31<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <Type>) = LowerId, ":", Type => ActionFn(115);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action115::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (3, 18)
    }
    fn __reduce32<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <Type>)? = LowerId, ":", Type => ActionFn(243);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action243::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (3, 19)
    }
    fn __reduce33<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <Type>)? =  => ActionFn(148);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action148::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (0, 19)
    }
    fn __reduce34<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE) = NamedField, NEWLINE => ActionFn(126);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action126::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (2, 20)
    }
    fn __reduce35<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE)+ = NamedField, NEWLINE => ActionFn(256);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action256::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (2, 21)
    }
    fn __reduce36<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE)+ = (<NamedField> NEWLINE)+, NamedField, NEWLINE => ActionFn(257);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant17(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action257::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (3, 21)
    }
    fn __reduce37<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",") = ParenExpr, "," => ActionFn(162);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action162::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (2, 22)
    }
    fn __reduce38<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")* =  => ActionFn(160);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action160::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (0, 23)
    }
    fn __reduce39<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")* = (<ParenExpr> ",")+ => ActionFn(161);
        let __sym0 = __pop_Variant20(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action161::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (1, 23)
    }
    fn __reduce40<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")+ = ParenExpr, "," => ActionFn(258);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action258::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (2, 24)
    }
    fn __reduce41<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")+ = (<ParenExpr> ",")+, ParenExpr, "," => ActionFn(259);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant20(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action259::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (3, 24)
    }
    fn __reduce42<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",") = PatternField, "," => ActionFn(172);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant21(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action172::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (2, 25)
    }
    fn __reduce43<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")* =  => ActionFn(170);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action170::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (0, 26)
    }
    fn __reduce44<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")* = (<PatternField> ",")+ => ActionFn(171);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action171::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (1, 26)
    }
    fn __reduce45<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")+ = PatternField, "," => ActionFn(262);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant21(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action262::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (2, 27)
    }
    fn __reduce46<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")+ = (<PatternField> ",")+, PatternField, "," => ActionFn(263);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant21(__symbols);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action263::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (3, 27)
    }
    fn __reduce47<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",") = RecordTypeField, "," => ActionFn(146);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action146::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (2, 28)
    }
    fn __reduce48<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")* =  => ActionFn(144);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action144::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (0, 29)
    }
    fn __reduce49<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")* = (<RecordTypeField> ",")+ => ActionFn(145);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action145::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 29)
    }
    fn __reduce50<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")+ = RecordTypeField, "," => ActionFn(266);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action266::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (2, 30)
    }
    fn __reduce51<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")+ = (<RecordTypeField> ",")+, RecordTypeField, "," => ActionFn(267);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant23(__symbols);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action267::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (3, 30)
    }
    fn __reduce52<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<Type> ",") = Type, "," => ActionFn(141);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action141::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 31)
    }
    fn __reduce53<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<Type> ",")* =  => ActionFn(139);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action139::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (0, 32)
    }
    fn __reduce54<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<Type> ",")* = (<Type> ",")+ => ActionFn(140);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action140::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (1, 32)
    }
    fn __reduce55<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<Type> ",")+ = Type, "," => ActionFn(270);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action270::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (2, 33)
    }
    fn __reduce56<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<Type> ",")+ = (<Type> ",")+, Type, "," => ActionFn(271);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action271::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (3, 33)
    }
    fn __reduce57<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",") = UpperId, "," => ActionFn(136);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action136::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant0(__nt), __end));
        (2, 34)
    }
    fn __reduce58<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")* =  => ActionFn(134);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action134::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (0, 35)
    }
    fn __reduce59<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")* = (<UpperId> ",")+ => ActionFn(135);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action135::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 35)
    }
    fn __reduce60<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")+ = UpperId, "," => ActionFn(274);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action274::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (2, 36)
    }
    fn __reduce61<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")+ = (<UpperId> ",")+, UpperId, "," => ActionFn(275);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action275::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (3, 36)
    }
    fn __reduce62<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".") = UpperId, "." => ActionFn(121);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action121::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant0(__nt), __end));
        (2, 37)
    }
    fn __reduce63<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")* =  => ActionFn(175);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action175::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (0, 38)
    }
    fn __reduce64<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")* = (<UpperId> ".")+ => ActionFn(176);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action176::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 38)
    }
    fn __reduce65<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")+ = UpperId, "." => ActionFn(278);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action278::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (2, 39)
    }
    fn __reduce66<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")+ = (<UpperId> ".")+, UpperId, "." => ActionFn(279);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action279::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (3, 39)
    }
    fn __reduce67<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")? = UpperId, "." => ActionFn(280);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action280::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (2, 40)
    }
    fn __reduce68<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")? =  => ActionFn(120);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action120::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (0, 40)
    }
    fn __reduce69<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // @L =  => ActionFn(133);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action133::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (0, 41)
    }
    fn __reduce70<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // @R =  => ActionFn(132);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action132::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (0, 42)
    }
    fn __reduce71<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alt = LPat, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(33);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant8(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant41(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action33::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (6, 43)
    }
    fn __reduce72<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alt = LPat, ":", LStmt => ActionFn(34);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant42(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant41(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action34::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (3, 43)
    }
    fn __reduce73<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alt* =  => ActionFn(98);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action98::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (0, 44)
    }
    fn __reduce74<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alt* = Alt+ => ActionFn(99);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action99::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 44)
    }
    fn __reduce75<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alt+ = Alt => ActionFn(156);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action156::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 45)
    }
    fn __reduce76<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alt+ = Alt+, Alt => ActionFn(157);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant28(__symbols);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action157::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (2, 45)
    }
    fn __reduce77<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alts =  => ActionFn(437);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action437::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (0, 46)
    }
    fn __reduce78<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Alts = Alt+ => ActionFn(438);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action438::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (1, 46)
    }
    fn __reduce79<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "=" => ActionFn(35);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action35::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (1, 47)
    }
    fn __reduce80<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "+=" => ActionFn(36);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action36::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (1, 47)
    }
    fn __reduce81<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "-=" => ActionFn(37);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action37::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (1, 47)
    }
    fn __reduce82<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // CallArg = LowerId, "=", LExpr => ActionFn(71);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant40(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action71::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (3, 48)
    }
    fn __reduce83<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // CallArg = LExpr => ActionFn(72);
        let __sym0 = __pop_Variant40(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action72::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (1, 48)
    }
    fn __reduce84<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // CallArg? = CallArg => ActionFn(163);
        let __sym0 = __pop_Variant14(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action163::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 49)
    }
    fn __reduce85<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // CallArg? =  => ActionFn(164);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action164::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (0, 49)
    }
    fn __reduce86<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstrPattern = Constructor => ActionFn(82);
        let __sym0 = __pop_Variant34(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action82::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant33(__nt), __end));
        (1, 50)
    }
    fn __reduce87<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstrPattern = Constructor, "(", Sep<PatternField, ",">, ")" => ActionFn(83);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant52(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant34(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action83::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant33(__nt), __end));
        (4, 50)
    }
    fn __reduce88<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Constructor = UpperId, ".", UpperId => ActionFn(80);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action80::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant34(__nt), __end));
        (3, 51)
    }
    fn __reduce89<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Constructor = UpperId => ActionFn(81);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action81::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant34(__nt), __end));
        (1, 51)
    }
    fn __reduce90<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, NEWLINE => ActionFn(8);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action8::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (2, 52)
    }
    fn __reduce91<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, ":", NEWLINE, INDENT, NamedFields, DEDENT => ActionFn(9);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant44(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action9::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (6, 52)
    }
    fn __reduce92<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, "(", UnnamedFields, ",", ")", NEWLINE => ActionFn(199);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant54(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action199::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (6, 52)
    }
    fn __reduce93<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, "(", UnnamedFields, ")", NEWLINE => ActionFn(200);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant54(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action200::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (5, 52)
    }
    fn __reduce94<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl+ = ConstructorDecl => ActionFn(129);
        let __sym0 = __pop_Variant35(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action129::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant36(__nt), __end));
        (1, 53)
    }
    fn __reduce95<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl+ = ConstructorDecl+, ConstructorDecl => ActionFn(130);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant35(__symbols);
        let __sym0 = __pop_Variant36(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action130::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant36(__nt), __end));
        (2, 53)
    }
    fn __reduce96<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr = Expr, "||", Expr6 => ActionFn(378);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action378::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 54)
    }
    fn __reduce97<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr = Expr6 => ActionFn(68);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action68::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 54)
    }
    fn __reduce98<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = "self" => ActionFn(39);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action39::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 55)
    }
    fn __reduce99<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = LowerId => ActionFn(40);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action40::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 55)
    }
    fn __reduce100<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = UpperId => ActionFn(41);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action41::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 55)
    }
    fn __reduce101<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = "(", Sep<ParenExpr, ",">, ")" => ActionFn(42);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant51(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action42::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 55)
    }
    fn __reduce102<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = IntLit => ActionFn(43);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action43::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 55)
    }
    fn __reduce103<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = StringLit => ActionFn(44);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action44::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 55)
    }
    fn __reduce104<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = Expr0, "[", LExpr, "]" => ActionFn(379);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant40(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action379::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (4, 55)
    }
    fn __reduce105<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = Expr0, "(", Sep<CallArg, ",">, ")" => ActionFn(380);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant50(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action380::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (4, 55)
    }
    fn __reduce106<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = Expr0, ".", LowerId => ActionFn(381);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action381::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 55)
    }
    fn __reduce107<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr0 = Expr0, ".", UpperId => ActionFn(48);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action48::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 55)
    }
    fn __reduce108<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr1 = Expr1, "..", Expr0 => ActionFn(382);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action382::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 56)
    }
    fn __reduce109<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr1 = Expr0 => ActionFn(50);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action50::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 56)
    }
    fn __reduce110<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr2 = "!", Expr2 => ActionFn(383);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant37(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action383::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (2, 57)
    }
    fn __reduce111<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr2 = Expr1 => ActionFn(52);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action52::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 57)
    }
    fn __reduce112<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr3 = Expr3, "*", Expr2 => ActionFn(384);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action384::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 58)
    }
    fn __reduce113<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr3 = Expr2 => ActionFn(54);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action54::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 58)
    }
    fn __reduce114<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr4 = Expr4, "+", Expr3 => ActionFn(385);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action385::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 59)
    }
    fn __reduce115<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr4 = Expr4, "-", Expr3 => ActionFn(386);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action386::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 59)
    }
    fn __reduce116<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr4 = Expr3 => ActionFn(57);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action57::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 59)
    }
    fn __reduce117<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr5, "==", Expr4 => ActionFn(387);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action387::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 60)
    }
    fn __reduce118<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr5, "!=", Expr4 => ActionFn(388);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action388::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 60)
    }
    fn __reduce119<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr5, "<", Expr4 => ActionFn(389);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action389::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 60)
    }
    fn __reduce120<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr5, ">", Expr4 => ActionFn(390);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action390::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 60)
    }
    fn __reduce121<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr5, "<=", Expr4 => ActionFn(391);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action391::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 60)
    }
    fn __reduce122<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr5, ">=", Expr4 => ActionFn(392);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action392::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 60)
    }
    fn __reduce123<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr5 = Expr4 => ActionFn(64);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action64::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 60)
    }
    fn __reduce124<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr6 = Expr6, "&&", Expr5 => ActionFn(393);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant37(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action393::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (3, 61)
    }
    fn __reduce125<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Expr6 = Expr5 => ActionFn(66);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action66::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 61)
    }
    fn __reduce126<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(394);
        assert!(__symbols.len() >= 16);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant8(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant2(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant49(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym15.2;
        let __nt = super::__action394::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (16, 62)
    }
    fn __reduce127<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(395);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant8(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant2(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant49(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action395::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (14, 62)
    }
    fn __reduce128<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(396);
        assert!(__symbols.len() >= 15);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant8(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant2(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant49(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym14.2;
        let __nt = super::__action396::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (15, 62)
    }
    fn __reduce129<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(397);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant8(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant2(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant49(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action397::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (13, 62)
    }
    fn __reduce130<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "(", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(398);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant8(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant2(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant49(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action398::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (14, 62)
    }
    fn __reduce131<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "(", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(399);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant8(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant2(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant49(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action399::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (12, 62)
    }
    fn __reduce132<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(400);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant8(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant49(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action400::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (14, 62)
    }
    fn __reduce133<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(401);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant8(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant49(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action401::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (12, 62)
    }
    fn __reduce134<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(402);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant8(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant49(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action402::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (13, 62)
    }
    fn __reduce135<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(403);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant8(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant49(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action403::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (11, 62)
    }
    fn __reduce136<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "(", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(404);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant8(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant49(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action404::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (12, 62)
    }
    fn __reduce137<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "(", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(405);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant8(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant49(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action405::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (10, 62)
    }
    fn __reduce138<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(406);
        assert!(__symbols.len() >= 22);
        let __sym21 = __pop_Variant0(__symbols);
        let __sym20 = __pop_Variant8(__symbols);
        let __sym19 = __pop_Variant0(__symbols);
        let __sym18 = __pop_Variant0(__symbols);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant2(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant49(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant54(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym21.2;
        let __nt = super::__action406::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18, __sym19, __sym20, __sym21);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (22, 62)
    }
    fn __reduce139<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(407);
        assert!(__symbols.len() >= 20);
        let __sym19 = __pop_Variant0(__symbols);
        let __sym18 = __pop_Variant8(__symbols);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant2(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant49(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant54(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym19.2;
        let __nt = super::__action407::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18, __sym19);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (20, 62)
    }
    fn __reduce140<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(408);
        assert!(__symbols.len() >= 21);
        let __sym20 = __pop_Variant0(__symbols);
        let __sym19 = __pop_Variant8(__symbols);
        let __sym18 = __pop_Variant0(__symbols);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant2(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant49(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant54(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym20.2;
        let __nt = super::__action408::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18, __sym19, __sym20);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (21, 62)
    }
    fn __reduce141<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(409);
        assert!(__symbols.len() >= 19);
        let __sym18 = __pop_Variant0(__symbols);
        let __sym17 = __pop_Variant8(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant2(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant49(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant54(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym18.2;
        let __nt = super::__action409::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (19, 62)
    }
    fn __reduce142<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(410);
        assert!(__symbols.len() >= 20);
        let __sym19 = __pop_Variant0(__symbols);
        let __sym18 = __pop_Variant8(__symbols);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant2(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant49(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant54(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym19.2;
        let __nt = super::__action410::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18, __sym19);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (20, 62)
    }
    fn __reduce143<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(411);
        assert!(__symbols.len() >= 18);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant8(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant2(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant49(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant54(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym17.2;
        let __nt = super::__action411::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (18, 62)
    }
    fn __reduce144<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(412);
        assert!(__symbols.len() >= 19);
        let __sym18 = __pop_Variant0(__symbols);
        let __sym17 = __pop_Variant8(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant2(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant49(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym18.2;
        let __nt = super::__action412::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (19, 62)
    }
    fn __reduce145<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(413);
        assert!(__symbols.len() >= 17);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant8(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant2(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant49(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym16.2;
        let __nt = super::__action413::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (17, 62)
    }
    fn __reduce146<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(414);
        assert!(__symbols.len() >= 18);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant8(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant2(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant49(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym17.2;
        let __nt = super::__action414::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (18, 62)
    }
    fn __reduce147<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(415);
        assert!(__symbols.len() >= 16);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant8(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant2(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant49(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym15.2;
        let __nt = super::__action415::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (16, 62)
    }
    fn __reduce148<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(416);
        assert!(__symbols.len() >= 17);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant8(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant2(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant49(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym16.2;
        let __nt = super::__action416::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (17, 62)
    }
    fn __reduce149<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", ":", Type, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(417);
        assert!(__symbols.len() >= 15);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant8(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant2(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant49(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym14.2;
        let __nt = super::__action417::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (15, 62)
    }
    fn __reduce150<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(418);
        assert!(__symbols.len() >= 20);
        let __sym19 = __pop_Variant0(__symbols);
        let __sym18 = __pop_Variant8(__symbols);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant49(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant54(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym19.2;
        let __nt = super::__action418::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18, __sym19);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (20, 62)
    }
    fn __reduce151<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(419);
        assert!(__symbols.len() >= 18);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant8(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant49(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant54(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym17.2;
        let __nt = super::__action419::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (18, 62)
    }
    fn __reduce152<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(420);
        assert!(__symbols.len() >= 19);
        let __sym18 = __pop_Variant0(__symbols);
        let __sym17 = __pop_Variant8(__symbols);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant49(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant54(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym18.2;
        let __nt = super::__action420::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17, __sym18);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (19, 62)
    }
    fn __reduce153<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(421);
        assert!(__symbols.len() >= 17);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant8(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant49(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant54(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym16.2;
        let __nt = super::__action421::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (17, 62)
    }
    fn __reduce154<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(422);
        assert!(__symbols.len() >= 18);
        let __sym17 = __pop_Variant0(__symbols);
        let __sym16 = __pop_Variant8(__symbols);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant49(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant54(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym17.2;
        let __nt = super::__action422::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16, __sym17);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (18, 62)
    }
    fn __reduce155<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "[", Sep<Type, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(423);
        assert!(__symbols.len() >= 16);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant8(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant49(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant54(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym15.2;
        let __nt = super::__action423::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (16, 62)
    }
    fn __reduce156<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(424);
        assert!(__symbols.len() >= 17);
        let __sym16 = __pop_Variant0(__symbols);
        let __sym15 = __pop_Variant8(__symbols);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant49(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym16.2;
        let __nt = super::__action424::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15, __sym16);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (17, 62)
    }
    fn __reduce157<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(425);
        assert!(__symbols.len() >= 15);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant8(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant49(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym14.2;
        let __nt = super::__action425::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (15, 62)
    }
    fn __reduce158<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(426);
        assert!(__symbols.len() >= 16);
        let __sym15 = __pop_Variant0(__symbols);
        let __sym14 = __pop_Variant8(__symbols);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant49(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym15.2;
        let __nt = super::__action426::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14, __sym15);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (16, 62)
    }
    fn __reduce159<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "(", "self", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(427);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant8(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant49(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action427::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (14, 62)
    }
    fn __reduce160<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", UpperId, ".", LowerId, "[", Sep<UpperId, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(428);
        assert!(__symbols.len() >= 15);
        let __sym14 = __pop_Variant0(__symbols);
        let __sym13 = __pop_Variant8(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant49(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant55(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym14.2;
        let __nt = super::__action428::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13, __sym14);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (15, 62)
    }
    fn __reduce161<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "fn", LowerId, "[", Sep<UpperId, ",">, "]", "(", Sep<(<LowerId> ":" <Type>), ",">, ")", "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(429);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant8(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant49(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant55(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action429::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (13, 62)
    }
    fn __reduce162<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ImportDecl = "import", Sep<UpperId, ".">, NEWLINE => ActionFn(430);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant55(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action430::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant39(__nt), __end));
        (3, 63)
    }
    fn __reduce163<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LExpr = Expr => ActionFn(431);
        let __sym0 = __pop_Variant37(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action431::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant40(__nt), __end));
        (1, 64)
    }
    fn __reduce164<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LPat = Pat => ActionFn(432);
        let __sym0 = __pop_Variant46(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action432::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant41(__nt), __end));
        (1, 65)
    }
    fn __reduce165<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmt = Stmt => ActionFn(433);
        let __sym0 = __pop_Variant56(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action433::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (1, 66)
    }
    fn __reduce166<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmt* =  => ActionFn(106);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action106::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (0, 67)
    }
    fn __reduce167<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmt* = LStmt+ => ActionFn(107);
        let __sym0 = __pop_Variant43(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action107::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (1, 67)
    }
    fn __reduce168<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmt+ = LStmt => ActionFn(152);
        let __sym0 = __pop_Variant42(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action152::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (1, 68)
    }
    fn __reduce169<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmt+ = LStmt+, LStmt => ActionFn(153);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant42(__symbols);
        let __sym0 = __pop_Variant43(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action153::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (2, 68)
    }
    fn __reduce170<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmts =  => ActionFn(443);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action443::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant8(__nt), __end));
        (0, 69)
    }
    fn __reduce171<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // LStmts = LStmt+ => ActionFn(444);
        let __sym0 = __pop_Variant43(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action444::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant8(__nt), __end));
        (1, 69)
    }
    fn __reduce172<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // NEWLINE* =  => ActionFn(90);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action90::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (0, 70)
    }
    fn __reduce173<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // NEWLINE* = NEWLINE+ => ActionFn(91);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action91::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 70)
    }
    fn __reduce174<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // NEWLINE+ = NEWLINE => ActionFn(179);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action179::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 71)
    }
    fn __reduce175<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // NEWLINE+ = NEWLINE+, NEWLINE => ActionFn(180);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action180::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (2, 71)
    }
    fn __reduce176<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // NamedField = LowerId, ":", Type => ActionFn(12);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action12::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (3, 72)
    }
    fn __reduce177<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // NamedFields = (<NamedField> NEWLINE)+ => ActionFn(11);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action11::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant44(__nt), __end));
        (1, 73)
    }
    fn __reduce178<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ParenExpr = LowerId, "=", LExpr => ActionFn(69);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant40(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action69::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (3, 74)
    }
    fn __reduce179<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ParenExpr = LExpr => ActionFn(70);
        let __sym0 = __pop_Variant40(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action70::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (1, 74)
    }
    fn __reduce180<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ParenExpr? = ParenExpr => ActionFn(158);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action158::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (1, 75)
    }
    fn __reduce181<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // ParenExpr? =  => ActionFn(159);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action159::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (0, 75)
    }
    fn __reduce182<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Pat = LowerId => ActionFn(74);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action74::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (1, 76)
    }
    fn __reduce183<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Pat = ConstrPattern => ActionFn(75);
        let __sym0 = __pop_Variant33(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action75::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (1, 76)
    }
    fn __reduce184<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Pat = "(", Sep<PatternField, ",">, ")" => ActionFn(76);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant52(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action76::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (3, 76)
    }
    fn __reduce185<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Pat = "_" => ActionFn(77);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action77::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (1, 76)
    }
    fn __reduce186<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Pat = StringLit => ActionFn(78);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action78::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (1, 76)
    }
    fn __reduce187<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Pat = StringLit, LowerId => ActionFn(79);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action79::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (2, 76)
    }
    fn __reduce188<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // PatternField = LowerId, "=", LPat => ActionFn(84);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant41(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action84::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (3, 77)
    }
    fn __reduce189<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // PatternField = LPat => ActionFn(85);
        let __sym0 = __pop_Variant41(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action85::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (1, 77)
    }
    fn __reduce190<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // PatternField? = PatternField => ActionFn(168);
        let __sym0 = __pop_Variant21(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action168::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 78)
    }
    fn __reduce191<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // PatternField? =  => ActionFn(169);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action169::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (0, 78)
    }
    fn __reduce192<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField = LowerId, ":", Type => ActionFn(18);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action18::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (3, 79)
    }
    fn __reduce193<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField = Type => ActionFn(19);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action19::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (1, 79)
    }
    fn __reduce194<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField? = RecordTypeField => ActionFn(142);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action142::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant48(__nt), __end));
        (1, 80)
    }
    fn __reduce195<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField? =  => ActionFn(143);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action143::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant48(__nt), __end));
        (0, 80)
    }
    fn __reduce196<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <Type>), ","> = LowerId, ":", Type => ActionFn(252);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action252::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (3, 81)
    }
    fn __reduce197<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <Type>), ","> =  => ActionFn(253);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action253::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (0, 81)
    }
    fn __reduce198<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <Type>), ","> = (<(<LowerId> ":" <Type>)> ",")+, LowerId, ":", Type => ActionFn(254);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant13(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action254::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (4, 81)
    }
    fn __reduce199<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <Type>), ","> = (<(<LowerId> ":" <Type>)> ",")+ => ActionFn(255);
        let __sym0 = __pop_Variant13(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action255::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (1, 81)
    }
    fn __reduce200<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = CallArg => ActionFn(439);
        let __sym0 = __pop_Variant14(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action439::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant50(__nt), __end));
        (1, 82)
    }
    fn __reduce201<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> =  => ActionFn(440);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action440::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant50(__nt), __end));
        (0, 82)
    }
    fn __reduce202<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = (<CallArg> ",")+, CallArg => ActionFn(441);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant14(__symbols);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action441::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant50(__nt), __end));
        (2, 82)
    }
    fn __reduce203<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = (<CallArg> ",")+ => ActionFn(442);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action442::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant50(__nt), __end));
        (1, 82)
    }
    fn __reduce204<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = ParenExpr => ActionFn(449);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action449::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (1, 83)
    }
    fn __reduce205<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> =  => ActionFn(450);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action450::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (0, 83)
    }
    fn __reduce206<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = (<ParenExpr> ",")+, ParenExpr => ActionFn(451);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant20(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action451::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (2, 83)
    }
    fn __reduce207<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = (<ParenExpr> ",")+ => ActionFn(452);
        let __sym0 = __pop_Variant20(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action452::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (1, 83)
    }
    fn __reduce208<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = PatternField => ActionFn(453);
        let __sym0 = __pop_Variant21(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action453::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (1, 84)
    }
    fn __reduce209<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> =  => ActionFn(454);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action454::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (0, 84)
    }
    fn __reduce210<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = (<PatternField> ",")+, PatternField => ActionFn(455);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant21(__symbols);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action455::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (2, 84)
    }
    fn __reduce211<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = (<PatternField> ",")+ => ActionFn(456);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action456::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (1, 84)
    }
    fn __reduce212<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = RecordTypeField => ActionFn(457);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action457::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant53(__nt), __end));
        (1, 85)
    }
    fn __reduce213<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> =  => ActionFn(458);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action458::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant53(__nt), __end));
        (0, 85)
    }
    fn __reduce214<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = (<RecordTypeField> ",")+, RecordTypeField => ActionFn(459);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant23(__symbols);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action459::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant53(__nt), __end));
        (2, 85)
    }
    fn __reduce215<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = (<RecordTypeField> ",")+ => ActionFn(460);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action460::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant53(__nt), __end));
        (1, 85)
    }
    fn __reduce216<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<Type, ","> = Type => ActionFn(463);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action463::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (1, 86)
    }
    fn __reduce217<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<Type, ","> =  => ActionFn(464);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action464::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (0, 86)
    }
    fn __reduce218<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<Type, ","> = (<Type> ",")+, Type => ActionFn(465);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action465::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (2, 86)
    }
    fn __reduce219<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<Type, ","> = (<Type> ",")+ => ActionFn(466);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action466::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (1, 86)
    }
    fn __reduce220<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = UpperId => ActionFn(467);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action467::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 87)
    }
    fn __reduce221<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> =  => ActionFn(468);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action468::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (0, 87)
    }
    fn __reduce222<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = (<UpperId> ",")+, UpperId => ActionFn(469);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action469::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (2, 87)
    }
    fn __reduce223<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = (<UpperId> ",")+ => ActionFn(470);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action470::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 87)
    }
    fn __reduce224<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = UpperId => ActionFn(471);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action471::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 88)
    }
    fn __reduce225<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> =  => ActionFn(472);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action472::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (0, 88)
    }
    fn __reduce226<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = (<UpperId> ".")+, UpperId => ActionFn(473);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action473::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (2, 88)
    }
    fn __reduce227<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = (<UpperId> ".")+ => ActionFn(474);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action474::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 88)
    }
    fn __reduce228<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, ":", Type, "=", LExpr, NEWLINE => ActionFn(206);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant40(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant41(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action206::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (7, 89)
    }
    fn __reduce229<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, "=", LExpr, NEWLINE => ActionFn(207);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant40(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant41(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action207::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (5, 89)
    }
    fn __reduce230<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(218);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant8(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action218::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (13, 89)
    }
    fn __reduce231<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(219);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action219::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (7, 89)
    }
    fn __reduce232<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+, "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(220);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant8(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant7(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action220::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (14, 89)
    }
    fn __reduce233<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ => ActionFn(221);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant7(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action221::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (8, 89)
    }
    fn __reduce234<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = LExpr, AssignOp, LExpr, NEWLINE => ActionFn(26);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant40(__symbols);
        let __sym1 = __pop_Variant31(__symbols);
        let __sym0 = __pop_Variant40(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action26::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (4, 89)
    }
    fn __reduce235<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = LExpr, NEWLINE => ActionFn(27);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant40(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action27::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (2, 89)
    }
    fn __reduce236<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "match", LExpr, ":", NEWLINE, INDENT, Alts, DEDENT => ActionFn(28);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant30(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action28::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (7, 89)
    }
    fn __reduce237<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "for", LowerId, "in", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(29);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant8(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant40(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action29::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (9, 89)
    }
    fn __reduce238<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "while", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(30);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant8(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action30::<>(__sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (7, 89)
    }
    fn __reduce239<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Stmt = "return", LExpr, NEWLINE => ActionFn(31);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant40(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action31::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (3, 89)
    }
    fn __reduce240<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl = TypeDecl => ActionFn(445);
        let __sym0 = __pop_Variant61(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action445::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (1, 90)
    }
    fn __reduce241<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, TypeDecl => ActionFn(446);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant61(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action446::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (2, 90)
    }
    fn __reduce242<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl = FunDecl => ActionFn(447);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action447::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (1, 90)
    }
    fn __reduce243<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, FunDecl => ActionFn(448);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant38(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action448::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (2, 90)
    }
    fn __reduce244<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl* =  => ActionFn(92);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action92::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (0, 91)
    }
    fn __reduce245<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl* = TopDecl+ => ActionFn(93);
        let __sym0 = __pop_Variant58(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action93::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (1, 91)
    }
    fn __reduce246<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl+ = TopDecl => ActionFn(177);
        let __sym0 = __pop_Variant57(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action177::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (1, 92)
    }
    fn __reduce247<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecl+ = TopDecl+, TopDecl => ActionFn(178);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant57(__symbols);
        let __sym0 = __pop_Variant58(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action178::<>(__sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (2, 92)
    }
    fn __reduce248<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecls =  => ActionFn(461);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action461::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (0, 93)
    }
    fn __reduce249<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TopDecls = TopDecl+ => ActionFn(462);
        let __sym0 = __pop_Variant58(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action462::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (1, 93)
    }
    fn __reduce250<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Type = UpperId => ActionFn(15);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action15::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (1, 94)
    }
    fn __reduce251<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Type = UpperId, "[", Sep<Type, ",">, "]" => ActionFn(16);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant54(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action16::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (4, 94)
    }
    fn __reduce252<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Type = "(", Sep<RecordTypeField, ",">, ")" => ActionFn(17);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant53(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action17::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (3, 94)
    }
    fn __reduce253<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Type? = Type => ActionFn(137);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action137::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (1, 95)
    }
    fn __reduce254<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // Type? =  => ActionFn(138);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action138::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (0, 95)
    }
    fn __reduce255<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TypeConstrs = ConstructorDecl+ => ActionFn(7);
        let __sym0 = __pop_Variant36(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action7::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (1, 96)
    }
    fn __reduce256<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TypeDecl = "type", UpperId, TypeParams, TypeDeclRhs => ActionFn(436);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant62(__symbols);
        let __sym2 = __pop_Variant63(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action436::<>(__sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (4, 97)
    }
    fn __reduce257<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TypeDeclRhs = ":", NEWLINE, INDENT, TypeConstrs, DEDENT => ActionFn(3);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant60(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action3::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (5, 98)
    }
    fn __reduce258<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TypeDeclRhs = ":", NEWLINE, INDENT, NamedFields, DEDENT => ActionFn(4);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant44(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action4::<>(__sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (5, 98)
    }
    fn __reduce259<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TypeParams =  => ActionFn(5);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action5::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (0, 99)
    }
    fn __reduce260<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // TypeParams = "[", Sep<UpperId, ",">, "]" => ActionFn(6);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant55(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action6::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (3, 99)
    }
    fn __reduce261<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // UnnamedFields = UnnamedFields, ",", Type => ActionFn(13);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant54(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action13::<>(__sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (3, 100)
    }
    fn __reduce262<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // UnnamedFields = Type => ActionFn(14);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action14::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (1, 100)
    }
    fn __reduce263<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // UpperId? = UpperId => ActionFn(173);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action173::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (1, 101)
    }
    fn __reduce264<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // UpperId? =  => ActionFn(174);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action174::<>(&__start, &__end);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (0, 101)
    }
    fn __reduce265<
        'input,
    >(
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<'input>,Loc)>,
        _: core::marker::PhantomData<(&'input ())>,
    ) -> (usize, usize)
    {
        // __LExpr = LExpr => ActionFn(0);
        let __sym0 = __pop_Variant40(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action0::<>(__sym0);
        __symbols.push((__start, __Symbol::Variant40(__nt), __end));
        (1, 102)
    }
}
#[allow(unused_imports)]
pub use self::__parse__TopDecls::TopDeclsParser;

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action0<
    'input,
>(
    (_, __0, _): (Loc, L<Expr>, Loc),
) -> L<Expr>
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action1<
    'input,
>(
    (_, __0, _): (Loc, Vec<L<TopDecl>>, Loc),
) -> Vec<L<TopDecl>>
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action2<
    'input,
>(
    (_, l, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, type_name, _): (Loc, Token<'input>, Loc),
    (_, type_params, _): (Loc, Vec<SmolStr>, Loc),
    (_, rhs, _): (Loc, TypeDeclRhs, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<TypeDecl>
{
    L::new(l, r, TypeDecl {
            name: type_name.smol_str(),
            type_params,
            rhs,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action3<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, constrs, _): (Loc, Vec<ConstructorDecl>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> TypeDeclRhs
{
    TypeDeclRhs::Sum(constrs)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action4<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, named_fields, _): (Loc, Vec<(SmolStr, Type)>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> TypeDeclRhs
{
    TypeDeclRhs::Product(ConstructorFields::Named(named_fields))
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action5<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<SmolStr>
{
    vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action6<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, params, _): (Loc, Vec<Token<'input>>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Vec<SmolStr>
{
    params.into_iter().map(|id| id.smol_str()).collect()
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action7<
    'input,
>(
    (_, __0, _): (Loc, alloc::vec::Vec<ConstructorDecl>, Loc),
) -> Vec<ConstructorDecl>
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action8<
    'input,
>(
    (_, name, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> ConstructorDecl
{
    ConstructorDecl {
            name: name.smol_str(),
            fields: ConstructorFields::Empty
        }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action9<
    'input,
>(
    (_, name, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, named_fields, _): (Loc, Vec<(SmolStr, Type)>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> ConstructorDecl
{
    ConstructorDecl {
            name: name.smol_str(),
            fields: ConstructorFields::Named(named_fields),
        }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action10<
    'input,
>(
    (_, name, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, fields, _): (Loc, Vec<Type>, Loc),
    (_, _, _): (Loc, core::option::Option<Token<'input>>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> ConstructorDecl
{
    ConstructorDecl {
            name: name.smol_str(),
            fields: ConstructorFields::Unnamed(fields),
        }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action11<
    'input,
>(
    (_, __0, _): (Loc, alloc::vec::Vec<(SmolStr, Type)>, Loc),
) -> Vec<(SmolStr, Type)>
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action12<
    'input,
>(
    (_, name, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, type_, _): (Loc, Type, Loc),
) -> (SmolStr, Type)
{
    (name.smol_str(), type_)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action13<
    'input,
>(
    (_, mut fields, _): (Loc, Vec<Type>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, field, _): (Loc, Type, Loc),
) -> Vec<Type>
{
    {
        fields.push(field);
        fields
    }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action14<
    'input,
>(
    (_, field, _): (Loc, Type, Loc),
) -> Vec<Type>
{
    vec![field]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action15<
    'input,
>(
    (_, name, _): (Loc, Token<'input>, Loc),
) -> Type
{
    Type::Named(NamedType { name: name.smol_str(), args: vec![] })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action16<
    'input,
>(
    (_, name, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, args, _): (Loc, Vec<Type>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Type
{
    Type::Named(NamedType { name: name.smol_str(), args })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action17<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, fields, _): (Loc, Vec<Named<Type>>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Type
{
    Type::Record(fields)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action18<
    'input,
>(
    (_, name, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, ty, _): (Loc, Type, Loc),
) -> Named<Type>
{
    Named { name: Some(name.smol_str()), thing: ty }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action19<
    'input,
>(
    (_, ty, _): (Loc, Type, Loc),
) -> Named<Type>
{
    Named { name: None, thing: ty }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action20<
    'input,
>(
    (_, l, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, type_name, _): (Loc, core::option::Option<Token<'input>>, Loc),
    (_, name, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, self_, _): (Loc, core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>, Loc),
    (_, params, _): (Loc, Vec<(Token<'input>, Type)>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, return_ty, _): (Loc, core::option::Option<Type>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, body_l, _): (Loc, Loc, Loc),
    (_, body, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, body_r, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<FunDecl>
{
    L::new(l, r, FunDecl {
            type_name: type_name.map(|t| t.smol_str()),
            name: name.smol_str(),
            type_params: vec![],
            predicates: vec![],
            self_: self_.is_some(),
            params: params.into_iter().map(|(name, ty)| (name.smol_str(), ty)).collect(),
            return_ty,
            body: L::new(body_l, body_r, body),
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action21<
    'input,
>(
    (_, l, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, type_name, _): (Loc, core::option::Option<Token<'input>>, Loc),
    (_, name, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, type_params, _): (Loc, Vec<Token<'input>>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, predicates, _): (Loc, core::option::Option<(Token<'input>, Vec<Type>, Token<'input>)>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, self_, _): (Loc, core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>, Loc),
    (_, params, _): (Loc, Vec<(Token<'input>, Type)>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, return_ty, _): (Loc, core::option::Option<Type>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, body_l, _): (Loc, Loc, Loc),
    (_, body, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, body_r, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<FunDecl>
{
    L::new(l, r, FunDecl {
            type_name: type_name.map(|t| t.smol_str()),
            name: name.smol_str(),
            type_params: type_params.into_iter().map(|t| t.smol_str()).collect(),
            predicates: predicates.map(|p| p.1).unwrap_or(vec![]),
            self_: self_.is_some(),
            params: params.into_iter().map(|(name, ty)| (name.smol_str(), ty)).collect(),
            return_ty,
            body: L::new(body_l, body_r, body),
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action22<
    'input,
>(
    (_, stmts, _): (Loc, alloc::vec::Vec<L<Stmt>>, Loc),
) -> Vec<L<Stmt>>
{
    stmts
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action23<
    'input,
>(
    (_, l, _): (Loc, Loc, Loc),
    (_, stmt, _): (Loc, Stmt, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<Stmt>
{
    L::new(l, r, stmt)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action24<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, lhs, _): (Loc, L<Pat>, Loc),
    (_, ty, _): (Loc, core::option::Option<Type>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, rhs, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Stmt
{
    Stmt::Let(LetStatement { lhs, ty, rhs })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action25<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, cond, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, then_, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, mut branches, _): (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
    (_, else_branch, _): (Loc, core::option::Option<Vec<L<Stmt>>>, Loc),
) -> Stmt
{
    {
        branches.insert(0, (cond, then_));
        Stmt::If(IfStatement {
            branches,
            else_branch,
        })
    }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action26<
    'input,
>(
    (_, lhs, _): (Loc, L<Expr>, Loc),
    (_, op, _): (Loc, AssignOp, Loc),
    (_, rhs, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Stmt
{
    Stmt::Assign(AssignStatement {
            lhs,
            rhs,
            op,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action27<
    'input,
>(
    (_, expr, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Stmt
{
    Stmt::Expr(expr)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action28<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, expr, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, alts, _): (Loc, Vec<Alt>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Stmt
{
    Stmt::Match(MatchStatement {
            scrutinee: expr,
            alts,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action29<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, id, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, expr, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, statements, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Stmt
{
    Stmt::For(ForStatement {
            var: id.smol_str(),
            ty: None,
            expr,
            body: statements,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action30<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, cond, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, statements, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Stmt
{
    Stmt::While(WhileStatement {
            cond,
            body:statements,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action31<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, expr, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Stmt
{
    Stmt::Return(expr)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action32<
    'input,
>(
    (_, __0, _): (Loc, alloc::vec::Vec<Alt>, Loc),
) -> Vec<Alt>
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action33<
    'input,
>(
    (_, pattern, _): (Loc, L<Pat>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, stmts, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Alt
{
    Alt {
            pattern,
            guard: None,
            rhs: stmts,
        }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action34<
    'input,
>(
    (_, pattern, _): (Loc, L<Pat>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, stmt, _): (Loc, L<Stmt>, Loc),
) -> Alt
{
    Alt {
            pattern,
            guard: None,
            rhs: vec![stmt],
        }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action35<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
) -> AssignOp
{
    AssignOp::Eq
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action36<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
) -> AssignOp
{
    AssignOp::PlusEq
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action37<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
) -> AssignOp
{
    AssignOp::MinusEq
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action38<
    'input,
>(
    (_, l, _): (Loc, Loc, Loc),
    (_, expr, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<Expr>
{
    L::new(l, r, expr)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action39<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
) -> Expr
{
    Expr::Self_
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action40<
    'input,
>(
    (_, id, _): (Loc, Token<'input>, Loc),
) -> Expr
{
    Expr::Var(id.smol_str())
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action41<
    'input,
>(
    (_, id, _): (Loc, Token<'input>, Loc),
) -> Expr
{
    Expr::UpperVar(id.smol_str())
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action42<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, mut exprs, _): (Loc, Vec<(Option<SmolStr>, L<Expr>)>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Expr
{
    {
        match exprs.len() {
            0 => Expr::Record(vec![]),
            1 if exprs[0].0.is_none() => exprs.pop().unwrap().1.thing,
            _ => Expr::Record(exprs.into_iter().map(|(name, expr)| Named { name: name, thing: Box::new(expr) }).collect()),
        }
    }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action43<
    'input,
>(
    (_, int, _): (Loc, Token<'input>, Loc),
) -> Expr
{
    Expr::Int(i32::from_str_radix(int.text, 10).unwrap_or_else(|_| panic!("Can't parse I32: {}", int.text)))
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action44<
    'input,
>(
    (_, string, _): (Loc, Token<'input>, Loc),
) -> Expr
{
    Expr::String(parse_string_parts(&string.text[1..string.text.len() - 1]))
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action45<
    'input,
>(
    (_, l, _): (Loc, Loc, Loc),
    (_, array, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, index, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Expr
{
    Expr::ArrayIndex(ArrayIndexExpr {
            array: Box::new(L::new(l, r, array)),
            index: Box::new(index),
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action46<
    'input,
>(
    (_, l, _): (Loc, Loc, Loc),
    (_, fun, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, args, _): (Loc, Vec<CallArg>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Expr
{
    Expr::Call(CallExpr {
            fun: Box::new(L::new(l, r, fun)),
            args,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action47<
    'input,
>(
    (_, l, _): (Loc, Loc, Loc),
    (_, expr, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, field, _): (Loc, Token<'input>, Loc),
) -> Expr
{
    Expr::FieldSelect(FieldSelectExpr {
            object: Box::new(L::new(l, r, expr)),
            field: field.smol_str(),
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action48<
    'input,
>(
    (_, expr, _): (Loc, Expr, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, constr, _): (Loc, Token<'input>, Loc),
) -> Expr
{
    {
        match expr {
            Expr::UpperVar(ty) => Expr::ConstrSelect(ConstrSelectExpr {
                ty,
                constr: constr.smol_str(),
            }),

            _ => panic!(),
        }
    }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action49<
    'input,
>(
    (_, l1, _): (Loc, Loc, Loc),
    (_, from, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, to, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::Range(RangeExpr {
            from: Box::new(L::new(l1, r1, from)),
            to: Box::new(L::new(l2, r2, to)),
            inclusive: false,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action50<
    'input,
>(
    (_, __0, _): (Loc, Expr, Loc),
) -> Expr
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action51<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l, _): (Loc, Loc, Loc),
    (_, expr, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::UnOp(UnOpExpr { op: UnOp::Not, expr: Box::new(L::new(l, r, expr)) })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action52<
    'input,
>(
    (_, __0, _): (Loc, Expr, Loc),
) -> Expr
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action53<
    'input,
>(
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::BinOp(BinOpExpr {
            left: Box::new(L::new(l1, r1, left)),
            right: Box::new(L::new(l2, r2, right)),
            op: BinOp::Multiply,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action54<
    'input,
>(
    (_, __0, _): (Loc, Expr, Loc),
) -> Expr
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action55<
    'input,
>(
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::BinOp(BinOpExpr {
            left: Box::new(L::new(l1, r1, left)),
            right: Box::new(L::new(l2, r2, right)),
            op: BinOp::Add,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action56<
    'input,
>(
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::BinOp(BinOpExpr {
            left: Box::new(L::new(l1, r1, left)),
            right: Box::new(L::new(l2, r2, right)),
            op: BinOp::Subtract,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action57<
    'input,
>(
    (_, __0, _): (Loc, Expr, Loc),
) -> Expr
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action58<
    'input,
>(
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::BinOp(BinOpExpr {
            left: Box::new(L::new(l1, r1, left)),
            right: Box::new(L::new(l2, r2, right)),
            op: BinOp::Equal,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action59<
    'input,
>(
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::BinOp(BinOpExpr {
            left: Box::new(L::new(l1, r1, left)),
            right: Box::new(L::new(l2, r2, right)),
            op: BinOp::NotEqual,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action60<
    'input,
>(
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::BinOp(BinOpExpr {
            left: Box::new(L::new(l1, r1, left)),
            right: Box::new(L::new(l2, r2, right)),
            op: BinOp::Lt,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action61<
    'input,
>(
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::BinOp(BinOpExpr {
            left: Box::new(L::new(l1, r1, left)),
            right: Box::new(L::new(l2, r2, right)),
            op: BinOp::Gt,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action62<
    'input,
>(
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::BinOp(BinOpExpr {
            left: Box::new(L::new(l1, r1, left)),
            right: Box::new(L::new(l2, r2, right)),
            op: BinOp::LtEq,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action63<
    'input,
>(
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::BinOp(BinOpExpr {
            left: Box::new(L::new(l1, r1, left)),
            right: Box::new(L::new(l2, r2, right)),
            op: BinOp::GtEq,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action64<
    'input,
>(
    (_, __0, _): (Loc, Expr, Loc),
) -> Expr
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action65<
    'input,
>(
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::BinOp(BinOpExpr {
            left: Box::new(L::new(l1, r1, left)),
            right: Box::new(L::new(l2, r2, right)),
            op: BinOp::And,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action66<
    'input,
>(
    (_, __0, _): (Loc, Expr, Loc),
) -> Expr
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action67<
    'input,
>(
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr
{
    Expr::BinOp(BinOpExpr {
            left: Box::new(L::new(l1, r1, left)),
            right: Box::new(L::new(l2, r2, right)),
            op: BinOp::Or,
        })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action68<
    'input,
>(
    (_, __0, _): (Loc, Expr, Loc),
) -> Expr
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action69<
    'input,
>(
    (_, id, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, expr, _): (Loc, L<Expr>, Loc),
) -> (Option<SmolStr>, L<Expr>)
{
    (Some(id.smol_str()), expr)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action70<
    'input,
>(
    (_, expr, _): (Loc, L<Expr>, Loc),
) -> (Option<SmolStr>, L<Expr>)
{
    (None, expr)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action71<
    'input,
>(
    (_, name, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, expr, _): (Loc, L<Expr>, Loc),
) -> CallArg
{
    CallArg {
            name: Some(name.smol_str()),
            expr,
        }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action72<
    'input,
>(
    (_, expr, _): (Loc, L<Expr>, Loc),
) -> CallArg
{
    CallArg {
            name: None,
            expr,
        }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action73<
    'input,
>(
    (_, l, _): (Loc, Loc, Loc),
    (_, pat, _): (Loc, Pat, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<Pat>
{
    L::new(l, r, pat)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action74<
    'input,
>(
    (_, id, _): (Loc, Token<'input>, Loc),
) -> Pat
{
    Pat::Var(id.smol_str())
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action75<
    'input,
>(
    (_, constr, _): (Loc, ConstrPattern, Loc),
) -> Pat
{
    Pat::Constr(constr)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action76<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, fields, _): (Loc, Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Pat
{
    Pat::Record(fields.into_iter().map(|(name, pat)| Named { name, thing: Box::new(pat) }).collect())
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action77<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
) -> Pat
{
    Pat::Ignore
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action78<
    'input,
>(
    (_, str, _): (Loc, Token<'input>, Loc),
) -> Pat
{
    Pat::Str(str.text[1..str.text.len() - 1].to_string())
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action79<
    'input,
>(
    (_, str, _): (Loc, Token<'input>, Loc),
    (_, id, _): (Loc, Token<'input>, Loc),
) -> Pat
{
    Pat::StrPfx(str.text[1..str.text.len() - 1].to_string(), id.smol_str())
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action80<
    'input,
>(
    (_, type_, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, constr, _): (Loc, Token<'input>, Loc),
) -> Constructor
{
    Constructor { type_: type_.smol_str(), constr: Some(constr.smol_str()) }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action81<
    'input,
>(
    (_, type_, _): (Loc, Token<'input>, Loc),
) -> Constructor
{
    Constructor { type_: type_.smol_str(), constr: None }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action82<
    'input,
>(
    (_, constr, _): (Loc, Constructor, Loc),
) -> ConstrPattern
{
    ConstrPattern { constr, fields: vec![] }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action83<
    'input,
>(
    (_, constr, _): (Loc, Constructor, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, fields, _): (Loc, Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> ConstrPattern
{
    ConstrPattern { constr, fields: fields.into_iter().map(|(name, pat)| Named { name, thing: Box::new(pat) }).collect() }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action84<
    'input,
>(
    (_, id, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, pat, _): (Loc, L<Pat>, Loc),
) -> (Option<SmolStr>, L<Pat>)
{
    (Some(id.smol_str()), pat)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action85<
    'input,
>(
    (_, pat, _): (Loc, L<Pat>, Loc),
) -> (Option<SmolStr>, L<Pat>)
{
    (None, pat)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action86<
    'input,
>(
    (_, l, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, path, _): (Loc, Vec<Token<'input>>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<ImportDecl>
{
    L::new(l, r, ImportDecl { path: path.into_iter().map(|t| t.smol_str()).collect() })
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action87<
    'input,
>(
    (_, __0, _): (Loc, alloc::vec::Vec<L<TopDecl>>, Loc),
) -> Vec<L<TopDecl>>
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action88<
    'input,
>(
    (_, _, _): (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    (_, l, _): (Loc, Loc, Loc),
    (_, type_decl, _): (Loc, L<TypeDecl>, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<TopDecl>
{
    L::new(l, r, TopDecl::Type(type_decl))
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action89<
    'input,
>(
    (_, _, _): (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    (_, l, _): (Loc, Loc, Loc),
    (_, fun_decl, _): (Loc, L<FunDecl>, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<TopDecl>
{
    L::new(l, r, TopDecl::Fun(fun_decl))
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action90<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<Token<'input>>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action91<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<Token<'input>>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action92<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<L<TopDecl>>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action93<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<L<TopDecl>>, Loc),
) -> alloc::vec::Vec<L<TopDecl>>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action94<
    'input,
>(
    (_, mut v, _): (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    (_, e, _): (Loc, core::option::Option<Token<'input>>, Loc),
) -> Vec<Token<'input>>
{
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action95<
    'input,
>(
    (_, mut v, _): (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    (_, e, _): (Loc, core::option::Option<(Option<SmolStr>, L<Pat>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Pat>)>
{
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action96<
    'input,
>(
    (_, mut v, _): (Loc, alloc::vec::Vec<CallArg>, Loc),
    (_, e, _): (Loc, core::option::Option<CallArg>, Loc),
) -> Vec<CallArg>
{
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action97<
    'input,
>(
    (_, mut v, _): (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
    (_, e, _): (Loc, core::option::Option<(Option<SmolStr>, L<Expr>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Expr>)>
{
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action98<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<Alt>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action99<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<Alt>, Loc),
) -> alloc::vec::Vec<Alt>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action100<
    'input,
>(
    (_, __0, _): (Loc, Vec<L<Stmt>>, Loc),
) -> core::option::Option<Vec<L<Stmt>>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action101<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Vec<L<Stmt>>>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action102<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, __0, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Vec<L<Stmt>>
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action103<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action104<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
) -> alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action105<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, __0, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, __1, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> (L<Expr>, Vec<L<Stmt>>)
{
    (__0, __1)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action106<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<L<Stmt>>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action107<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<L<Stmt>>, Loc),
) -> alloc::vec::Vec<L<Stmt>>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action108<
    'input,
>(
    (_, __0, _): (Loc, (Token<'input>, Vec<Type>, Token<'input>), Loc),
) -> core::option::Option<(Token<'input>, Vec<Type>, Token<'input>)>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action109<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<(Token<'input>, Vec<Type>, Token<'input>)>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action110<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
    (_, __1, _): (Loc, Vec<Type>, Loc),
    (_, __2, _): (Loc, Token<'input>, Loc),
) -> (Token<'input>, Vec<Type>, Token<'input>)
{
    (__0, __1, __2)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action111<
    'input,
>(
    (_, __0, _): (Loc, Type, Loc),
) -> core::option::Option<Type>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action112<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Type>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action113<
    'input,
>(
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, __0, _): (Loc, Type, Loc),
) -> Type
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action114<
    'input,
>(
    (_, mut v, _): (Loc, alloc::vec::Vec<(Token<'input>, Type)>, Loc),
    (_, e, _): (Loc, core::option::Option<(Token<'input>, Type)>, Loc),
) -> Vec<(Token<'input>, Type)>
{
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action115<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
    (_, __1, _): (Loc, Type, Loc),
) -> (Token<'input>, Type)
{
    (__0, __1)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action116<
    'input,
>(
    (_, __0, _): (Loc, (Token<'input>, core::option::Option<Token<'input>>), Loc),
) -> core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action117<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action118<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
    (_, __1, _): (Loc, core::option::Option<Token<'input>>, Loc),
) -> (Token<'input>, core::option::Option<Token<'input>>)
{
    (__0, __1)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action119<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
) -> core::option::Option<Token<'input>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action120<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Token<'input>>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action121<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Token<'input>
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action122<
    'input,
>(
    (_, mut v, _): (Loc, alloc::vec::Vec<Named<Type>>, Loc),
    (_, e, _): (Loc, core::option::Option<Named<Type>>, Loc),
) -> Vec<Named<Type>>
{
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action123<
    'input,
>(
    (_, mut v, _): (Loc, alloc::vec::Vec<Type>, Loc),
    (_, e, _): (Loc, core::option::Option<Type>, Loc),
) -> Vec<Type>
{
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action124<
    'input,
>(
    (_, __0, _): (Loc, (SmolStr, Type), Loc),
) -> alloc::vec::Vec<(SmolStr, Type)>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action125<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<(SmolStr, Type)>, Loc),
    (_, e, _): (Loc, (SmolStr, Type), Loc),
) -> alloc::vec::Vec<(SmolStr, Type)>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action126<
    'input,
>(
    (_, __0, _): (Loc, (SmolStr, Type), Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> (SmolStr, Type)
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action127<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
) -> core::option::Option<Token<'input>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action128<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Token<'input>>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action129<
    'input,
>(
    (_, __0, _): (Loc, ConstructorDecl, Loc),
) -> alloc::vec::Vec<ConstructorDecl>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action130<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<ConstructorDecl>, Loc),
    (_, e, _): (Loc, ConstructorDecl, Loc),
) -> alloc::vec::Vec<ConstructorDecl>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action131<
    'input,
>(
    (_, mut v, _): (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    (_, e, _): (Loc, core::option::Option<Token<'input>>, Loc),
) -> Vec<Token<'input>>
{
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

fn __action132<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Loc
{
    *__lookbehind
}

fn __action133<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Loc
{
    *__lookahead
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action134<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<Token<'input>>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action135<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<Token<'input>>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action136<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Token<'input>
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action137<
    'input,
>(
    (_, __0, _): (Loc, Type, Loc),
) -> core::option::Option<Type>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action138<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Type>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action139<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<Type>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action140<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<Type>, Loc),
) -> alloc::vec::Vec<Type>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action141<
    'input,
>(
    (_, __0, _): (Loc, Type, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Type
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action142<
    'input,
>(
    (_, __0, _): (Loc, Named<Type>, Loc),
) -> core::option::Option<Named<Type>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action143<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Named<Type>>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action144<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<Named<Type>>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action145<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<Named<Type>>, Loc),
) -> alloc::vec::Vec<Named<Type>>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action146<
    'input,
>(
    (_, __0, _): (Loc, Named<Type>, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> Named<Type>
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action147<
    'input,
>(
    (_, __0, _): (Loc, (Token<'input>, Type), Loc),
) -> core::option::Option<(Token<'input>, Type)>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action148<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<(Token<'input>, Type)>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action149<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<(Token<'input>, Type)>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action150<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<(Token<'input>, Type)>, Loc),
) -> alloc::vec::Vec<(Token<'input>, Type)>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action151<
    'input,
>(
    (_, __0, _): (Loc, (Token<'input>, Type), Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> (Token<'input>, Type)
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action152<
    'input,
>(
    (_, __0, _): (Loc, L<Stmt>, Loc),
) -> alloc::vec::Vec<L<Stmt>>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action153<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<L<Stmt>>, Loc),
    (_, e, _): (Loc, L<Stmt>, Loc),
) -> alloc::vec::Vec<L<Stmt>>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action154<
    'input,
>(
    (_, __0, _): (Loc, (L<Expr>, Vec<L<Stmt>>), Loc),
) -> alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action155<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
    (_, e, _): (Loc, (L<Expr>, Vec<L<Stmt>>), Loc),
) -> alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action156<
    'input,
>(
    (_, __0, _): (Loc, Alt, Loc),
) -> alloc::vec::Vec<Alt>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action157<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<Alt>, Loc),
    (_, e, _): (Loc, Alt, Loc),
) -> alloc::vec::Vec<Alt>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action158<
    'input,
>(
    (_, __0, _): (Loc, (Option<SmolStr>, L<Expr>), Loc),
) -> core::option::Option<(Option<SmolStr>, L<Expr>)>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action159<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<(Option<SmolStr>, L<Expr>)>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action160<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action161<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action162<
    'input,
>(
    (_, __0, _): (Loc, (Option<SmolStr>, L<Expr>), Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> (Option<SmolStr>, L<Expr>)
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action163<
    'input,
>(
    (_, __0, _): (Loc, CallArg, Loc),
) -> core::option::Option<CallArg>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action164<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<CallArg>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action165<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<CallArg>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action166<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<CallArg>, Loc),
) -> alloc::vec::Vec<CallArg>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action167<
    'input,
>(
    (_, __0, _): (Loc, CallArg, Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> CallArg
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action168<
    'input,
>(
    (_, __0, _): (Loc, (Option<SmolStr>, L<Pat>), Loc),
) -> core::option::Option<(Option<SmolStr>, L<Pat>)>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action169<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<(Option<SmolStr>, L<Pat>)>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action170<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action171<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action172<
    'input,
>(
    (_, __0, _): (Loc, (Option<SmolStr>, L<Pat>), Loc),
    (_, _, _): (Loc, Token<'input>, Loc),
) -> (Option<SmolStr>, L<Pat>)
{
    __0
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action173<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
) -> core::option::Option<Token<'input>>
{
    Some(__0)
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action174<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Token<'input>>
{
    None
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action175<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<Token<'input>>
{
    alloc::vec![]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action176<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<Token<'input>>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    v
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action177<
    'input,
>(
    (_, __0, _): (Loc, L<TopDecl>, Loc),
) -> alloc::vec::Vec<L<TopDecl>>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action178<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<L<TopDecl>>, Loc),
    (_, e, _): (Loc, L<TopDecl>, Loc),
) -> alloc::vec::Vec<L<TopDecl>>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action179<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action180<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    (_, e, _): (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action181<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action182<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    (_, e, _): (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action183<
    'input,
>(
    (_, __0, _): (Loc, (Option<SmolStr>, L<Pat>), Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action184<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    (_, e, _): (Loc, (Option<SmolStr>, L<Pat>), Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action185<
    'input,
>(
    (_, __0, _): (Loc, CallArg, Loc),
) -> alloc::vec::Vec<CallArg>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action186<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<CallArg>, Loc),
    (_, e, _): (Loc, CallArg, Loc),
) -> alloc::vec::Vec<CallArg>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action187<
    'input,
>(
    (_, __0, _): (Loc, (Option<SmolStr>, L<Expr>), Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action188<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
    (_, e, _): (Loc, (Option<SmolStr>, L<Expr>), Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action189<
    'input,
>(
    (_, __0, _): (Loc, (Token<'input>, Type), Loc),
) -> alloc::vec::Vec<(Token<'input>, Type)>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action190<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<(Token<'input>, Type)>, Loc),
    (_, e, _): (Loc, (Token<'input>, Type), Loc),
) -> alloc::vec::Vec<(Token<'input>, Type)>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action191<
    'input,
>(
    (_, __0, _): (Loc, Named<Type>, Loc),
) -> alloc::vec::Vec<Named<Type>>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action192<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<Named<Type>>, Loc),
    (_, e, _): (Loc, Named<Type>, Loc),
) -> alloc::vec::Vec<Named<Type>>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action193<
    'input,
>(
    (_, __0, _): (Loc, Type, Loc),
) -> alloc::vec::Vec<Type>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action194<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<Type>, Loc),
    (_, e, _): (Loc, Type, Loc),
) -> alloc::vec::Vec<Type>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action195<
    'input,
>(
    (_, __0, _): (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    alloc::vec![__0]
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes, clippy::just_underscores_and_digits)]
fn __action196<
    'input,
>(
    (_, v, _): (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    (_, e, _): (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    { let mut v = v; v.push(e); v }
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action197<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
) -> (Token<'input>, core::option::Option<Token<'input>>)
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action127(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action118(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action198<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
) -> (Token<'input>, core::option::Option<Token<'input>>)
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action128(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action118(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action199<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Vec<Type>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
) -> ConstructorDecl
{
    let __start0 = __3.0;
    let __end0 = __3.2;
    let __temp0 = __action127(
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action10(
        __0,
        __1,
        __2,
        __temp0,
        __4,
        __5,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action200<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Vec<Type>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
) -> ConstructorDecl
{
    let __start0 = __2.2;
    let __end0 = __3.0;
    let __temp0 = __action128(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action10(
        __0,
        __1,
        __2,
        __temp0,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action201<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Type, Loc),
) -> core::option::Option<Type>
{
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action113(
        __0,
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action111(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action202<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Type, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __8.0;
    let __end0 = __9.2;
    let __temp0 = __action201(
        __8,
        __9,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action20(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __temp0,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action203<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Loc, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __7.2;
    let __end0 = __8.0;
    let __temp0 = __action112(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action20(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __temp0,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action204<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, core::option::Option<(Token<'input>, Vec<Type>, Token<'input>)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Type, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Token<'input>, Loc),
    __21: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __12.0;
    let __end0 = __13.2;
    let __temp0 = __action201(
        __12,
        __13,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action21(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __temp0,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action205<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, core::option::Option<(Token<'input>, Vec<Type>, Token<'input>)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __11.2;
    let __end0 = __12.0;
    let __temp0 = __action112(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action21(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __temp0,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action206<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, L<Pat>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Type, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, L<Expr>, Loc),
    __6: (Loc, Token<'input>, Loc),
) -> Stmt
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action201(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action24(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action207<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, L<Pat>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, L<Expr>, Loc),
    __4: (Loc, Token<'input>, Loc),
) -> Stmt
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action112(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action24(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action208<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Vec<Type>, Loc),
    __2: (Loc, Token<'input>, Loc),
) -> core::option::Option<(Token<'input>, Vec<Type>, Token<'input>)>
{
    let __start0 = __0.0;
    let __end0 = __2.2;
    let __temp0 = __action110(
        __0,
        __1,
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action108(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action209<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>, Loc),
    __12: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Type, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Vec<L<Stmt>>, Loc),
    __21: (Loc, Loc, Loc),
    __22: (Loc, Token<'input>, Loc),
    __23: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __7.0;
    let __end0 = __9.2;
    let __temp0 = __action208(
        __7,
        __8,
        __9,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action204(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __temp0,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
        __23,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action210<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Type, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __6.2;
    let __end0 = __7.0;
    let __temp0 = __action109(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action204(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __temp0,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action211<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>, Loc),
    __12: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Token<'input>, Loc),
    __21: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __7.0;
    let __end0 = __9.2;
    let __temp0 = __action208(
        __7,
        __8,
        __9,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action205(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __temp0,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action212<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __6.2;
    let __end0 = __7.0;
    let __temp0 = __action109(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action205(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __temp0,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action213<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>
{
    let __start0 = __0.0;
    let __end0 = __6.2;
    let __temp0 = __action105(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action154(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action214<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, L<Expr>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<L<Stmt>>, Loc),
    __7: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>
{
    let __start0 = __1.0;
    let __end0 = __7.2;
    let __temp0 = __action105(
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action155(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action215<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, core::option::Option<Vec<L<Stmt>>>, Loc),
) -> Stmt
{
    let __start0 = __6.2;
    let __end0 = __7.0;
    let __temp0 = __action103(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action25(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __temp0,
        __7,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action216<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
    __8: (Loc, core::option::Option<Vec<L<Stmt>>>, Loc),
) -> Stmt
{
    let __start0 = __7.0;
    let __end0 = __7.2;
    let __temp0 = __action104(
        __7,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action25(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __temp0,
        __8,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action217<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<L<Stmt>>, Loc),
    __5: (Loc, Token<'input>, Loc),
) -> core::option::Option<Vec<L<Stmt>>>
{
    let __start0 = __0.0;
    let __end0 = __5.2;
    let __temp0 = __action102(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action100(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action218<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<L<Stmt>>, Loc),
    __12: (Loc, Token<'input>, Loc),
) -> Stmt
{
    let __start0 = __7.0;
    let __end0 = __12.2;
    let __temp0 = __action217(
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action215(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action219<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token<'input>, Loc),
) -> Stmt
{
    let __start0 = __6.2;
    let __end0 = __6.2;
    let __temp0 = __action101(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action215(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action220<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Token<'input>, Loc),
) -> Stmt
{
    let __start0 = __8.0;
    let __end0 = __13.2;
    let __temp0 = __action217(
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action216(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action221<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
) -> Stmt
{
    let __start0 = __7.2;
    let __end0 = __7.2;
    let __temp0 = __action101(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action216(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action222<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
) -> core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>
{
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action197(
        __0,
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action116(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action223<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
) -> core::option::Option<(Token<'input>, core::option::Option<Token<'input>>)>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action198(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action116(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action224<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Type, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __5.0;
    let __end0 = __6.2;
    let __temp0 = __action222(
        __5,
        __6,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action202(
        __0,
        __1,
        __2,
        __3,
        __4,
        __temp0,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action225<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Type, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __5.0;
    let __end0 = __5.2;
    let __temp0 = __action223(
        __5,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action202(
        __0,
        __1,
        __2,
        __3,
        __4,
        __temp0,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action226<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Type, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Loc, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __4.2;
    let __end0 = __5.0;
    let __temp0 = __action117(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action202(
        __0,
        __1,
        __2,
        __3,
        __4,
        __temp0,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action227<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Loc, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __5.0;
    let __end0 = __6.2;
    let __temp0 = __action222(
        __5,
        __6,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action203(
        __0,
        __1,
        __2,
        __3,
        __4,
        __temp0,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action228<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Loc, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __5.0;
    let __end0 = __5.2;
    let __temp0 = __action223(
        __5,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action203(
        __0,
        __1,
        __2,
        __3,
        __4,
        __temp0,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action229<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Loc, Loc),
    __11: (Loc, Vec<L<Stmt>>, Loc),
    __12: (Loc, Loc, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __4.2;
    let __end0 = __5.0;
    let __temp0 = __action117(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action203(
        __0,
        __1,
        __2,
        __3,
        __4,
        __temp0,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action230<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Type, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Loc, Loc),
    __21: (Loc, Vec<L<Stmt>>, Loc),
    __22: (Loc, Loc, Loc),
    __23: (Loc, Token<'input>, Loc),
    __24: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __11.0;
    let __end0 = __12.2;
    let __temp0 = __action222(
        __11,
        __12,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action209(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __temp0,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
        __23,
        __24,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action231<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Type, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Vec<L<Stmt>>, Loc),
    __21: (Loc, Loc, Loc),
    __22: (Loc, Token<'input>, Loc),
    __23: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __11.0;
    let __end0 = __11.2;
    let __temp0 = __action223(
        __11,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action209(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __temp0,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
        __23,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action232<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Type, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Vec<L<Stmt>>, Loc),
    __20: (Loc, Loc, Loc),
    __21: (Loc, Token<'input>, Loc),
    __22: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __10.2;
    let __end0 = __11.0;
    let __temp0 = __action117(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action209(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __temp0,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action233<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Type, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Token<'input>, Loc),
    __21: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __8.0;
    let __end0 = __9.2;
    let __temp0 = __action222(
        __8,
        __9,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action210(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __temp0,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action234<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Type, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __8.0;
    let __end0 = __8.2;
    let __temp0 = __action223(
        __8,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action210(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __temp0,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action235<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Type, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __7.2;
    let __end0 = __8.0;
    let __temp0 = __action117(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action210(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __temp0,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action236<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Vec<L<Stmt>>, Loc),
    __20: (Loc, Loc, Loc),
    __21: (Loc, Token<'input>, Loc),
    __22: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __11.0;
    let __end0 = __12.2;
    let __temp0 = __action222(
        __11,
        __12,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action211(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __temp0,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action237<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Token<'input>, Loc),
    __21: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __11.0;
    let __end0 = __11.2;
    let __temp0 = __action223(
        __11,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action211(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __temp0,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action238<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __10.2;
    let __end0 = __11.0;
    let __temp0 = __action117(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action211(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __temp0,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action239<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __8.0;
    let __end0 = __9.2;
    let __temp0 = __action222(
        __8,
        __9,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action212(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __temp0,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action240<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __8.0;
    let __end0 = __8.2;
    let __temp0 = __action223(
        __8,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action212(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __temp0,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action241<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, core::option::Option<Token<'input>>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __7.2;
    let __end0 = __8.0;
    let __temp0 = __action117(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action212(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __temp0,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action242<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Type, Loc),
    __3: (Loc, Token<'input>, Loc),
) -> (Token<'input>, Type)
{
    let __start0 = __0.0;
    let __end0 = __2.2;
    let __temp0 = __action115(
        __0,
        __1,
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action151(
        __temp0,
        __3,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action243<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Type, Loc),
) -> core::option::Option<(Token<'input>, Type)>
{
    let __start0 = __0.0;
    let __end0 = __2.2;
    let __temp0 = __action115(
        __0,
        __1,
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action147(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action244<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Type, Loc),
    __3: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<(Token<'input>, Type)>
{
    let __start0 = __0.0;
    let __end0 = __3.2;
    let __temp0 = __action242(
        __0,
        __1,
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action189(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action245<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(Token<'input>, Type)>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Type, Loc),
    __4: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<(Token<'input>, Type)>
{
    let __start0 = __1.0;
    let __end0 = __4.2;
    let __temp0 = __action242(
        __1,
        __2,
        __3,
        __4,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action190(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action246<
    'input,
>(
    __0: (Loc, core::option::Option<(Token<'input>, Type)>, Loc),
) -> Vec<(Token<'input>, Type)>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action149(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action114(
        __temp0,
        __0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action247<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(Token<'input>, Type)>, Loc),
    __1: (Loc, core::option::Option<(Token<'input>, Type)>, Loc),
) -> Vec<(Token<'input>, Type)>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action150(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action114(
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action248<
    'input,
>(
    __0: (Loc, CallArg, Loc),
    __1: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<CallArg>
{
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action167(
        __0,
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action185(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action249<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<CallArg>, Loc),
    __1: (Loc, CallArg, Loc),
    __2: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<CallArg>
{
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action167(
        __1,
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action186(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action250<
    'input,
>(
    __0: (Loc, core::option::Option<CallArg>, Loc),
) -> Vec<CallArg>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action165(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action96(
        __temp0,
        __0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action251<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<CallArg>, Loc),
    __1: (Loc, core::option::Option<CallArg>, Loc),
) -> Vec<CallArg>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action166(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action96(
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action252<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Type, Loc),
) -> Vec<(Token<'input>, Type)>
{
    let __start0 = __0.0;
    let __end0 = __2.2;
    let __temp0 = __action243(
        __0,
        __1,
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action246(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action253<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<(Token<'input>, Type)>
{
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action148(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action246(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action254<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(Token<'input>, Type)>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Type, Loc),
) -> Vec<(Token<'input>, Type)>
{
    let __start0 = __1.0;
    let __end0 = __3.2;
    let __temp0 = __action243(
        __1,
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action247(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action255<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(Token<'input>, Type)>, Loc),
) -> Vec<(Token<'input>, Type)>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action148(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action247(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action256<
    'input,
>(
    __0: (Loc, (SmolStr, Type), Loc),
    __1: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<(SmolStr, Type)>
{
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action126(
        __0,
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action124(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action257<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(SmolStr, Type)>, Loc),
    __1: (Loc, (SmolStr, Type), Loc),
    __2: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<(SmolStr, Type)>
{
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action126(
        __1,
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action125(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action258<
    'input,
>(
    __0: (Loc, (Option<SmolStr>, L<Expr>), Loc),
    __1: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>
{
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action162(
        __0,
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action187(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action259<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
    __1: (Loc, (Option<SmolStr>, L<Expr>), Loc),
    __2: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>
{
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action162(
        __1,
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action188(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action260<
    'input,
>(
    __0: (Loc, core::option::Option<(Option<SmolStr>, L<Expr>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Expr>)>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action160(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action97(
        __temp0,
        __0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action261<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
    __1: (Loc, core::option::Option<(Option<SmolStr>, L<Expr>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Expr>)>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action161(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action97(
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action262<
    'input,
>(
    __0: (Loc, (Option<SmolStr>, L<Pat>), Loc),
    __1: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>
{
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action172(
        __0,
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action183(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action263<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    __1: (Loc, (Option<SmolStr>, L<Pat>), Loc),
    __2: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>
{
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action172(
        __1,
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action184(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action264<
    'input,
>(
    __0: (Loc, core::option::Option<(Option<SmolStr>, L<Pat>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Pat>)>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action170(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action95(
        __temp0,
        __0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action265<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    __1: (Loc, core::option::Option<(Option<SmolStr>, L<Pat>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Pat>)>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action171(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action95(
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action266<
    'input,
>(
    __0: (Loc, Named<Type>, Loc),
    __1: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Named<Type>>
{
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action146(
        __0,
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action191(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action267<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Named<Type>>, Loc),
    __1: (Loc, Named<Type>, Loc),
    __2: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Named<Type>>
{
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action146(
        __1,
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action192(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action268<
    'input,
>(
    __0: (Loc, core::option::Option<Named<Type>>, Loc),
) -> Vec<Named<Type>>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action144(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action122(
        __temp0,
        __0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action269<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Named<Type>>, Loc),
    __1: (Loc, core::option::Option<Named<Type>>, Loc),
) -> Vec<Named<Type>>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action145(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action122(
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action270<
    'input,
>(
    __0: (Loc, Type, Loc),
    __1: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Type>
{
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action141(
        __0,
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action193(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action271<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Type>, Loc),
    __1: (Loc, Type, Loc),
    __2: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Type>
{
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action141(
        __1,
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action194(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action272<
    'input,
>(
    __0: (Loc, core::option::Option<Type>, Loc),
) -> Vec<Type>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action139(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action123(
        __temp0,
        __0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action273<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Type>, Loc),
    __1: (Loc, core::option::Option<Type>, Loc),
) -> Vec<Type>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action140(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action123(
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action274<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action136(
        __0,
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action195(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action275<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action136(
        __1,
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action196(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action276<
    'input,
>(
    __0: (Loc, core::option::Option<Token<'input>>, Loc),
) -> Vec<Token<'input>>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action134(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action131(
        __temp0,
        __0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action277<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    __1: (Loc, core::option::Option<Token<'input>>, Loc),
) -> Vec<Token<'input>>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action135(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action131(
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action278<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action121(
        __0,
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action181(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action279<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
) -> alloc::vec::Vec<Token<'input>>
{
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action121(
        __1,
        __2,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action182(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action280<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
) -> core::option::Option<Token<'input>>
{
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action121(
        __0,
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action119(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action281<
    'input,
>(
    __0: (Loc, core::option::Option<Token<'input>>, Loc),
) -> Vec<Token<'input>>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action175(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action94(
        __temp0,
        __0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action282<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    __1: (Loc, core::option::Option<Token<'input>>, Loc),
) -> Vec<Token<'input>>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action176(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action94(
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action283<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Type, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action224(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action284<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Type, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action224(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action285<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Type, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action225(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action286<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Type, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Loc, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action225(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action287<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Type, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action226(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action288<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Type, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Loc, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action226(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action289<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action227(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action290<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Loc, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action227(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action291<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Loc, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action228(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action292<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Loc, Loc),
    __11: (Loc, Vec<L<Stmt>>, Loc),
    __12: (Loc, Loc, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action228(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action293<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Loc, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action229(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action294<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Loc, Loc),
    __10: (Loc, Vec<L<Stmt>>, Loc),
    __11: (Loc, Loc, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action229(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action295<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Token<'input>>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<Type>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Type, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Token<'input>, Loc),
    __21: (Loc, Loc, Loc),
    __22: (Loc, Vec<L<Stmt>>, Loc),
    __23: (Loc, Loc, Loc),
    __24: (Loc, Token<'input>, Loc),
    __25: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action230(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
        __23,
        __24,
        __25,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action296<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<Token<'input>>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<Type>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Type, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Vec<L<Stmt>>, Loc),
    __21: (Loc, Loc, Loc),
    __22: (Loc, Token<'input>, Loc),
    __23: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action230(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
        __23,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action297<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Token<'input>>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<Type>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Type, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Loc, Loc),
    __21: (Loc, Vec<L<Stmt>>, Loc),
    __22: (Loc, Loc, Loc),
    __23: (Loc, Token<'input>, Loc),
    __24: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action231(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
        __23,
        __24,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action298<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<Token<'input>>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<Type>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Type, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Vec<L<Stmt>>, Loc),
    __20: (Loc, Loc, Loc),
    __21: (Loc, Token<'input>, Loc),
    __22: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action231(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action299<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Token<'input>>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<Type>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Type, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Vec<L<Stmt>>, Loc),
    __21: (Loc, Loc, Loc),
    __22: (Loc, Token<'input>, Loc),
    __23: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action232(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
        __23,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action300<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<Token<'input>>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<Type>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Type, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Token<'input>, Loc),
    __21: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action232(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action301<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Token<'input>>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Type, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Vec<L<Stmt>>, Loc),
    __20: (Loc, Loc, Loc),
    __21: (Loc, Token<'input>, Loc),
    __22: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action233(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action302<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<Token<'input>>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Type, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action233(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action303<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Token<'input>>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Type, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Token<'input>, Loc),
    __21: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action234(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action304<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<Token<'input>>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Type, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action234(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action305<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Token<'input>>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Type, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action235(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action306<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<Token<'input>>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Type, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action235(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action307<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Token<'input>>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<Type>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Vec<L<Stmt>>, Loc),
    __21: (Loc, Loc, Loc),
    __22: (Loc, Token<'input>, Loc),
    __23: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action236(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
        __23,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action308<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<Token<'input>>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<Type>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Token<'input>, Loc),
    __21: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action236(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action309<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Token<'input>>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<Type>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Vec<L<Stmt>>, Loc),
    __20: (Loc, Loc, Loc),
    __21: (Loc, Token<'input>, Loc),
    __22: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action237(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
        __22,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action310<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<Token<'input>>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<Type>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action237(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action311<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Token<'input>>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<Type>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Token<'input>, Loc),
    __21: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action238(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __21,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action312<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<Token<'input>>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<Type>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action238(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action313<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Token<'input>>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action239(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action314<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<Token<'input>>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action239(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action315<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Token<'input>>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action240(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action316<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<Token<'input>>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action240(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action317<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Token<'input>>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action280(
        __2,
        __3,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action241(
        __0,
        __1,
        __temp0,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action318<
    'input,
>(
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<Token<'input>>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Loc, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action120(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action241(
        __0,
        __1,
        __temp0,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action319<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action67(
        __temp0,
        __0,
        __1,
        __2,
        __temp1,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action320<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, L<Expr>, Loc),
    __4: (Loc, Token<'input>, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action45(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action321<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<CallArg>, Loc),
    __4: (Loc, Token<'input>, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action46(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action322<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action47(
        __temp0,
        __0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action323<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action49(
        __temp0,
        __0,
        __1,
        __2,
        __temp1,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action324<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Expr, Loc),
    __2: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action51(
        __0,
        __temp0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action325<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action53(
        __temp0,
        __0,
        __1,
        __2,
        __temp1,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action326<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action55(
        __temp0,
        __0,
        __1,
        __2,
        __temp1,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action327<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action56(
        __temp0,
        __0,
        __1,
        __2,
        __temp1,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action328<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action58(
        __temp0,
        __0,
        __1,
        __2,
        __temp1,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action329<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action59(
        __temp0,
        __0,
        __1,
        __2,
        __temp1,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action330<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action60(
        __temp0,
        __0,
        __1,
        __2,
        __temp1,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action331<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action61(
        __temp0,
        __0,
        __1,
        __2,
        __temp1,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action332<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action62(
        __temp0,
        __0,
        __1,
        __2,
        __temp1,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action333<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action63(
        __temp0,
        __0,
        __1,
        __2,
        __temp1,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action334<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action65(
        __temp0,
        __0,
        __1,
        __2,
        __temp1,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action335<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Type, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __13.2;
    let __end1 = __14.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action283(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __temp1,
        __14,
        __15,
        __16,
        __17,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action336<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Type, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __11.2;
    let __end1 = __12.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action284(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __temp1,
        __12,
        __13,
        __14,
        __15,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action337<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Type, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __12.2;
    let __end1 = __13.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action285(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __temp1,
        __13,
        __14,
        __15,
        __16,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action338<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Type, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<L<Stmt>>, Loc),
    __12: (Loc, Loc, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __10.2;
    let __end1 = __11.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action286(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __temp1,
        __11,
        __12,
        __13,
        __14,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action339<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Type, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __11.2;
    let __end1 = __12.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action287(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __temp1,
        __12,
        __13,
        __14,
        __15,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action340<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Type, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<L<Stmt>>, Loc),
    __11: (Loc, Loc, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __9.2;
    let __end1 = __10.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action288(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __temp1,
        __10,
        __11,
        __12,
        __13,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action341<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __11.2;
    let __end1 = __12.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action289(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __temp1,
        __12,
        __13,
        __14,
        __15,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action342<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<L<Stmt>>, Loc),
    __11: (Loc, Loc, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __9.2;
    let __end1 = __10.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action290(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __temp1,
        __10,
        __11,
        __12,
        __13,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action343<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<L<Stmt>>, Loc),
    __12: (Loc, Loc, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __10.2;
    let __end1 = __11.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action291(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __temp1,
        __11,
        __12,
        __13,
        __14,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action344<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<L<Stmt>>, Loc),
    __10: (Loc, Loc, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __8.2;
    let __end1 = __9.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action292(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __temp1,
        __9,
        __10,
        __11,
        __12,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action345<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<L<Stmt>>, Loc),
    __11: (Loc, Loc, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __9.2;
    let __end1 = __10.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action293(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __temp1,
        __10,
        __11,
        __12,
        __13,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action346<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<L<Stmt>>, Loc),
    __9: (Loc, Loc, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __7.2;
    let __end1 = __8.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action294(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __temp1,
        __8,
        __9,
        __10,
        __11,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action347<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Type, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Vec<L<Stmt>>, Loc),
    __21: (Loc, Loc, Loc),
    __22: (Loc, Token<'input>, Loc),
    __23: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __19.2;
    let __end1 = __20.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action295(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __temp1,
        __20,
        __21,
        __22,
        __23,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action348<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Type>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Type, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Token<'input>, Loc),
    __21: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __17.2;
    let __end1 = __18.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action296(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __temp1,
        __18,
        __19,
        __20,
        __21,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action349<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Type, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Vec<L<Stmt>>, Loc),
    __20: (Loc, Loc, Loc),
    __21: (Loc, Token<'input>, Loc),
    __22: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __18.2;
    let __end1 = __19.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action297(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __temp1,
        __19,
        __20,
        __21,
        __22,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action350<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Type>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Type, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __16.2;
    let __end1 = __17.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action298(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __temp1,
        __17,
        __18,
        __19,
        __20,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action351<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Type, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Token<'input>, Loc),
    __21: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __17.2;
    let __end1 = __18.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action299(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __temp1,
        __18,
        __19,
        __20,
        __21,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action352<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Type>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Type, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __15.2;
    let __end1 = __16.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action300(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __temp1,
        __16,
        __17,
        __18,
        __19,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action353<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Type, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __16.2;
    let __end1 = __17.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action301(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __temp1,
        __17,
        __18,
        __19,
        __20,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action354<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Type, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __14.2;
    let __end1 = __15.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action302(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __temp1,
        __15,
        __16,
        __17,
        __18,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action355<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Type, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __15.2;
    let __end1 = __16.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action303(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __temp1,
        __16,
        __17,
        __18,
        __19,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action356<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Type, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __13.2;
    let __end1 = __14.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action304(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __temp1,
        __14,
        __15,
        __16,
        __17,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action357<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Type, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __14.2;
    let __end1 = __15.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action305(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __temp1,
        __15,
        __16,
        __17,
        __18,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action358<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Type, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __12.2;
    let __end1 = __13.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action306(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __temp1,
        __13,
        __14,
        __15,
        __16,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action359<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Loc, Loc),
    __20: (Loc, Token<'input>, Loc),
    __21: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __17.2;
    let __end1 = __18.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action307(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __temp1,
        __18,
        __19,
        __20,
        __21,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action360<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Type>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __15.2;
    let __end1 = __16.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action308(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __temp1,
        __16,
        __17,
        __18,
        __19,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action361<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Loc, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __16.2;
    let __end1 = __17.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action309(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __temp1,
        __17,
        __18,
        __19,
        __20,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action362<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Type>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __14.2;
    let __end1 = __15.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action310(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __temp1,
        __15,
        __16,
        __17,
        __18,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action363<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Loc, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __15.2;
    let __end1 = __16.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action311(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __temp1,
        __16,
        __17,
        __18,
        __19,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action364<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Type>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __13.2;
    let __end1 = __14.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action312(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __temp1,
        __14,
        __15,
        __16,
        __17,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action365<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Loc, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __14.2;
    let __end1 = __15.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action313(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __temp1,
        __15,
        __16,
        __17,
        __18,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action366<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __12.2;
    let __end1 = __13.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action314(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __temp1,
        __13,
        __14,
        __15,
        __16,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action367<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Loc, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __13.2;
    let __end1 = __14.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action315(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __temp1,
        __14,
        __15,
        __16,
        __17,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action368<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Loc, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __11.2;
    let __end1 = __12.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action316(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __temp1,
        __12,
        __13,
        __14,
        __15,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action369<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Loc, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __12.2;
    let __end1 = __13.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action317(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __temp1,
        __13,
        __14,
        __15,
        __16,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action370<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<L<Stmt>>, Loc),
    __12: (Loc, Loc, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Loc, Loc),
) -> L<FunDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __10.2;
    let __end1 = __11.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action133(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action318(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __temp1,
        __11,
        __12,
        __13,
        __14,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action371<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Vec<Token<'input>>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Loc, Loc),
) -> L<ImportDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action86(
        __temp0,
        __0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action372<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
) -> L<Expr>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action38(
        __temp0,
        __0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action373<
    'input,
>(
    __0: (Loc, Pat, Loc),
    __1: (Loc, Loc, Loc),
) -> L<Pat>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action73(
        __temp0,
        __0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action374<
    'input,
>(
    __0: (Loc, Stmt, Loc),
    __1: (Loc, Loc, Loc),
) -> L<Stmt>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action23(
        __temp0,
        __0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action375<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    __1: (Loc, L<TypeDecl>, Loc),
    __2: (Loc, Loc, Loc),
) -> L<TopDecl>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action88(
        __0,
        __temp0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action376<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    __1: (Loc, L<FunDecl>, Loc),
    __2: (Loc, Loc, Loc),
) -> L<TopDecl>
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action89(
        __0,
        __temp0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action377<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Vec<SmolStr>, Loc),
    __3: (Loc, TypeDeclRhs, Loc),
    __4: (Loc, Loc, Loc),
) -> L<TypeDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action133(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action2(
        __temp0,
        __0,
        __1,
        __2,
        __3,
        __4,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action378<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action319(
        __0,
        __temp0,
        __1,
        __2,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action379<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, L<Expr>, Loc),
    __3: (Loc, Token<'input>, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action320(
        __0,
        __temp0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action380<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Vec<CallArg>, Loc),
    __3: (Loc, Token<'input>, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action321(
        __0,
        __temp0,
        __1,
        __2,
        __3,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action381<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action322(
        __0,
        __temp0,
        __1,
        __2,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action382<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action323(
        __0,
        __temp0,
        __1,
        __2,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action383<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action324(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action384<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action325(
        __0,
        __temp0,
        __1,
        __2,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action385<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action326(
        __0,
        __temp0,
        __1,
        __2,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action386<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action327(
        __0,
        __temp0,
        __1,
        __2,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action387<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action328(
        __0,
        __temp0,
        __1,
        __2,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action388<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action329(
        __0,
        __temp0,
        __1,
        __2,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action389<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action330(
        __0,
        __temp0,
        __1,
        __2,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action390<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action331(
        __0,
        __temp0,
        __1,
        __2,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action391<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action332(
        __0,
        __temp0,
        __1,
        __2,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action392<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action333(
        __0,
        __temp0,
        __1,
        __2,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action393<
    'input,
>(
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr
{
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action334(
        __0,
        __temp0,
        __1,
        __2,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action394<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Type, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __14.2;
    let __end0 = __15.0;
    let __start1 = __15.2;
    let __end1 = __15.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action335(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __temp0,
        __15,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action395<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Type, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __12.2;
    let __end0 = __13.0;
    let __start1 = __13.2;
    let __end1 = __13.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action336(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __temp0,
        __13,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action396<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Type, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __13.2;
    let __end0 = __14.0;
    let __start1 = __14.2;
    let __end1 = __14.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action337(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __temp0,
        __14,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action397<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Type, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<L<Stmt>>, Loc),
    __12: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __11.2;
    let __end0 = __12.0;
    let __start1 = __12.2;
    let __end1 = __12.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action338(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __temp0,
        __12,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action398<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Type, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __12.2;
    let __end0 = __13.0;
    let __start1 = __13.2;
    let __end1 = __13.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action339(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __temp0,
        __13,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action399<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Type, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<L<Stmt>>, Loc),
    __11: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __10.2;
    let __end0 = __11.0;
    let __start1 = __11.2;
    let __end1 = __11.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action340(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __temp0,
        __11,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action400<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __12.2;
    let __end0 = __13.0;
    let __start1 = __13.2;
    let __end1 = __13.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action341(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __temp0,
        __13,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action401<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<L<Stmt>>, Loc),
    __11: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __10.2;
    let __end0 = __11.0;
    let __start1 = __11.2;
    let __end1 = __11.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action342(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __temp0,
        __11,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action402<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<L<Stmt>>, Loc),
    __12: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __11.2;
    let __end0 = __12.0;
    let __start1 = __12.2;
    let __end1 = __12.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action343(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __temp0,
        __12,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action403<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<L<Stmt>>, Loc),
    __10: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __9.2;
    let __end0 = __10.0;
    let __start1 = __10.2;
    let __end1 = __10.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action344(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __temp0,
        __10,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action404<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<L<Stmt>>, Loc),
    __11: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __10.2;
    let __end0 = __11.0;
    let __start1 = __11.2;
    let __end1 = __11.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action345(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __temp0,
        __11,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action405<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<L<Stmt>>, Loc),
    __9: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __8.2;
    let __end0 = __9.0;
    let __start1 = __9.2;
    let __end1 = __9.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action346(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __temp0,
        __9,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action406<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Type, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Token<'input>, Loc),
    __20: (Loc, Vec<L<Stmt>>, Loc),
    __21: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __20.2;
    let __end0 = __21.0;
    let __start1 = __21.2;
    let __end1 = __21.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action347(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __20,
        __temp0,
        __21,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action407<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Type>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Type, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __18.2;
    let __end0 = __19.0;
    let __start1 = __19.2;
    let __end1 = __19.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action348(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __temp0,
        __19,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action408<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Type, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Token<'input>, Loc),
    __19: (Loc, Vec<L<Stmt>>, Loc),
    __20: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __19.2;
    let __end0 = __20.0;
    let __start1 = __20.2;
    let __end1 = __20.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action349(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __19,
        __temp0,
        __20,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action409<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Type>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Type, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __17.2;
    let __end0 = __18.0;
    let __start1 = __18.2;
    let __end1 = __18.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action350(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __temp0,
        __18,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action410<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Type, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __18.2;
    let __end0 = __19.0;
    let __start1 = __19.2;
    let __end1 = __19.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action351(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __temp0,
        __19,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action411<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Type>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Type, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __16.2;
    let __end0 = __17.0;
    let __start1 = __17.2;
    let __end1 = __17.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action352(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __temp0,
        __17,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action412<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Type, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __17.2;
    let __end0 = __18.0;
    let __start1 = __18.2;
    let __end1 = __18.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action353(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __temp0,
        __18,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action413<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Type, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __15.2;
    let __end0 = __16.0;
    let __start1 = __16.2;
    let __end1 = __16.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action354(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __temp0,
        __16,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action414<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Type, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __16.2;
    let __end0 = __17.0;
    let __start1 = __17.2;
    let __end1 = __17.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action355(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __temp0,
        __17,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action415<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Type, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __14.2;
    let __end0 = __15.0;
    let __start1 = __15.2;
    let __end1 = __15.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action356(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __temp0,
        __15,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action416<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Type, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __15.2;
    let __end0 = __16.0;
    let __start1 = __16.2;
    let __end1 = __16.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action357(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __temp0,
        __16,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action417<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Type, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __13.2;
    let __end0 = __14.0;
    let __start1 = __14.2;
    let __end1 = __14.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action358(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __temp0,
        __14,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action418<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Token<'input>, Loc),
    __18: (Loc, Vec<L<Stmt>>, Loc),
    __19: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __18.2;
    let __end0 = __19.0;
    let __start1 = __19.2;
    let __end1 = __19.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action359(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __18,
        __temp0,
        __19,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action419<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Type>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __16.2;
    let __end0 = __17.0;
    let __start1 = __17.2;
    let __end1 = __17.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action360(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __temp0,
        __17,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action420<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Token<'input>, Loc),
    __17: (Loc, Vec<L<Stmt>>, Loc),
    __18: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __17.2;
    let __end0 = __18.0;
    let __start1 = __18.2;
    let __end1 = __18.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action361(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __17,
        __temp0,
        __18,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action421<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Type>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __15.2;
    let __end0 = __16.0;
    let __start1 = __16.2;
    let __end1 = __16.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action362(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __temp0,
        __16,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action422<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<Type>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Token<'input>, Loc),
    __16: (Loc, Vec<L<Stmt>>, Loc),
    __17: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __16.2;
    let __end0 = __17.0;
    let __start1 = __17.2;
    let __end1 = __17.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action363(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __16,
        __temp0,
        __17,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action423<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<Type>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __14.2;
    let __end0 = __15.0;
    let __start1 = __15.2;
    let __end1 = __15.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action364(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __temp0,
        __15,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action424<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Token<'input>, Loc),
    __15: (Loc, Vec<L<Stmt>>, Loc),
    __16: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __15.2;
    let __end0 = __16.0;
    let __start1 = __16.2;
    let __end1 = __16.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action365(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __15,
        __temp0,
        __16,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action425<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __13.2;
    let __end0 = __14.0;
    let __start1 = __14.2;
    let __end1 = __14.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action366(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __temp0,
        __14,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action426<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Token<'input>, Loc),
    __14: (Loc, Vec<L<Stmt>>, Loc),
    __15: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __14.2;
    let __end0 = __15.0;
    let __start1 = __15.2;
    let __end1 = __15.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action367(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __14,
        __temp0,
        __15,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action427<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __12.2;
    let __end0 = __13.0;
    let __start1 = __13.2;
    let __end1 = __13.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action368(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __temp0,
        __13,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action428<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Token<'input>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Vec<Token<'input>>, Loc),
    __6: (Loc, Token<'input>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Token<'input>, Loc),
    __12: (Loc, Token<'input>, Loc),
    __13: (Loc, Vec<L<Stmt>>, Loc),
    __14: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __13.2;
    let __end0 = __14.0;
    let __start1 = __14.2;
    let __end1 = __14.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action369(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __12,
        __13,
        __temp0,
        __14,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action429<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Token<'input>, Loc),
    __3: (Loc, Vec<Token<'input>>, Loc),
    __4: (Loc, Token<'input>, Loc),
    __5: (Loc, Token<'input>, Loc),
    __6: (Loc, Vec<(Token<'input>, Type)>, Loc),
    __7: (Loc, Token<'input>, Loc),
    __8: (Loc, Token<'input>, Loc),
    __9: (Loc, Token<'input>, Loc),
    __10: (Loc, Token<'input>, Loc),
    __11: (Loc, Vec<L<Stmt>>, Loc),
    __12: (Loc, Token<'input>, Loc),
) -> L<FunDecl>
{
    let __start0 = __11.2;
    let __end0 = __12.0;
    let __start1 = __12.2;
    let __end1 = __12.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action132(
        &__start1,
        &__end1,
    );
    let __temp1 = (__start1, __temp1, __end1);
    __action370(
        __0,
        __1,
        __2,
        __3,
        __4,
        __5,
        __6,
        __7,
        __8,
        __9,
        __10,
        __11,
        __temp0,
        __12,
        __temp1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action430<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Vec<Token<'input>>, Loc),
    __2: (Loc, Token<'input>, Loc),
) -> L<ImportDecl>
{
    let __start0 = __2.2;
    let __end0 = __2.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action371(
        __0,
        __1,
        __2,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action431<
    'input,
>(
    __0: (Loc, Expr, Loc),
) -> L<Expr>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action372(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action432<
    'input,
>(
    __0: (Loc, Pat, Loc),
) -> L<Pat>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action373(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action433<
    'input,
>(
    __0: (Loc, Stmt, Loc),
) -> L<Stmt>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action374(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action434<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    __1: (Loc, L<TypeDecl>, Loc),
) -> L<TopDecl>
{
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action375(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action435<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    __1: (Loc, L<FunDecl>, Loc),
) -> L<TopDecl>
{
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action376(
        __0,
        __1,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action436<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
    __1: (Loc, Token<'input>, Loc),
    __2: (Loc, Vec<SmolStr>, Loc),
    __3: (Loc, TypeDeclRhs, Loc),
) -> L<TypeDecl>
{
    let __start0 = __3.2;
    let __end0 = __3.2;
    let __temp0 = __action132(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action377(
        __0,
        __1,
        __2,
        __3,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action437<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<Alt>
{
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action98(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action32(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action438<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Alt>, Loc),
) -> Vec<Alt>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action99(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action32(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action439<
    'input,
>(
    __0: (Loc, CallArg, Loc),
) -> Vec<CallArg>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action163(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action250(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action440<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<CallArg>
{
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action164(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action250(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action441<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<CallArg>, Loc),
    __1: (Loc, CallArg, Loc),
) -> Vec<CallArg>
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action163(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action251(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action442<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<CallArg>, Loc),
) -> Vec<CallArg>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action164(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action251(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action443<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<L<Stmt>>
{
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action106(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action22(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action444<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<L<Stmt>>, Loc),
) -> Vec<L<Stmt>>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action107(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action22(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action445<
    'input,
>(
    __0: (Loc, L<TypeDecl>, Loc),
) -> L<TopDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action90(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action434(
        __temp0,
        __0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action446<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    __1: (Loc, L<TypeDecl>, Loc),
) -> L<TopDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action91(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action434(
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action447<
    'input,
>(
    __0: (Loc, L<FunDecl>, Loc),
) -> L<TopDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action90(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action435(
        __temp0,
        __0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action448<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    __1: (Loc, L<FunDecl>, Loc),
) -> L<TopDecl>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action91(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action435(
        __temp0,
        __1,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action449<
    'input,
>(
    __0: (Loc, (Option<SmolStr>, L<Expr>), Loc),
) -> Vec<(Option<SmolStr>, L<Expr>)>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action158(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action260(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action450<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<(Option<SmolStr>, L<Expr>)>
{
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action159(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action260(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action451<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
    __1: (Loc, (Option<SmolStr>, L<Expr>), Loc),
) -> Vec<(Option<SmolStr>, L<Expr>)>
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action158(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action261(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action452<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Expr>)>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action159(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action261(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action453<
    'input,
>(
    __0: (Loc, (Option<SmolStr>, L<Pat>), Loc),
) -> Vec<(Option<SmolStr>, L<Pat>)>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action168(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action264(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action454<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<(Option<SmolStr>, L<Pat>)>
{
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action169(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action264(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action455<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    __1: (Loc, (Option<SmolStr>, L<Pat>), Loc),
) -> Vec<(Option<SmolStr>, L<Pat>)>
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action168(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action265(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action456<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Pat>)>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action169(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action265(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action457<
    'input,
>(
    __0: (Loc, Named<Type>, Loc),
) -> Vec<Named<Type>>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action142(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action268(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action458<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<Named<Type>>
{
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action143(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action268(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action459<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Named<Type>>, Loc),
    __1: (Loc, Named<Type>, Loc),
) -> Vec<Named<Type>>
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action142(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action269(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action460<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Named<Type>>, Loc),
) -> Vec<Named<Type>>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action143(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action269(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action461<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<L<TopDecl>>
{
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action92(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action87(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action462<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<L<TopDecl>>, Loc),
) -> Vec<L<TopDecl>>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action93(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action87(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action463<
    'input,
>(
    __0: (Loc, Type, Loc),
) -> Vec<Type>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action137(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action272(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action464<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<Type>
{
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action138(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action272(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action465<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Type>, Loc),
    __1: (Loc, Type, Loc),
) -> Vec<Type>
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action137(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action273(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action466<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Type>, Loc),
) -> Vec<Type>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action138(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action273(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action467<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
) -> Vec<Token<'input>>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action173(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action276(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action468<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<Token<'input>>
{
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action174(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action276(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action469<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    __1: (Loc, Token<'input>, Loc),
) -> Vec<Token<'input>>
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action173(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action277(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action470<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
) -> Vec<Token<'input>>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action174(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action277(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action471<
    'input,
>(
    __0: (Loc, Token<'input>, Loc),
) -> Vec<Token<'input>>
{
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action173(
        __0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action281(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action472<
    'input,
>(
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<Token<'input>>
{
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action174(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action281(
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action473<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
    __1: (Loc, Token<'input>, Loc),
) -> Vec<Token<'input>>
{
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action173(
        __1,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action282(
        __0,
        __temp0,
    )
}

#[allow(clippy::too_many_arguments, clippy::needless_lifetimes,
    clippy::just_underscores_and_digits)]
fn __action474<
    'input,
>(
    __0: (Loc, alloc::vec::Vec<Token<'input>>, Loc),
) -> Vec<Token<'input>>
{
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action174(
        &__start0,
        &__end0,
    );
    let __temp0 = (__start0, __temp0, __end0);
    __action282(
        __0,
        __temp0,
    )
}
#[allow(clippy::type_complexity, dead_code)]

pub  trait __ToTriple<'input, >
{
    fn to_triple(value: Self) -> Result<(Loc,Token<'input>,Loc), __lalrpop_util::ParseError<Loc, Token<'input>, LexerError<Infallible>>>;
}

impl<'input, > __ToTriple<'input, > for (Loc, Token<'input>, Loc)
{
    fn to_triple(value: Self) -> Result<(Loc,Token<'input>,Loc), __lalrpop_util::ParseError<Loc, Token<'input>, LexerError<Infallible>>> {
        Ok(value)
    }
}
impl<'input, > __ToTriple<'input, > for Result<(Loc, Token<'input>, Loc), LexerError<Infallible>>
{
    fn to_triple(value: Self) -> Result<(Loc,Token<'input>,Loc), __lalrpop_util::ParseError<Loc, Token<'input>, LexerError<Infallible>>> {
        match value {
            Ok(v) => Ok(v),
            Err(error) => Err(__lalrpop_util::ParseError::User { error }),
        }
    }
}
