// auto-generated: "lalrpop 0.20.2"
// sha3: 55bf03de5ff52a9ab5eec3dd794e2165e1b179cac38d98477dc6ef7b0d777de4
#![allow(unused)]
#![allow(clippy::all)]
use crate::ast::*;
use crate::interpolation::parse_string_parts;
use crate::token::{Token, TokenKind};
use lexgen_util::{LexerError, Loc};
use smol_str::SmolStr;
use std::convert::Infallible;
use std::rc::Rc;
#[allow(unused_extern_crates)]
extern crate lalrpop_util as __lalrpop_util;
#[allow(unused_imports)]
use self::__lalrpop_util::state_machine as __state_machine;
extern crate alloc;
extern crate core;

#[rustfmt::skip]
#[allow(non_snake_case, non_camel_case_types, unused_mut, unused_variables, unused_imports, unused_parens, clippy::needless_lifetimes, clippy::type_complexity, clippy::needless_return, clippy::too_many_arguments, clippy::never_loop, clippy::match_single_binding, clippy::needless_raw_string_hashes)]
mod __parse__LExpr {

    use crate::ast::*;
    use crate::token::{TokenKind, Token};
    use crate::interpolation::parse_string_parts;
    use std::convert::Infallible;
    use std::rc::Rc;
    use lexgen_util::{LexerError, Loc};
    use smol_str::SmolStr;
    #[allow(unused_extern_crates)]
    extern crate lalrpop_util as __lalrpop_util;
    #[allow(unused_imports)]
    use self::__lalrpop_util::state_machine as __state_machine;
    extern crate core;
    extern crate alloc;
    use super::__ToTriple;
    #[allow(dead_code)]
    pub(crate) enum __Symbol<>
     {
        Variant0(Token),
        Variant1(core::option::Option<Token>),
        Variant2(L<Type>),
        Variant3(core::option::Option<L<Type>>),
        Variant4(Vec<L<Type>>),
        Variant5(core::option::Option<Vec<L<Type>>>),
        Variant6(Vec<L<(L<SmolStr>, Vec<L<Type>>)>>),
        Variant7(core::option::Option<Vec<L<(L<SmolStr>, Vec<L<Type>>)>>>),
        Variant8((L<Expr>, Vec<L<Stmt>>)),
        Variant9(alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>),
        Variant10(Vec<L<Stmt>>),
        Variant11(core::option::Option<Vec<L<Stmt>>>),
        Variant12((Token, core::option::Option<Token>)),
        Variant13(core::option::Option<(Token, core::option::Option<Token>)>),
        Variant14((Token, L<Type>)),
        Variant15(alloc::vec::Vec<(Token, L<Type>)>),
        Variant16(CallArg),
        Variant17(alloc::vec::Vec<CallArg>),
        Variant18(alloc::vec::Vec<L<Type>>),
        Variant19(L<SmolStr>),
        Variant20(core::option::Option<L<SmolStr>>),
        Variant21(core::option::Option<(Token, L<Type>)>),
        Variant22((SmolStr, Type)),
        Variant23(alloc::vec::Vec<(SmolStr, Type)>),
        Variant24((Option<SmolStr>, L<Expr>)),
        Variant25(alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>),
        Variant26((Option<SmolStr>, L<Pat>)),
        Variant27(alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>),
        Variant28(Named<Type>),
        Variant29(alloc::vec::Vec<Named<Type>>),
        Variant30(L<(L<SmolStr>, Vec<L<Type>>)>),
        Variant31(alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>),
        Variant32(alloc::vec::Vec<Token>),
        Variant33(Loc),
        Variant34(Alt),
        Variant35(alloc::vec::Vec<Alt>),
        Variant36(Vec<Alt>),
        Variant37(AssignOp),
        Variant38(Expr),
        Variant39(core::option::Option<CallArg>),
        Variant40(ConstrPattern),
        Variant41(Constructor),
        Variant42(ConstructorDecl),
        Variant43(alloc::vec::Vec<ConstructorDecl>),
        Variant44(L<FunDecl>),
        Variant45(FunSig),
        Variant46(L<ImportDecl>),
        Variant47(L<Expr>),
        Variant48(L<FunSig>),
        Variant49(alloc::vec::Vec<L<FunSig>>),
        Variant50(L<Pat>),
        Variant51(L<Stmt>),
        Variant52(alloc::vec::Vec<L<Stmt>>),
        Variant53(Vec<(SmolStr, Type)>),
        Variant54(core::option::Option<(Option<SmolStr>, L<Expr>)>),
        Variant55(Pat),
        Variant56(core::option::Option<(Option<SmolStr>, L<Pat>)>),
        Variant57(core::option::Option<Named<Type>>),
        Variant58(Vec<(Token, L<Type>)>),
        Variant59(Vec<CallArg>),
        Variant60(Vec<(Option<SmolStr>, L<Expr>)>),
        Variant61(Vec<(Option<SmolStr>, L<Pat>)>),
        Variant62(Vec<Named<Type>>),
        Variant63(Vec<Token>),
        Variant64(Stmt),
        Variant65(L<TopDecl>),
        Variant66(alloc::vec::Vec<L<TopDecl>>),
        Variant67(Vec<L<TopDecl>>),
        Variant68(L<TraitDecl>),
        Variant69(core::option::Option<L<(L<SmolStr>, Vec<L<Type>>)>>),
        Variant70(Type),
        Variant71(Vec<ConstructorDecl>),
        Variant72(L<TypeDecl>),
        Variant73(TypeDeclRhs),
        Variant74(Vec<SmolStr>),
        Variant75(Vec<Type>),
    }
    const __ACTION: &[i16] = &[
        // State 0
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 1
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 2
        2, 0, 0, 3, -243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 81, 0, 74, 75,
        // State 3
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 4
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 5
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 6
        2, 0, 0, 3, -231, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 89, 0, 74, 75,
        // State 7
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 8
        0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 9
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 10
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 11
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 12
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 13
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 14
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 15
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 16
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 17
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 18
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 19
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 20
        2, 0, 0, 3, -245, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 81, 0, 74, 75,
        // State 21
        2, 0, 0, 3, -233, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 89, 0, 74, 75,
        // State 22
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 23
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 24
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 4, 0, 0, 0, 29, 5, 0, 6, 70, 0, 0, 30, 0, 0, 0, 0, 71, -193, 0, 72, 73, 0, 74, 75,
        // State 25
        0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, -92, 0, 0, 135, 0, 136, 137,
        // State 26
        0, 0, 0, 0, 0, 0, 0, 139, 0, 0, 140, 0, 0, 0, 0, 0, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 27
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 4, 0, 0, 0, 29, 5, 0, 6, 70, 0, 0, 30, 0, 0, 0, 0, 71, -194, 0, 72, 73, 0, 74, 75,
        // State 28
        0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 135, 0, 136, 137,
        // State 29
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 30
        0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, -93, 0, 0, 135, 0, 136, 137,
        // State 31
        0, 0, 0, 32, -247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 151, 0, 136, 137,
        // State 32
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 33
        -99, 0, 0, -99, -99, 0, 0, 0, -99, 0, 0, 0, 0, -99, 0, 0, 0, 0, 0, 0, 0, -99, -99, 39, 156, 0, -99, -99, 0, 0, 0, -99, -99, 0, -99, -99, 0, 0, -99, 0, 0, 0, 0, -99, -99, 0, -99, -99, -99, -99, -99,
        // State 34
        0, 0, 0, 32, -247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 151, 0, 136, 137,
        // State 35
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 4, 0, 0, 0, 29, 5, 0, 6, 70, 0, 0, 30, 0, 0, 0, 0, 71, 0, 0, 72, 73, 160, 74, 75,
        // State 36
        0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 135, 0, 136, 137,
        // State 37
        0, 0, 0, 32, -249, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 151, 0, 136, 137,
        // State 38
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 39
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 40
        0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
        // State 41
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 42
        0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 135, 0, 136, 137,
        // State 43
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 44
        0, 0, 0, 45, -251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189, 0, 0, 173,
        // State 45
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 4, 0, 0, 0, 29, 5, 0, 6, 70, 0, 0, 30, 0, 0, 0, 0, 71, -193, 0, 72, 73, 0, 74, 75,
        // State 46
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 5, 0, 6, 70, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 72, 73, 0, 74, 75,
        // State 47
        0, 0, 0, 45, -253, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189, 0, 0, 173,
        // State 48
        0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
        // State 49
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 4, 0, 0, 0, 29, 5, 0, 6, 70, 0, 0, 30, 0, 0, 0, 0, 71, -193, 0, 72, 73, 0, 74, 75,
        // State 50
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 4, 0, 0, 0, 29, 5, 0, 6, 70, 0, 0, 30, 0, 0, 0, 0, 71, -193, 0, 72, 73, 0, 74, 75,
        // State 51
        0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
        // State 52
        0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -241, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
        // State 53
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 4, 0, 0, 0, 29, 5, 0, 6, 70, 0, 0, 30, 0, 0, 0, 0, 71, -193, 0, 72, 73, 0, 74, 75,
        // State 54
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 4, 0, 0, 0, 29, 5, 0, 6, 70, 0, 0, 30, 0, 0, 0, 0, 71, -193, 0, 72, 73, 0, 74, 75,
        // State 55
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 4, 0, 0, 0, 29, 5, 0, 6, 70, 0, 0, 30, 0, 0, 0, 0, 71, -193, 0, 72, 73, 0, 74, 75,
        // State 56
        2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 4, 0, 0, 0, 29, 5, 0, 6, 70, 0, 0, 30, 0, 0, 0, 0, 71, -193, 0, 72, 73, 0, 74, 75,
        // State 57
        0, 0, 0, 0, -117, 0, 0, 0, -117, 0, 0, 0, 0, -117, 0, 0, 0, 0, 0, 0, 0, -117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -117, 0, 0,
        // State 58
        0, 0, 0, 0, -179, 0, 0, 0, -179, 0, 0, 0, 0, -179, 0, 0, 0, 0, 0, 0, 0, -179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -179, 0, 0,
        // State 59
        0, 0, 0, 0, -116, 0, 0, 0, -116, 0, 0, 0, 0, -116, 0, 0, 0, 0, 0, 0, 0, -116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -116, 0, 0,
        // State 60
        0, -159, -159, 7, -159, -159, -159, -159, -159, -159, -159, 76, -159, -159, -159, -159, -159, -159, -159, -159, 8, -159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -159, 0, 0, 0, 0, 0, 0, -159, 0, 0,
        // State 61
        0, -161, -161, 0, -161, -161, -161, -161, -161, -161, -161, 0, 9, -161, -161, -161, -161, -161, -161, -161, 0, -161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -161, 0, 0, 0, 0, 0, 0, -161, 0, 0,
        // State 62
        0, -163, -163, 0, -163, -163, -163, -163, -163, -163, -163, 0, 0, -163, -163, -163, -163, -163, -163, -163, 0, -163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -163, 0, 0, 0, 0, 0, 0, -163, 0, 0,
        // State 63
        0, -166, -166, 0, -166, 10, -166, -166, -166, -166, -166, 0, 0, -166, -166, -166, -166, -166, -166, -166, 0, -166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -166, 0, 0, 0, 0, 0, 0, -166, 0, 0,
        // State 64
        0, -173, -173, 0, -173, 0, 11, -173, -173, 12, -173, 0, 0, -173, -173, -173, -173, -173, -173, -173, 0, -173, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -173, 0, 0, 0, 0, 0, 0, -173, 0, 0,
        // State 65
        0, 13, -175, 0, -175, 0, 0, -175, -175, 0, -175, 0, 0, -175, 14, 15, -175, 16, 17, 18, 0, -175, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -175, 0, 0, 0, 0, 0, 0, -175, 0, 0,
        // State 66
        0, 0, 19, 0, -177, 0, 0, -177, -177, 0, -177, 0, 0, -177, 0, 0, -177, 0, 0, 0, 0, -177, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -177, 0, 0, 0, 0, 0, 0, -177, 0, 0,
        // State 67
        0, 0, 0, 0, -146, 0, 0, -146, -146, 0, -146, 0, 0, -146, 0, 0, -146, 0, 0, 0, 0, -146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, -146, 0, 0,
        // State 68
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 69
        0, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -147, 0, 0, 0, 0, 0, 0, -147, 0, 0,
        // State 70
        0, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -153, 0, 0, 0, 0, 0, 0, -153, 0, 0,
        // State 71
        0, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -151, 0, 0, 0, 0, 0, 0, -151, 0, 0,
        // State 72
        0, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -148, 0, 0, 0, 0, 0, 0, -148, 0, 0,
        // State 73
        0, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -152, 0, 0, 0, 0, 0, 0, -152, 0, 0,
        // State 74
        0, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -149, 0, 0, 0, 0, 0, 0, -149, 0, 0,
        // State 75
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 91,
        // State 76
        0, -160, -160, 0, -160, -160, -160, -160, -160, -160, -160, 0, 0, -160, -160, -160, -160, -160, -160, -160, 0, -160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -160, 0, 0, 0, 0, 0, 0, -160, 0, 0,
        // State 77
        0, 0, 0, 0, -206, 0, 0, 0, -206, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 78
        0, 0, 0, 0, -242, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 79
        0, 0, 0, 0, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 80
        0, -148, -148, -148, -148, -148, -148, 0, -148, -148, 0, -148, -148, 0, -148, -148, 23, -148, -148, -148, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 81
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 82
        0, 0, 0, 0, -185, 0, 0, -185, -185, 0, -185, 0, 0, -185, 0, 0, -185, 0, 0, 0, 0, -185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -185, 0, 0,
        // State 83
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 84
        0, 0, 0, 0, -145, 0, 0, -145, -145, 0, -145, 0, 0, -145, 0, 0, -145, 0, 0, 0, 0, -145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -145, 0, 0,
        // State 85
        0, 0, 0, 0, -230, 0, 0, 0, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 86
        0, 0, 0, 0, -103, 0, 0, 0, -103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 87
        0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 88
        0, -148, -148, -148, -148, -148, -148, 0, -148, -148, 0, -148, -148, 0, -148, -148, 24, -148, -148, -148, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 89
        0, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -156, 0, 0, 0, 0, 0, 0, -156, 0, 0,
        // State 90
        0, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -157, 0, 0, 0, 0, 0, 0, -157, 0, 0,
        // State 91
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 92
        0, -158, -158, 7, -158, -158, -158, -158, -158, -158, -158, 76, -158, -158, -158, -158, -158, -158, -158, -158, 8, -158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -158, 0, 0, 0, 0, 0, 0, -158, 0, 0,
        // State 93
        0, -162, -162, 0, -162, -162, -162, -162, -162, -162, -162, 0, 0, -162, -162, -162, -162, -162, -162, -162, 0, -162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -162, 0, 0, 0, 0, 0, 0, -162, 0, 0,
        // State 94
        0, -164, -164, 0, -164, 10, -164, -164, -164, -164, -164, 0, 0, -164, -164, -164, -164, -164, -164, -164, 0, -164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -164, 0, 0, 0, 0, 0, 0, -164, 0, 0,
        // State 95
        0, -165, -165, 0, -165, 10, -165, -165, -165, -165, -165, 0, 0, -165, -165, -165, -165, -165, -165, -165, 0, -165, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -165, 0, 0, 0, 0, 0, 0, -165, 0, 0,
        // State 96
        0, -168, -168, 0, -168, 0, 11, -168, -168, 12, -168, 0, 0, -168, -168, -168, -168, -168, -168, -168, 0, -168, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -168, 0, 0, 0, 0, 0, 0, -168, 0, 0,
        // State 97
        0, -169, -169, 0, -169, 0, 11, -169, -169, 12, -169, 0, 0, -169, -169, -169, -169, -169, -169, -169, 0, -169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -169, 0, 0, 0, 0, 0, 0, -169, 0, 0,
        // State 98
        0, -171, -171, 0, -171, 0, 11, -171, -171, 12, -171, 0, 0, -171, -171, -171, -171, -171, -171, -171, 0, -171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -171, 0, 0, 0, 0, 0, 0, -171, 0, 0,
        // State 99
        0, -167, -167, 0, -167, 0, 11, -167, -167, 12, -167, 0, 0, -167, -167, -167, -167, -167, -167, -167, 0, -167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -167, 0, 0, 0, 0, 0, 0, -167, 0, 0,
        // State 100
        0, -170, -170, 0, -170, 0, 11, -170, -170, 12, -170, 0, 0, -170, -170, -170, -170, -170, -170, -170, 0, -170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -170, 0, 0, 0, 0, 0, 0, -170, 0, 0,
        // State 101
        0, -172, -172, 0, -172, 0, 11, -172, -172, 12, -172, 0, 0, -172, -172, -172, -172, -172, -172, -172, 0, -172, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -172, 0, 0, 0, 0, 0, 0, -172, 0, 0,
        // State 102
        0, 13, -174, 0, -174, 0, 0, -174, -174, 0, -174, 0, 0, -174, 14, 15, -174, 16, 17, 18, 0, -174, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -174, 0, 0, 0, 0, 0, 0, -174, 0, 0,
        // State 103
        0, 0, 19, 0, -176, 0, 0, -176, -176, 0, -176, 0, 0, -176, 0, 0, -176, 0, 0, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -176, 0, 0, 0, 0, 0, 0, -176, 0, 0,
        // State 104
        0, 0, 0, 0, -244, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 105
        -57, 0, 0, -57, -57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -57, 0, 0, 0, 0, -57, 0, -57, -57, 0, 0, 0, 0, 0, 0, 0, -57, 0, 0, -57, -57, 0, -57, -57,
        // State 106
        0, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -150, 0, 0, 0, 0, 0, 0, -150, 0, 0,
        // State 107
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0,
        // State 108
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
        // State 109
        0, 0, 0, 0, -232, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 110
        -33, 0, 0, -33, -33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -33, 0, 0, 0, 0, -33, 0, -33, -33, 0, 0, 0, 0, 0, 0, 0, -33, 0, 0, -33, -33, 0, -33, -33,
        // State 111
        0, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -155, 0, 0, 0, 0, 0, 0, -155, 0, 0,
        // State 112
        0, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -154, 0, 0, 0, 0, 0, 0, -154, 0, 0,
        // State 113
        -58, 0, 0, -58, -58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -58, 0, 0, 0, 0, -58, 0, -58, -58, 0, 0, 0, 0, 0, 0, 0, -58, 0, 0, -58, -58, 0, -58, -58,
        // State 114
        0, 0, 0, 0, -205, 0, 0, 0, -205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 115
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0,
        // State 116
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0,
        // State 117
        -34, 0, 0, -34, -34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -34, 0, 0, 0, 0, -34, 0, -34, -34, 0, 0, 0, 0, 0, 0, 0, -34, 0, 0, -34, -34, 0, -34, -34,
        // State 118
        0, 0, 0, 0, -102, 0, 0, 0, -102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 119
        -272, 0, 0, -272, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -272, 0, 0, 0, -272, -272, 0, 0, 0, -272, -272, 0, -272, -272, 0, 0, -272, 0, 0, 0, 0, -272, -272, 0, -272, -272, 0, -272, -272,
        // State 120
        0, 0, 0, 0, 0, 0, 0, -185, 0, 0, -185, 0, 0, 0, 0, 0, -185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
        // State 121
        -191, 0, 0, -191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -191, -191, 0, 0, 0, -191, -191, 0, -191, -191, 0, 0, -191, 0, 0, 0, 0, -191, -191, 0, -191, -191, 0, -191, -191,
        // State 122
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0,
        // State 123
        -188, 0, 0, -188, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -188, 0, 0, 0, -188, -188, 0, 0, 0, -188, -188, 0, -188, -188, 0, 0, -188, 0, 0, 0, 0, -188, -188, 0, -188, -188, 0, -188, -188,
        // State 124
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0, 0,
        // State 125
        0, 0, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -90, -90, 0, 0, -90, 0, -90, -90,
        // State 126
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 0, 0,
        // State 127
        0, 0, 0, 0, -212, 0, 0, 0, -212, 0, 0, 0, 0, -212, 0, 0, -212, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -212, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 128
        0, 0, 0, 35, -106, 0, 0, 0, -106, 0, 0, 0, 0, -106, 0, 0, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 129
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 130
        0, 0, 0, 0, -187, 0, 0, 0, -187, 0, 0, 0, 0, -187, 0, 0, -187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 131
        0, 0, 0, 0, -210, 0, 0, 0, -210, 0, 0, 0, 0, -210, 0, 0, -210, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 132
        0, 0, 0, 0, -214, 0, 0, 0, -214, 0, 0, 0, 0, -214, 0, 0, -214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 133
        0, 0, 0, 0, -216, 0, 0, 0, -216, 0, 0, 0, 0, -216, 0, 0, -216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 134
        0, 0, 0, 0, -211, 0, 0, 0, -211, 0, 0, 0, 0, -211, 0, 0, -211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 135
        0, 0, 0, 0, -215, 0, 0, 0, -215, 0, 0, 0, 0, -215, 0, 0, -215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -215, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0,
        // State 136
        0, 0, 0, -109, -109, 0, 0, 0, -109, 0, 0, 153, 0, -109, 0, 0, -109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 137
        -271, 0, 0, -271, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -271, 0, 0, 0, -271, -271, 0, 0, 0, -271, -271, 0, -271, -271, 0, 0, -271, 0, 0, 0, 0, -271, -271, 0, -271, -271, 0, -271, -271,
        // State 138
        -95, 0, 0, -95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -95, 0, 0, 0, 0, -95, 0, -95, -95, 0, 0, 0, 0, 0, 0, 0, -95, 0, 0, -95, -95, 0, -95, -95,
        // State 139
        -96, 0, 0, -96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -96, 0, 0, 0, 0, -96, 0, -96, -96, 0, 0, 0, 0, 0, 0, 0, -96, 0, 0, -96, -96, 0, -96, -96,
        // State 140
        -94, 0, 0, -94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -94, 0, 0, 0, 0, -94, 0, -94, -94, 0, 0, 0, 0, 0, 0, 0, -94, 0, 0, -94, -94, 0, -94, -94,
        // State 141
        -192, 0, 0, -192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -192, -192, 0, 0, 0, -192, -192, 0, -192, -192, 0, 0, -192, 0, 0, 0, 0, -192, -192, 0, -192, -192, 0, -192, -192,
        // State 142
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 143
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 144
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 145
        0, 0, 0, -91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -91, -91, 0, 0, -91, 0, -91, -91,
        // State 146
        -97, 0, 0, -97, -97, 0, 0, 0, -97, 0, 0, 0, 0, -97, 0, 0, 0, 0, 0, 0, 0, -97, -97, 0, 0, 0, -97, -97, 0, 0, 0, -97, -97, 0, -97, -97, 0, 0, -97, 0, 0, 0, 0, -97, -97, 0, -97, -97, -97, -97, -97,
        // State 147
        0, 0, 0, 0, -219, 0, 0, 0, -219, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 148
        0, 0, 0, 0, -246, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 149
        0, 0, 0, 0, 164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 150
        0, 0, 0, 0, -211, 0, 0, 0, -211, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 151
        0, 0, 0, 0, -217, 0, 0, 0, -217, 0, 0, 0, 0, -217, 0, 0, -217, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -217, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 152
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
        // State 153
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
        // State 154
        -101, 0, 0, -101, -101, 0, 0, 0, -101, 0, 0, 0, 0, -101, 0, 0, 0, 0, 0, 0, 0, -101, -101, 44, 167, 0, -101, -101, 0, 0, 0, -101, -101, 0, -101, -101, 0, 0, -101, 0, 0, 0, 0, -101, -101, 0, -101, -101, -101, -101, -101,
        // State 155
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 156
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
        // State 157
        0, 0, 0, 0, 178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 158
        0, 0, 0, -87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -87, -87, 0, 0, -87, 0, -87, -87,
        // State 159
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0,
        // State 160
        0, 0, 0, 0, -209, 0, 0, 0, -209, 0, 0, 0, 0, -209, 0, 0, -209, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 161
        0, 0, 0, 0, -248, 0, 0, 0, 179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 162
        0, 0, 0, -62, -62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -62, 0, 0, 0, -62, 0, -62, -62,
        // State 163
        0, 0, 0, 0, -213, 0, 0, 0, -213, 0, 0, 0, 0, -213, 0, 0, -213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 164
        0, 0, 0, -108, -108, 0, 0, 0, -108, 0, 0, 0, 0, -108, 0, 0, -108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 165
        -270, 0, 0, -270, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -270, 0, 0, 0, -270, -270, 0, 0, 0, -270, -270, 0, -270, -270, 0, 0, -270, 0, 0, 0, 0, -270, -270, 0, -270, -270, 0, -270, -270,
        // State 166
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 182, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 167
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 168
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
        // State 169
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 170
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 171
        0, 0, 0, 0, 0, 0, 0, 0, -195, 0, 0, 0, 0, 0, 0, 0, -195, 0, 0, 0, 0, -195, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 172
        0, 0, 0, 0, -295, 0, 0, 0, -295, 0, 0, 0, 0, 0, 0, 0, -295, 0, 0, 0, 49, -295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 173
        -178, 0, 0, -178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -178, 0, 0, 0, -178, -178, 0, 0, 0, -178, -178, 0, -178, -178, 0, 0, -178, 0, 0, 0, 0, -178, -178, 0, -178, -178, 0, -178, -178,
        // State 174
        -269, 0, 0, -269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -269, 0, 0, 0, -269, -269, 0, 0, 0, -269, -269, 0, -269, -269, 0, 0, -269, 0, 0, 0, 0, -269, -269, 0, -269, -269, 0, -269, -269,
        // State 175
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
        // State 176
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0,
        // State 177
        0, 0, 0, 0, -107, 0, 0, 0, -107, 0, 0, 0, 0, -107, 0, 0, -107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 178
        0, 0, 0, -63, -63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -63, 0, 0, 0, -63, 0, -63, -63,
        // State 179
        0, 0, 0, 0, -218, 0, 0, 0, -218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 180
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 181
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
        // State 182
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 0, 0,
        // State 183
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0, 0, 0, 0, 0,
        // State 184
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
        // State 185
        0, 0, 0, 0, -250, 0, 0, 0, 199, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 186
        0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 187
        0, 0, 0, 0, -223, 0, 0, 0, -223, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 188
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 189
        -267, 0, 0, -267, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -267, 0, 0, 0, -267, -267, 0, 0, 0, -267, -267, 0, -267, -267, 0, 0, -267, 0, 0, 0, 0, -267, -267, 0, -267, -267, 0, -267, -267,
        // State 190
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
        // State 191
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
        // State 192
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0,
        // State 193
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 0, 0,
        // State 194
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0,
        // State 195
        -268, 0, 0, -268, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -268, 0, 0, 0, -268, -268, 0, 0, 0, -268, -268, 0, -268, -268, 0, 0, -268, 0, 0, 0, 0, -268, -268, 0, -268, -268, 0, -268, -268,
        // State 196
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 207, 0, 0,
        // State 197
        0, 0, 0, 0, -252, 0, 0, 0, 208, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 198
        0, 0, 0, -67, -67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -67, 0, 0, -67,
        // State 199
        0, 0, 0, 0, -297, 0, 0, 0, -297, 0, 0, 0, 0, 0, 0, 0, -297, 0, 0, 0, 0, -297, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 200
        0, 0, 0, 0, 0, 0, 0, 0, 211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -238, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 201
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 212, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 202
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
        // State 203
        0, 0, 0, -86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -86, -86, 0, 0, -86, 0, -86, -86,
        // State 204
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
        // State 205
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
        // State 206
        -266, 0, 0, -266, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -266, 0, 0, 0, -266, -266, 0, 0, 0, -266, -266, 0, -266, -266, 0, 0, -266, 0, 0, 0, 0, -266, -266, 0, -266, -266, 0, -266, -266,
        // State 207
        0, 0, 0, -68, -68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -68, 0, 0, -68,
        // State 208
        0, 0, 0, 0, -222, 0, 0, 0, -222, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 209
        0, 0, 0, 0, 0, 0, 0, 0, 218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 210
        0, 0, 0, -43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -43,
        // State 211
        0, 0, 0, 0, -296, 0, 0, 0, -296, 0, 0, 0, 0, 0, 0, 0, -296, 0, 0, 0, 0, -296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 212
        -274, 0, 0, -274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -274, 0, 0, 0, -274, -274, 0, 0, 0, -274, -274, 0, -274, -274, 0, 0, -274, 0, 0, 0, 0, -274, -274, 0, -274, -274, 0, -274, -274,
        // State 213
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
        // State 214
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
        // State 215
        -98, 0, 0, -98, -98, 0, 0, 0, -98, 0, 0, 0, 0, -98, 0, 0, 0, 0, 0, 0, 0, -98, -98, 0, 0, 0, -98, -98, 0, 0, 0, -98, -98, 0, -98, -98, 0, 0, -98, 0, 0, 0, 0, -98, -98, 0, -98, -98, -98, -98, -98,
        // State 216
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
        // State 217
        0, 0, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -44,
        // State 218
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
        // State 219
        -100, 0, 0, -100, -100, 0, 0, 0, -100, 0, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, -100, -100, 0, 0, 0, -100, -100, 0, 0, 0, -100, -100, 0, -100, -100, 0, 0, -100, 0, 0, 0, 0, -100, -100, 0, -100, -100, -100, -100, -100,
        // State 220
        -15, 0, 0, -15, -15, 0, 0, 0, -15, 0, 0, 0, 0, -15, 0, 0, 0, 0, 0, 0, 0, -15, -15, -15, -15, 0, -15, -15, 0, 0, 0, -15, -15, 0, -15, -15, 0, 0, -15, 0, 0, 0, 0, -15, -15, 0, -15, -15, -15, -15, -15,
        // State 221
        -273, 0, 0, -273, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -273, 0, 0, 0, -273, -273, 0, 0, 0, -273, -273, 0, -273, -273, 0, 0, -273, 0, 0, 0, 0, -273, -273, 0, -273, -273, 0, -273, -273,
        // State 222
        -16, 0, 0, -16, -16, 0, 0, 0, -16, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, 0, -16, -16, -16, -16, 0, -16, -16, 0, 0, 0, -16, -16, 0, -16, -16, 0, 0, -16, 0, 0, 0, 0, -16, -16, 0, -16, -16, -16, -16, -16,
    ];
    fn __action(state: i16, integer: usize) -> i16 {
        __ACTION[(state as usize) * 51 + integer]
    }
    const __EOF_ACTION: &[i16] = &[
        // State 0
        0,
        // State 1
        0,
        // State 2
        0,
        // State 3
        0,
        // State 4
        0,
        // State 5
        0,
        // State 6
        0,
        // State 7
        0,
        // State 8
        0,
        // State 9
        0,
        // State 10
        0,
        // State 11
        0,
        // State 12
        0,
        // State 13
        0,
        // State 14
        0,
        // State 15
        0,
        // State 16
        0,
        // State 17
        0,
        // State 18
        0,
        // State 19
        0,
        // State 20
        0,
        // State 21
        0,
        // State 22
        0,
        // State 23
        0,
        // State 24
        0,
        // State 25
        0,
        // State 26
        0,
        // State 27
        0,
        // State 28
        0,
        // State 29
        0,
        // State 30
        0,
        // State 31
        0,
        // State 32
        0,
        // State 33
        -99,
        // State 34
        0,
        // State 35
        0,
        // State 36
        0,
        // State 37
        0,
        // State 38
        0,
        // State 39
        0,
        // State 40
        0,
        // State 41
        0,
        // State 42
        0,
        // State 43
        0,
        // State 44
        0,
        // State 45
        0,
        // State 46
        0,
        // State 47
        0,
        // State 48
        0,
        // State 49
        0,
        // State 50
        0,
        // State 51
        0,
        // State 52
        0,
        // State 53
        0,
        // State 54
        0,
        // State 55
        0,
        // State 56
        0,
        // State 57
        -117,
        // State 58
        -179,
        // State 59
        -116,
        // State 60
        -159,
        // State 61
        -161,
        // State 62
        -163,
        // State 63
        -166,
        // State 64
        -173,
        // State 65
        -175,
        // State 66
        -177,
        // State 67
        -146,
        // State 68
        -309,
        // State 69
        -147,
        // State 70
        -153,
        // State 71
        -151,
        // State 72
        -148,
        // State 73
        -152,
        // State 74
        -149,
        // State 75
        0,
        // State 76
        -160,
        // State 77
        0,
        // State 78
        0,
        // State 79
        0,
        // State 80
        0,
        // State 81
        0,
        // State 82
        -185,
        // State 83
        0,
        // State 84
        -145,
        // State 85
        0,
        // State 86
        0,
        // State 87
        0,
        // State 88
        0,
        // State 89
        -156,
        // State 90
        -157,
        // State 91
        0,
        // State 92
        -158,
        // State 93
        -162,
        // State 94
        -164,
        // State 95
        -165,
        // State 96
        -168,
        // State 97
        -169,
        // State 98
        -171,
        // State 99
        -167,
        // State 100
        -170,
        // State 101
        -172,
        // State 102
        -174,
        // State 103
        -176,
        // State 104
        0,
        // State 105
        0,
        // State 106
        -150,
        // State 107
        0,
        // State 108
        0,
        // State 109
        0,
        // State 110
        0,
        // State 111
        -155,
        // State 112
        -154,
        // State 113
        0,
        // State 114
        0,
        // State 115
        0,
        // State 116
        0,
        // State 117
        0,
        // State 118
        0,
        // State 119
        0,
        // State 120
        0,
        // State 121
        0,
        // State 122
        0,
        // State 123
        0,
        // State 124
        0,
        // State 125
        0,
        // State 126
        0,
        // State 127
        0,
        // State 128
        0,
        // State 129
        0,
        // State 130
        0,
        // State 131
        0,
        // State 132
        0,
        // State 133
        0,
        // State 134
        0,
        // State 135
        0,
        // State 136
        0,
        // State 137
        0,
        // State 138
        0,
        // State 139
        0,
        // State 140
        0,
        // State 141
        0,
        // State 142
        0,
        // State 143
        0,
        // State 144
        0,
        // State 145
        0,
        // State 146
        -97,
        // State 147
        0,
        // State 148
        0,
        // State 149
        0,
        // State 150
        0,
        // State 151
        0,
        // State 152
        0,
        // State 153
        0,
        // State 154
        -101,
        // State 155
        0,
        // State 156
        0,
        // State 157
        0,
        // State 158
        0,
        // State 159
        0,
        // State 160
        0,
        // State 161
        0,
        // State 162
        0,
        // State 163
        0,
        // State 164
        0,
        // State 165
        0,
        // State 166
        0,
        // State 167
        0,
        // State 168
        0,
        // State 169
        0,
        // State 170
        0,
        // State 171
        0,
        // State 172
        0,
        // State 173
        0,
        // State 174
        0,
        // State 175
        0,
        // State 176
        0,
        // State 177
        0,
        // State 178
        0,
        // State 179
        0,
        // State 180
        0,
        // State 181
        0,
        // State 182
        0,
        // State 183
        0,
        // State 184
        0,
        // State 185
        0,
        // State 186
        0,
        // State 187
        0,
        // State 188
        0,
        // State 189
        0,
        // State 190
        0,
        // State 191
        0,
        // State 192
        0,
        // State 193
        0,
        // State 194
        0,
        // State 195
        0,
        // State 196
        0,
        // State 197
        0,
        // State 198
        0,
        // State 199
        0,
        // State 200
        0,
        // State 201
        0,
        // State 202
        0,
        // State 203
        0,
        // State 204
        0,
        // State 205
        0,
        // State 206
        0,
        // State 207
        0,
        // State 208
        0,
        // State 209
        0,
        // State 210
        0,
        // State 211
        0,
        // State 212
        0,
        // State 213
        0,
        // State 214
        0,
        // State 215
        -98,
        // State 216
        0,
        // State 217
        0,
        // State 218
        0,
        // State 219
        -100,
        // State 220
        -15,
        // State 221
        0,
        // State 222
        -16,
    ];
    fn __goto(state: i16, nt: usize) -> i16 {
        match nt {
            9 => 154,
            19 => 21,
            25 => 52,
            34 => 20,
            37 => 37,
            40 => 47,
            52 => match state {
                30 => 145,
                _ => 125,
            },
            54 => 30,
            55 => 126,
            56 => 32,
            57 => match state {
                24 | 27 | 35 | 45 | 49..=50 | 53..=56 => 119,
                41 | 46 => 173,
                _ => 57,
            },
            58 => match state {
                21 => 109,
                _ => 85,
            },
            60 => 127,
            61 => 128,
            64 => 58,
            68 => match state {
                4..=5 | 41 | 46 => 82,
                24 | 27 | 35 | 45 | 49..=50 | 53..=56 => 120,
                _ => 59,
            },
            69 => match state {
                8 => 92,
                _ => 60,
            },
            70 => 61,
            71 => match state {
                1 => 76,
                9 => 93,
                _ => 62,
            },
            72 => match state {
                10 => 94,
                11 => 95,
                _ => 63,
            },
            73 => match state {
                12 => 96,
                13 => 97,
                14 => 98,
                15 => 99,
                16 => 100,
                17 => 101,
                _ => 64,
            },
            74 => match state {
                18 => 102,
                _ => 65,
            },
            75 => match state {
                19 => 103,
                _ => 66,
            },
            76 => 67,
            77 => match state {
                46 => 195,
                _ => 174,
            },
            78 => match state {
                0 => 68,
                3 => 81,
                6 | 21 => 86,
                7 => 91,
                22 => 114,
                23 => 118,
                29 => 144,
                32 => 153,
                38 => 167,
                39 => 169,
                43 => 180,
                _ => 77,
            },
            82 => match state {
                4 => 83,
                5 => 84,
                41 => 175,
                46 => 196,
                _ => 26,
            },
            84 => match state {
                25 | 30 => 129,
                28 => 143,
                42 => 179,
                _ => 147,
            },
            85 => match state {
                27 => 141,
                35 => 158,
                _ => 121,
            },
            87 => 27,
            88 => match state {
                45 => 190,
                49 => 202,
                50 => 205,
                53 => 213,
                54 => 214,
                55 => 216,
                56 => 218,
                _ => 122,
            },
            89 => match state {
                48 => 200,
                52 => 209,
                _ => 170,
            },
            96 => match state {
                20 => 104,
                _ => 78,
            },
            98 => match state {
                36 => 160,
                _ => 130,
            },
            99 => 131,
            100 => match state {
                37 => 161,
                _ => 148,
            },
            102 => match state {
                47 => 197,
                _ => 185,
            },
            105 => 87,
            107 => 201,
            108 => 79,
            109 => match state {
                34 => 157,
                _ => 149,
            },
            110 => 186,
            114 => 123,
            122 => match state {
                44 | 47 => 187,
                51 => 208,
                _ => 171,
            },
            _ => 0,
        }
    }
    const __TERMINAL: &[&str] = &[
        r###""!""###,
        r###""!=""###,
        r###""&&""###,
        r###""(""###,
        r###"")""###,
        r###""*""###,
        r###""+""###,
        r###""+=""###,
        r###"",""###,
        r###""-""###,
        r###""-=""###,
        r###"".""###,
        r###""..""###,
        r###"":""###,
        r###""<""###,
        r###""<=""###,
        r###""=""###,
        r###""==""###,
        r###"">""###,
        r###"">=""###,
        r###""[""###,
        r###""]""###,
        r###""_""###,
        r###""elif""###,
        r###""else""###,
        r###""fn""###,
        r###""for""###,
        r###""if""###,
        r###""impl""###,
        r###""import""###,
        r###""in""###,
        r###""let""###,
        r###""match""###,
        r###""prim""###,
        r###""return""###,
        r###""self""###,
        r###""trait""###,
        r###""type""###,
        r###""while""###,
        r###""{""###,
        r###""|""###,
        r###""||""###,
        r###""}""###,
        r###"CharLit"###,
        r###"DEDENT"###,
        r###"INDENT"###,
        r###"IntLit"###,
        r###"LowerId"###,
        r###"NEWLINE"###,
        r###"StringLit"###,
        r###"UpperId"###,
    ];
    fn __expected_tokens(__state: i16) -> alloc::vec::Vec<alloc::string::String> {
        __TERMINAL.iter().enumerate().filter_map(|(index, terminal)| {
            let next_state = __action(__state, index);
            if next_state == 0 {
                None
            } else {
                Some(alloc::string::ToString::to_string(terminal))
            }
        }).collect()
    }
    fn __expected_tokens_from_states<
        'a,
    >(
        __states: &[i16],
        _: core::marker::PhantomData<(&'a ())>,
    ) -> alloc::vec::Vec<alloc::string::String>
    {
        __TERMINAL.iter().enumerate().filter_map(|(index, terminal)| {
            if __accepts(None, __states, Some(index), core::marker::PhantomData::<(&())>) {
                Some(alloc::string::ToString::to_string(terminal))
            } else {
                None
            }
        }).collect()
    }
    struct __StateMachine<'a>
    where 
    {
        module: &'a Rc<str>,
        __phantom: core::marker::PhantomData<(&'a ())>,
    }
    impl<'a> __state_machine::ParserDefinition for __StateMachine<'a>
    where 
    {
        type Location = Loc;
        type Error = LexerError<Infallible>;
        type Token = Token;
        type TokenIndex = usize;
        type Symbol = __Symbol<>;
        type Success = L<Expr>;
        type StateIndex = i16;
        type Action = i16;
        type ReduceIndex = i16;
        type NonterminalIndex = usize;

        #[inline]
        fn start_location(&self) -> Self::Location {
              Default::default()
        }

        #[inline]
        fn start_state(&self) -> Self::StateIndex {
              0
        }

        #[inline]
        fn token_to_index(&self, token: &Self::Token) -> Option<usize> {
            __token_to_integer(token, core::marker::PhantomData::<(&())>)
        }

        #[inline]
        fn action(&self, state: i16, integer: usize) -> i16 {
            __action(state, integer)
        }

        #[inline]
        fn error_action(&self, state: i16) -> i16 {
            __action(state, 51 - 1)
        }

        #[inline]
        fn eof_action(&self, state: i16) -> i16 {
            __EOF_ACTION[state as usize]
        }

        #[inline]
        fn goto(&self, state: i16, nt: usize) -> i16 {
            __goto(state, nt)
        }

        fn token_to_symbol(&self, token_index: usize, token: Self::Token) -> Self::Symbol {
            __token_to_symbol(token_index, token, core::marker::PhantomData::<(&())>)
        }

        fn expected_tokens(&self, state: i16) -> alloc::vec::Vec<alloc::string::String> {
            __expected_tokens(state)
        }

        fn expected_tokens_from_states(&self, states: &[i16]) -> alloc::vec::Vec<alloc::string::String> {
            __expected_tokens_from_states(states, core::marker::PhantomData::<(&())>)
        }

        #[inline]
        fn uses_error_recovery(&self) -> bool {
            false
        }

        #[inline]
        fn error_recovery_symbol(
            &self,
            recovery: __state_machine::ErrorRecovery<Self>,
        ) -> Self::Symbol {
            panic!("error recovery not enabled for this grammar")
        }

        fn reduce(
            &mut self,
            action: i16,
            start_location: Option<&Self::Location>,
            states: &mut alloc::vec::Vec<i16>,
            symbols: &mut alloc::vec::Vec<__state_machine::SymbolTriple<Self>>,
        ) -> Option<__state_machine::ParseResult<Self>> {
            __reduce(
                self.module,
                action,
                start_location,
                states,
                symbols,
                core::marker::PhantomData::<(&())>,
            )
        }

        fn simulate_reduce(&self, action: i16) -> __state_machine::SimulatedReduce<Self> {
            __simulate_reduce(action, core::marker::PhantomData::<(&())>)
        }
    }
    fn __token_to_integer<
        'a,
    >(
        __token: &Token,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> Option<usize>
    {
        match *__token {
            Token { kind: TokenKind::Exclamation, .. } if true => Some(0),
            Token { kind: TokenKind::ExclamationEq, .. } if true => Some(1),
            Token { kind: TokenKind::AmpAmp, .. } if true => Some(2),
            Token { kind: TokenKind::LParen, .. } if true => Some(3),
            Token { kind: TokenKind::RParen, .. } if true => Some(4),
            Token { kind: TokenKind::Star, .. } if true => Some(5),
            Token { kind: TokenKind::Plus, .. } if true => Some(6),
            Token { kind: TokenKind::PlusEq, .. } if true => Some(7),
            Token { kind: TokenKind::Comma, .. } if true => Some(8),
            Token { kind: TokenKind::Minus, .. } if true => Some(9),
            Token { kind: TokenKind::MinusEq, .. } if true => Some(10),
            Token { kind: TokenKind::Dot, .. } if true => Some(11),
            Token { kind: TokenKind::DotDot, .. } if true => Some(12),
            Token { kind: TokenKind::Colon, .. } if true => Some(13),
            Token { kind: TokenKind::LAngle, .. } if true => Some(14),
            Token { kind: TokenKind::LAngleEq, .. } if true => Some(15),
            Token { kind: TokenKind::Eq, .. } if true => Some(16),
            Token { kind: TokenKind::EqEq, .. } if true => Some(17),
            Token { kind: TokenKind::RAngle, .. } if true => Some(18),
            Token { kind: TokenKind::RAngleEq, .. } if true => Some(19),
            Token { kind: TokenKind::LBracket, .. } if true => Some(20),
            Token { kind: TokenKind::RBracket, .. } if true => Some(21),
            Token { kind: TokenKind::Underscore, .. } if true => Some(22),
            Token { kind: TokenKind::Elif, .. } if true => Some(23),
            Token { kind: TokenKind::Else, .. } if true => Some(24),
            Token { kind: TokenKind::Fn, .. } if true => Some(25),
            Token { kind: TokenKind::For, .. } if true => Some(26),
            Token { kind: TokenKind::If, .. } if true => Some(27),
            Token { kind: TokenKind::Impl, .. } if true => Some(28),
            Token { kind: TokenKind::Import, .. } if true => Some(29),
            Token { kind: TokenKind::In, .. } if true => Some(30),
            Token { kind: TokenKind::Let, .. } if true => Some(31),
            Token { kind: TokenKind::Match, .. } if true => Some(32),
            Token { kind: TokenKind::Prim, .. } if true => Some(33),
            Token { kind: TokenKind::Return, .. } if true => Some(34),
            Token { kind: TokenKind::Self_, .. } if true => Some(35),
            Token { kind: TokenKind::Trait, .. } if true => Some(36),
            Token { kind: TokenKind::Type, .. } if true => Some(37),
            Token { kind: TokenKind::While, .. } if true => Some(38),
            Token { kind: TokenKind::LBrace, .. } if true => Some(39),
            Token { kind: TokenKind::Pipe, .. } if true => Some(40),
            Token { kind: TokenKind::PipePipe, .. } if true => Some(41),
            Token { kind: TokenKind::RBrace, .. } if true => Some(42),
            Token { kind: TokenKind::Char, .. } if true => Some(43),
            Token { kind: TokenKind::Dedent, .. } if true => Some(44),
            Token { kind: TokenKind::Indent, .. } if true => Some(45),
            Token { kind: TokenKind::Int, .. } if true => Some(46),
            Token { kind: TokenKind::LowerId, .. } if true => Some(47),
            Token { kind: TokenKind::Newline, .. } if true => Some(48),
            Token { kind: TokenKind::String, .. } if true => Some(49),
            Token { kind: TokenKind::UpperId, .. } if true => Some(50),
            _ => None,
        }
    }
    fn __token_to_symbol<
        'a,
    >(
        __token_index: usize,
        __token: Token,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> __Symbol<>
    {
        #[allow(clippy::manual_range_patterns)]match __token_index {
            0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 => __Symbol::Variant0(__token),
            _ => unreachable!(),
        }
    }
    fn __simulate_reduce<
        'a,
    >(
        __reduce_index: i16,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> __state_machine::SimulatedReduce<__StateMachine<'a>>
    {
        match __reduce_index {
            0 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 0,
                }
            }
            1 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 0,
                }
            }
            2 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 1,
                }
            }
            3 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 2,
                }
            }
            4 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 2,
                }
            }
            5 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 3,
                }
            }
            6 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 4,
                }
            }
            7 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 4,
                }
            }
            8 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 5,
                }
            }
            9 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 6,
                }
            }
            10 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 6,
                }
            }
            11 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 7,
                }
            }
            12 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 8,
                }
            }
            13 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 8,
                }
            }
            14 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 9,
                }
            }
            15 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 9,
                }
            }
            16 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 10,
                }
            }
            17 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 11,
                }
            }
            18 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 11,
                }
            }
            19 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 12,
                }
            }
            20 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 12,
                }
            }
            21 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 13,
                }
            }
            22 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 13,
                }
            }
            23 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 13,
                }
            }
            24 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 14,
                }
            }
            25 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 15,
                }
            }
            26 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 15,
                }
            }
            27 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 16,
                }
            }
            28 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 16,
                }
            }
            29 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 17,
                }
            }
            30 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 18,
                }
            }
            31 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 18,
                }
            }
            32 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 19,
                }
            }
            33 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 19,
                }
            }
            34 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 20,
                }
            }
            35 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 21,
                }
            }
            36 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 21,
                }
            }
            37 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 22,
                }
            }
            38 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 22,
                }
            }
            39 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 23,
                }
            }
            40 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 24,
                }
            }
            41 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 24,
                }
            }
            42 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 25,
                }
            }
            43 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 25,
                }
            }
            44 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 26,
                }
            }
            45 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 27,
                }
            }
            46 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 27,
                }
            }
            47 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 28,
                }
            }
            48 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 29,
                }
            }
            49 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 29,
                }
            }
            50 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 30,
                }
            }
            51 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 31,
                }
            }
            52 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 31,
                }
            }
            53 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 32,
                }
            }
            54 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 33,
                }
            }
            55 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 33,
                }
            }
            56 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 34,
                }
            }
            57 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 34,
                }
            }
            58 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 35,
                }
            }
            59 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 36,
                }
            }
            60 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 36,
                }
            }
            61 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 37,
                }
            }
            62 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 37,
                }
            }
            63 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 38,
                }
            }
            64 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 39,
                }
            }
            65 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 39,
                }
            }
            66 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 40,
                }
            }
            67 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 40,
                }
            }
            68 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 41,
                }
            }
            69 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 42,
                }
            }
            70 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 42,
                }
            }
            71 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 43,
                }
            }
            72 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 43,
                }
            }
            73 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 44,
                }
            }
            74 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 45,
                }
            }
            75 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 45,
                }
            }
            76 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 46,
                }
            }
            77 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 46,
                }
            }
            78 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 47,
                }
            }
            79 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 48,
                }
            }
            80 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 48,
                }
            }
            81 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 49,
                }
            }
            82 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 49,
                }
            }
            83 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 50,
                }
            }
            84 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 51,
                }
            }
            85 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 52,
                }
            }
            86 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 52,
                }
            }
            87 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 53,
                }
            }
            88 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 53,
                }
            }
            89 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 54,
                }
            }
            90 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 54,
                }
            }
            91 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 55,
                }
            }
            92 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            93 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 56,
                }
            }
            94 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 56,
                }
            }
            95 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 56,
                }
            }
            96 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 57,
                }
            }
            97 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 57,
                }
            }
            98 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 57,
                }
            }
            99 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 57,
                }
            }
            100 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 57,
                }
            }
            101 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 58,
                }
            }
            102 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 58,
                }
            }
            103 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 59,
                }
            }
            104 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 59,
                }
            }
            105 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 60,
                }
            }
            106 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 60,
                }
            }
            107 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 61,
                }
            }
            108 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 61,
                }
            }
            109 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 62,
                }
            }
            110 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 62,
                }
            }
            111 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 62,
                }
            }
            112 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 62,
                }
            }
            113 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 63,
                }
            }
            114 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 63,
                }
            }
            115 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 64,
                }
            }
            116 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 64,
                }
            }
            117 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 65,
                }
            }
            118 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 65,
                }
            }
            119 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 66,
                }
            }
            120 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 66,
                }
            }
            121 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 66,
                }
            }
            122 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 66,
                }
            }
            123 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 66,
                }
            }
            124 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 66,
                }
            }
            125 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 66,
                }
            }
            126 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 66,
                }
            }
            127 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 66,
                }
            }
            128 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 66,
                }
            }
            129 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 66,
                }
            }
            130 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 66,
                }
            }
            131 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 66,
                }
            }
            132 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 66,
                }
            }
            133 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 66,
                }
            }
            134 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 66,
                }
            }
            135 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 66,
                }
            }
            136 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 66,
                }
            }
            137 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 66,
                }
            }
            138 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 66,
                }
            }
            139 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 66,
                }
            }
            140 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 66,
                }
            }
            141 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 66,
                }
            }
            142 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 66,
                }
            }
            143 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 67,
                }
            }
            144 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 68,
                }
            }
            145 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 68,
                }
            }
            146 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            147 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            148 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            149 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 69,
                }
            }
            150 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            151 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            152 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            153 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 69,
                }
            }
            154 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 69,
                }
            }
            155 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 69,
                }
            }
            156 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 69,
                }
            }
            157 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 70,
                }
            }
            158 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 70,
                }
            }
            159 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 71,
                }
            }
            160 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 71,
                }
            }
            161 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 72,
                }
            }
            162 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 72,
                }
            }
            163 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 73,
                }
            }
            164 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 73,
                }
            }
            165 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 73,
                }
            }
            166 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            167 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            168 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            169 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            170 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            171 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            172 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 74,
                }
            }
            173 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 75,
                }
            }
            174 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 75,
                }
            }
            175 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 76,
                }
            }
            176 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 76,
                }
            }
            177 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 77,
                }
            }
            178 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 78,
                }
            }
            179 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 79,
                }
            }
            180 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 80,
                }
            }
            181 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 80,
                }
            }
            182 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 81,
                }
            }
            183 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 81,
                }
            }
            184 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 82,
                }
            }
            185 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 83,
                }
            }
            186 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 84,
                }
            }
            187 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 85,
                }
            }
            188 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 86,
                }
            }
            189 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 86,
                }
            }
            190 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 87,
                }
            }
            191 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 87,
                }
            }
            192 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 88,
                }
            }
            193 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 88,
                }
            }
            194 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 89,
                }
            }
            195 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 90,
                }
            }
            196 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 90,
                }
            }
            197 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 91,
                }
            }
            198 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 92,
                }
            }
            199 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 92,
                }
            }
            200 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 93,
                }
            }
            201 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 93,
                }
            }
            202 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 94,
                }
            }
            203 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 95,
                }
            }
            204 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 96,
                }
            }
            205 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 96,
                }
            }
            206 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 97,
                }
            }
            207 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 97,
                }
            }
            208 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 98,
                }
            }
            209 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 98,
                }
            }
            210 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            211 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            212 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 99,
                }
            }
            213 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            214 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            215 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            216 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 99,
                }
            }
            217 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 100,
                }
            }
            218 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 100,
                }
            }
            219 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 101,
                }
            }
            220 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 101,
                }
            }
            221 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 102,
                }
            }
            222 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 102,
                }
            }
            223 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 103,
                }
            }
            224 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 103,
                }
            }
            225 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 104,
                }
            }
            226 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 104,
                }
            }
            227 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 104,
                }
            }
            228 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 104,
                }
            }
            229 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 105,
                }
            }
            230 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 105,
                }
            }
            231 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 105,
                }
            }
            232 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 105,
                }
            }
            233 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 106,
                }
            }
            234 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 106,
                }
            }
            235 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 106,
                }
            }
            236 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 106,
                }
            }
            237 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 107,
                }
            }
            238 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 107,
                }
            }
            239 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 107,
                }
            }
            240 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 107,
                }
            }
            241 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 108,
                }
            }
            242 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 108,
                }
            }
            243 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 108,
                }
            }
            244 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 108,
                }
            }
            245 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 109,
                }
            }
            246 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 109,
                }
            }
            247 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 109,
                }
            }
            248 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 109,
                }
            }
            249 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 110,
                }
            }
            250 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 110,
                }
            }
            251 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 110,
                }
            }
            252 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 110,
                }
            }
            253 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 111,
                }
            }
            254 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 111,
                }
            }
            255 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 111,
                }
            }
            256 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 111,
                }
            }
            257 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 112,
                }
            }
            258 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 112,
                }
            }
            259 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 112,
                }
            }
            260 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 112,
                }
            }
            261 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 113,
                }
            }
            262 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 113,
                }
            }
            263 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 113,
                }
            }
            264 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 113,
                }
            }
            265 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 114,
                }
            }
            266 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 114,
                }
            }
            267 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 114,
                }
            }
            268 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 114,
                }
            }
            269 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 114,
                }
            }
            270 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 114,
                }
            }
            271 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 114,
                }
            }
            272 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 114,
                }
            }
            273 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 114,
                }
            }
            274 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 115,
                }
            }
            275 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 115,
                }
            }
            276 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 115,
                }
            }
            277 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 115,
                }
            }
            278 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 115,
                }
            }
            279 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 115,
                }
            }
            280 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 116,
                }
            }
            281 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 116,
                }
            }
            282 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 117,
                }
            }
            283 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 117,
                }
            }
            284 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 118,
                }
            }
            285 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 118,
                }
            }
            286 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 119,
                }
            }
            287 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 119,
                }
            }
            288 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 119,
                }
            }
            289 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 119,
                }
            }
            290 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 120,
                }
            }
            291 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 120,
                }
            }
            292 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 121,
                }
            }
            293 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 121,
                }
            }
            294 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 122,
                }
            }
            295 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 122,
                }
            }
            296 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 122,
                }
            }
            297 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 123,
                }
            }
            298 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 124,
                }
            }
            299 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 124,
                }
            }
            300 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 125,
                }
            }
            301 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 125,
                }
            }
            302 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 126,
                }
            }
            303 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 126,
                }
            }
            304 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 127,
                }
            }
            305 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 127,
                }
            }
            306 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 128,
                }
            }
            307 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 128,
                }
            }
            308 => __state_machine::SimulatedReduce::Accept,
            309 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 130,
                }
            }
            310 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 131,
                }
            }
            _ => panic!("invalid reduction index {}", __reduce_index)
        }
    }
    pub struct LExprParser {
        _priv: (),
    }

    impl Default for LExprParser { fn default() -> Self { Self::new() } }
    impl LExprParser {
        pub fn new() -> LExprParser {
            LExprParser {
                _priv: (),
            }
        }

        #[allow(dead_code)]
        pub fn parse<
            'a,
            __TOKEN: __ToTriple<'a, >,
            __TOKENS: IntoIterator<Item=__TOKEN>,
        >(
            &self,
            module: &'a Rc<str>,
            __tokens0: __TOKENS,
        ) -> Result<L<Expr>, __lalrpop_util::ParseError<Loc, Token, LexerError<Infallible>>>
        {
            let __tokens = __tokens0.into_iter();
            let mut __tokens = __tokens.map(|t| __ToTriple::to_triple(t));
            __state_machine::Parser::drive(
                __StateMachine {
                    module,
                    __phantom: core::marker::PhantomData::<(&())>,
                },
                __tokens,
            )
        }
    }
    fn __accepts<
        'a,
    >(
        __error_state: Option<i16>,
        __states: &[i16],
        __opt_integer: Option<usize>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> bool
    {
        let mut __states = __states.to_vec();
        __states.extend(__error_state);
        loop {
            let mut __states_len = __states.len();
            let __top = __states[__states_len - 1];
            let __action = match __opt_integer {
                None => __EOF_ACTION[__top as usize],
                Some(__integer) => __action(__top, __integer),
            };
            if __action == 0 { return false; }
            if __action > 0 { return true; }
            let (__to_pop, __nt) = match __simulate_reduce(-(__action + 1), core::marker::PhantomData::<(&())>) {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop, nonterminal_produced
                } => (states_to_pop, nonterminal_produced),
                __state_machine::SimulatedReduce::Accept => return true,
            };
            __states_len -= __to_pop;
            __states.truncate(__states_len);
            let __top = __states[__states_len - 1];
            let __next_state = __goto(__top, __nt);
            __states.push(__next_state);
        }
    }
    fn __reduce<
        'a,
    >(
        module: &'a Rc<str>,
        __action: i16,
        __lookahead_start: Option<&Loc>,
        __states: &mut alloc::vec::Vec<i16>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> Option<Result<L<Expr>,__lalrpop_util::ParseError<Loc, Token, LexerError<Infallible>>>>
    {
        let (__pop_states, __nonterminal) = match __action {
            0 => {
                __reduce0(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            1 => {
                __reduce1(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            2 => {
                __reduce2(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            3 => {
                __reduce3(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            4 => {
                __reduce4(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            5 => {
                __reduce5(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            6 => {
                __reduce6(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            7 => {
                __reduce7(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            8 => {
                __reduce8(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            9 => {
                __reduce9(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            10 => {
                __reduce10(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            11 => {
                __reduce11(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            12 => {
                __reduce12(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            13 => {
                __reduce13(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            14 => {
                __reduce14(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            15 => {
                __reduce15(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            16 => {
                __reduce16(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            17 => {
                __reduce17(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            18 => {
                __reduce18(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            19 => {
                __reduce19(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            20 => {
                __reduce20(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            21 => {
                __reduce21(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            22 => {
                __reduce22(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            23 => {
                __reduce23(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            24 => {
                __reduce24(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            25 => {
                __reduce25(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            26 => {
                __reduce26(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            27 => {
                __reduce27(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            28 => {
                __reduce28(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            29 => {
                __reduce29(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            30 => {
                __reduce30(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            31 => {
                __reduce31(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            32 => {
                __reduce32(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            33 => {
                __reduce33(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            34 => {
                __reduce34(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            35 => {
                __reduce35(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            36 => {
                __reduce36(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            37 => {
                __reduce37(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            38 => {
                __reduce38(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            39 => {
                __reduce39(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            40 => {
                __reduce40(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            41 => {
                __reduce41(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            42 => {
                __reduce42(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            43 => {
                __reduce43(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            44 => {
                __reduce44(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            45 => {
                __reduce45(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            46 => {
                __reduce46(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            47 => {
                __reduce47(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            48 => {
                __reduce48(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            49 => {
                __reduce49(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            50 => {
                __reduce50(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            51 => {
                __reduce51(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            52 => {
                __reduce52(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            53 => {
                __reduce53(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            54 => {
                __reduce54(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            55 => {
                __reduce55(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            56 => {
                __reduce56(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            57 => {
                __reduce57(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            58 => {
                __reduce58(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            59 => {
                __reduce59(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            60 => {
                __reduce60(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            61 => {
                __reduce61(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            62 => {
                __reduce62(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            63 => {
                __reduce63(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            64 => {
                __reduce64(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            65 => {
                __reduce65(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            66 => {
                __reduce66(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            67 => {
                __reduce67(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            68 => {
                __reduce68(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            69 => {
                __reduce69(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            70 => {
                __reduce70(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            71 => {
                __reduce71(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            72 => {
                __reduce72(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            73 => {
                __reduce73(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            74 => {
                __reduce74(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            75 => {
                __reduce75(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            76 => {
                __reduce76(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            77 => {
                __reduce77(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            78 => {
                __reduce78(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            79 => {
                __reduce79(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            80 => {
                __reduce80(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            81 => {
                __reduce81(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            82 => {
                __reduce82(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            83 => {
                __reduce83(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            84 => {
                __reduce84(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            85 => {
                __reduce85(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            86 => {
                __reduce86(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            87 => {
                __reduce87(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            88 => {
                __reduce88(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            89 => {
                __reduce89(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            90 => {
                __reduce90(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            91 => {
                __reduce91(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            92 => {
                __reduce92(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            93 => {
                __reduce93(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            94 => {
                __reduce94(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            95 => {
                __reduce95(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            96 => {
                __reduce96(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            97 => {
                __reduce97(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            98 => {
                __reduce98(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            99 => {
                __reduce99(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            100 => {
                __reduce100(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            101 => {
                __reduce101(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            102 => {
                __reduce102(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            103 => {
                __reduce103(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            104 => {
                __reduce104(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            105 => {
                __reduce105(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            106 => {
                __reduce106(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            107 => {
                __reduce107(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            108 => {
                __reduce108(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            109 => {
                __reduce109(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            110 => {
                __reduce110(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            111 => {
                __reduce111(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            112 => {
                __reduce112(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            113 => {
                __reduce113(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            114 => {
                __reduce114(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            115 => {
                __reduce115(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            116 => {
                __reduce116(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            117 => {
                __reduce117(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            118 => {
                __reduce118(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            119 => {
                __reduce119(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            120 => {
                __reduce120(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            121 => {
                __reduce121(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            122 => {
                __reduce122(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            123 => {
                __reduce123(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            124 => {
                __reduce124(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            125 => {
                __reduce125(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            126 => {
                __reduce126(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            127 => {
                __reduce127(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            128 => {
                __reduce128(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            129 => {
                __reduce129(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            130 => {
                __reduce130(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            131 => {
                __reduce131(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            132 => {
                __reduce132(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            133 => {
                __reduce133(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            134 => {
                __reduce134(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            135 => {
                __reduce135(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            136 => {
                __reduce136(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            137 => {
                __reduce137(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            138 => {
                __reduce138(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            139 => {
                __reduce139(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            140 => {
                __reduce140(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            141 => {
                __reduce141(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            142 => {
                __reduce142(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            143 => {
                __reduce143(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            144 => {
                __reduce144(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            145 => {
                __reduce145(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            146 => {
                __reduce146(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            147 => {
                __reduce147(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            148 => {
                __reduce148(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            149 => {
                __reduce149(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            150 => {
                __reduce150(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            151 => {
                __reduce151(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            152 => {
                __reduce152(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            153 => {
                __reduce153(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            154 => {
                __reduce154(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            155 => {
                __reduce155(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            156 => {
                __reduce156(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            157 => {
                __reduce157(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            158 => {
                __reduce158(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            159 => {
                __reduce159(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            160 => {
                __reduce160(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            161 => {
                __reduce161(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            162 => {
                __reduce162(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            163 => {
                __reduce163(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            164 => {
                __reduce164(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            165 => {
                __reduce165(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            166 => {
                __reduce166(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            167 => {
                __reduce167(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            168 => {
                __reduce168(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            169 => {
                __reduce169(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            170 => {
                __reduce170(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            171 => {
                __reduce171(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            172 => {
                __reduce172(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            173 => {
                __reduce173(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            174 => {
                __reduce174(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            175 => {
                __reduce175(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            176 => {
                __reduce176(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            177 => {
                __reduce177(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            178 => {
                __reduce178(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            179 => {
                __reduce179(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            180 => {
                __reduce180(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            181 => {
                __reduce181(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            182 => {
                __reduce182(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            183 => {
                __reduce183(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            184 => {
                __reduce184(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            185 => {
                __reduce185(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            186 => {
                __reduce186(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            187 => {
                __reduce187(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            188 => {
                __reduce188(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            189 => {
                __reduce189(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            190 => {
                __reduce190(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            191 => {
                __reduce191(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            192 => {
                __reduce192(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            193 => {
                __reduce193(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            194 => {
                __reduce194(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            195 => {
                __reduce195(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            196 => {
                __reduce196(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            197 => {
                __reduce197(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            198 => {
                __reduce198(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            199 => {
                __reduce199(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            200 => {
                __reduce200(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            201 => {
                __reduce201(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            202 => {
                __reduce202(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            203 => {
                __reduce203(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            204 => {
                __reduce204(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            205 => {
                __reduce205(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            206 => {
                __reduce206(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            207 => {
                __reduce207(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            208 => {
                __reduce208(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            209 => {
                __reduce209(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            210 => {
                __reduce210(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            211 => {
                __reduce211(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            212 => {
                __reduce212(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            213 => {
                __reduce213(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            214 => {
                __reduce214(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            215 => {
                __reduce215(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            216 => {
                __reduce216(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            217 => {
                __reduce217(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            218 => {
                __reduce218(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            219 => {
                __reduce219(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            220 => {
                __reduce220(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            221 => {
                __reduce221(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            222 => {
                __reduce222(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            223 => {
                __reduce223(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            224 => {
                __reduce224(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            225 => {
                __reduce225(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            226 => {
                __reduce226(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            227 => {
                __reduce227(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            228 => {
                __reduce228(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            229 => {
                __reduce229(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            230 => {
                __reduce230(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            231 => {
                __reduce231(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            232 => {
                __reduce232(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            233 => {
                __reduce233(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            234 => {
                __reduce234(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            235 => {
                __reduce235(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            236 => {
                __reduce236(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            237 => {
                __reduce237(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            238 => {
                __reduce238(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            239 => {
                __reduce239(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            240 => {
                __reduce240(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            241 => {
                __reduce241(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            242 => {
                __reduce242(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            243 => {
                __reduce243(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            244 => {
                __reduce244(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            245 => {
                __reduce245(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            246 => {
                __reduce246(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            247 => {
                __reduce247(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            248 => {
                __reduce248(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            249 => {
                __reduce249(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            250 => {
                __reduce250(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            251 => {
                __reduce251(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            252 => {
                __reduce252(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            253 => {
                __reduce253(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            254 => {
                __reduce254(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            255 => {
                __reduce255(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            256 => {
                __reduce256(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            257 => {
                __reduce257(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            258 => {
                __reduce258(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            259 => {
                __reduce259(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            260 => {
                __reduce260(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            261 => {
                __reduce261(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            262 => {
                __reduce262(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            263 => {
                __reduce263(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            264 => {
                __reduce264(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            265 => {
                __reduce265(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            266 => {
                __reduce266(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            267 => {
                __reduce267(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            268 => {
                __reduce268(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            269 => {
                __reduce269(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            270 => {
                __reduce270(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            271 => {
                __reduce271(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            272 => {
                __reduce272(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            273 => {
                __reduce273(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            274 => {
                __reduce274(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            275 => {
                __reduce275(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            276 => {
                __reduce276(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            277 => {
                __reduce277(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            278 => {
                __reduce278(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            279 => {
                __reduce279(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            280 => {
                __reduce280(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            281 => {
                __reduce281(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            282 => {
                __reduce282(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            283 => {
                __reduce283(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            284 => {
                __reduce284(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            285 => {
                __reduce285(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            286 => {
                __reduce286(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            287 => {
                __reduce287(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            288 => {
                __reduce288(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            289 => {
                __reduce289(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            290 => {
                __reduce290(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            291 => {
                __reduce291(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            292 => {
                __reduce292(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            293 => {
                __reduce293(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            294 => {
                __reduce294(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            295 => {
                __reduce295(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            296 => {
                __reduce296(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            297 => {
                __reduce297(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            298 => {
                __reduce298(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            299 => {
                __reduce299(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            300 => {
                __reduce300(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            301 => {
                __reduce301(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            302 => {
                __reduce302(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            303 => {
                __reduce303(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            304 => {
                __reduce304(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            305 => {
                __reduce305(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            306 => {
                __reduce306(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            307 => {
                __reduce307(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            308 => {
                // __LExpr = LExpr => ActionFn(1);
                let __sym0 = __pop_Variant47(__symbols);
                let __start = __sym0.0;
                let __end = __sym0.2;
                let __nt = super::__action1::<>(module, __sym0);
                return Some(Ok(__nt));
            }
            309 => {
                __reduce309(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            310 => {
                __reduce310(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            _ => panic!("invalid action code {}", __action)
        };
        let __states_len = __states.len();
        __states.truncate(__states_len - __pop_states);
        let __state = *__states.last().unwrap();
        let __next_state = __goto(__state, __nonterminal);
        __states.push(__next_state);
        None
    }
    #[inline(never)]
    fn __symbol_type_mismatch() -> ! {
        panic!("symbol type mismatch")
    }
    fn __pop_Variant8<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (L<Expr>, Vec<L<Stmt>>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant8(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant24<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (Option<SmolStr>, L<Expr>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant24(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant26<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (Option<SmolStr>, L<Pat>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant26(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant22<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (SmolStr, Type), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant22(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant14<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (Token, L<Type>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant14(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant12<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (Token, core::option::Option<Token>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant12(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant34<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Alt, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant34(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant37<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, AssignOp, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant37(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant16<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, CallArg, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant16(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant40<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, ConstrPattern, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant40(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant41<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Constructor, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant41(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant42<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, ConstructorDecl, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant42(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant38<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Expr, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant38(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant45<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, FunSig, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant45(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant30<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<(L<SmolStr>, Vec<L<Type>>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant30(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant47<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<Expr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant47(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant44<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<FunDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant44(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant48<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<FunSig>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant48(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant46<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<ImportDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant46(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant50<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<Pat>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant50(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant19<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<SmolStr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant19(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant51<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<Stmt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant51(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant65<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<TopDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant65(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant68<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<TraitDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant68(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant2<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant2(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant72<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<TypeDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant72(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant33<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Loc, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant33(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant28<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Named<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant28(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant55<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Pat, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant55(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant64<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Stmt, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant64(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant0<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Token, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant0(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant70<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Type, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant70(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant73<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, TypeDeclRhs, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant73(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant60<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant60(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant61<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant61(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant53<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<(SmolStr, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant53(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant58<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<(Token, L<Type>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant58(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant36<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<Alt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant36(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant59<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant59(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant71<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<ConstructorDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant71(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant6<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant6(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant10<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<L<Stmt>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant10(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant67<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<L<TopDecl>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant67(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant4<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<L<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant4(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant62<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant62(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant74<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<SmolStr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant74(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant63<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<Token>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant63(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant75<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant75(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant9<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant9(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant25<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant25(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant27<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant27(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant23<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(SmolStr, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant23(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant15<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Token, L<Type>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant15(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant35<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Alt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant35(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant17<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant17(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant43<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<ConstructorDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant43(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant31<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant31(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant49<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<FunSig>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant49(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant52<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<Stmt>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant52(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant66<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<TopDecl>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant66(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant18<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant18(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant29<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant29(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant32<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Token>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant32(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant54<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant54(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant56<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant56(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant21<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<(Token, L<Type>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant21(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant13<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<(Token, core::option::Option<Token>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant13(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant39<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant39(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant69<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant69(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant20<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<L<SmolStr>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant20(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant3<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<L<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant3(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant57<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant57(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant1<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Token>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant1(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant7<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Vec<L<(L<SmolStr>, Vec<L<Type>>)>>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant7(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant11<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Vec<L<Stmt>>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant11(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant5<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Vec<L<Type>>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant5(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __reduce0<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ","? = "," => ActionFn(156);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action156::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (1, 0)
    }
    fn __reduce1<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ","? =  => ActionFn(157);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action157::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (0, 0)
    }
    fn __reduce2<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <LType>) = ":", LType => ActionFn(138);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action138::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 1)
    }
    fn __reduce3<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <LType>)? = ":", LType => ActionFn(245);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action245::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (2, 2)
    }
    fn __reduce4<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <LType>)? =  => ActionFn(137);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action137::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (0, 2)
    }
    fn __reduce5<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <Sep<LType, "+">>) = ":", Sep<LType, "+"> => ActionFn(120);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant4(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action120::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 3)
    }
    fn __reduce6<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <Sep<LType, "+">>)? = ":", Sep<LType, "+"> => ActionFn(252);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant4(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action252::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant5(__nt), __end));
        (2, 4)
    }
    fn __reduce7<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <Sep<LType, "+">>)? =  => ActionFn(119);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action119::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant5(__nt), __end));
        (0, 4)
    }
    fn __reduce8<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("[" <Sep<TyParamWithPreds, ",">> "]") = "[", Sep<TyParamWithPreds, ",">, "]" => ActionFn(146);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant6(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action146::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (3, 5)
    }
    fn __reduce9<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("[" <Sep<TyParamWithPreds, ",">> "]")? = "[", Sep<TyParamWithPreds, ",">, "]" => ActionFn(255);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant6(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action255::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (3, 6)
    }
    fn __reduce10<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("[" <Sep<TyParamWithPreds, ",">> "]")? =  => ActionFn(145);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action145::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (0, 6)
    }
    fn __reduce11<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT) = "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(130);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action130::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant8(__nt), __end));
        (7, 7)
    }
    fn __reduce12<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)* =  => ActionFn(128);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action128::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (0, 8)
    }
    fn __reduce13<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)* = ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ => ActionFn(129);
        let __sym0 = __pop_Variant9(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action129::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (1, 8)
    }
    fn __reduce14<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ = "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(260);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action260::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (7, 9)
    }
    fn __reduce15<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ = ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+, "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(261);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant10(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant9(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action261::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (8, 9)
    }
    fn __reduce16<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT) = "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(127);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant10(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action127::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (6, 10)
    }
    fn __reduce17<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT)? = "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(264);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant10(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action264::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (6, 11)
    }
    fn __reduce18<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT)? =  => ActionFn(126);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action126::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (0, 11)
    }
    fn __reduce19<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?) = "self", "," => ActionFn(241);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action241::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (2, 12)
    }
    fn __reduce20<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?) = "self" => ActionFn(242);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action242::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (1, 12)
    }
    fn __reduce21<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? = "self", "," => ActionFn(269);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action269::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (2, 13)
    }
    fn __reduce22<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? = "self" => ActionFn(270);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action270::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (1, 13)
    }
    fn __reduce23<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? =  => ActionFn(142);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action142::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (0, 13)
    }
    fn __reduce24<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",") = LowerId, ":", LType, "," => ActionFn(283);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action283::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (4, 14)
    }
    fn __reduce25<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",")* =  => ActionFn(181);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action181::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (0, 15)
    }
    fn __reduce26<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",")* = (<(<LowerId> ":" <LType>)> ",")+ => ActionFn(182);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action182::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (1, 15)
    }
    fn __reduce27<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",")+ = LowerId, ":", LType, "," => ActionFn(285);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action285::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (4, 16)
    }
    fn __reduce28<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",")+ = (<(<LowerId> ":" <LType>)> ",")+, LowerId, ":", LType, "," => ActionFn(286);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action286::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (5, 16)
    }
    fn __reduce29<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",") = CallArg, "," => ActionFn(204);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant16(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action204::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (2, 17)
    }
    fn __reduce30<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")* =  => ActionFn(202);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action202::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (0, 18)
    }
    fn __reduce31<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")* = (<CallArg> ",")+ => ActionFn(203);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action203::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (1, 18)
    }
    fn __reduce32<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")+ = CallArg, "," => ActionFn(289);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant16(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action289::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (2, 19)
    }
    fn __reduce33<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")+ = (<CallArg> ",")+, CallArg, "," => ActionFn(290);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant16(__symbols);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action290::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (3, 19)
    }
    fn __reduce34<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+") = LType, "+" => ActionFn(188);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action188::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 20)
    }
    fn __reduce35<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+")* =  => ActionFn(186);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action186::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (0, 21)
    }
    fn __reduce36<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+")* = (<LType> "+")+ => ActionFn(187);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action187::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (1, 21)
    }
    fn __reduce37<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+")+ = LType, "+" => ActionFn(293);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action293::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (2, 22)
    }
    fn __reduce38<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+")+ = (<LType> "+")+, LType, "+" => ActionFn(294);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action294::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (3, 22)
    }
    fn __reduce39<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",") = LType, "," => ActionFn(168);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action168::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 23)
    }
    fn __reduce40<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",")* =  => ActionFn(166);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action166::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (0, 24)
    }
    fn __reduce41<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",")* = (<LType> ",")+ => ActionFn(167);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action167::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (1, 24)
    }
    fn __reduce42<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",")+ = LType, "," => ActionFn(297);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action297::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (2, 25)
    }
    fn __reduce43<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",")+ = (<LType> ",")+, LType, "," => ActionFn(298);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action298::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (3, 25)
    }
    fn __reduce44<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LUpperId> ".") = LUpperId, "." => ActionFn(150);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action150::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (2, 26)
    }
    fn __reduce45<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LUpperId> ".")? = LUpperId, "." => ActionFn(301);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action301::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (2, 27)
    }
    fn __reduce46<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LUpperId> ".")? =  => ActionFn(149);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action149::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (0, 27)
    }
    fn __reduce47<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <LType>) = LowerId, ":", LType => ActionFn(140);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action140::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (3, 28)
    }
    fn __reduce48<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <LType>)? = LowerId, ":", LType => ActionFn(284);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action284::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (3, 29)
    }
    fn __reduce49<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <LType>)? =  => ActionFn(180);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action180::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (0, 29)
    }
    fn __reduce50<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE) = NamedField, NEWLINE => ActionFn(155);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action155::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (2, 30)
    }
    fn __reduce51<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE)+ = NamedField, NEWLINE => ActionFn(330);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action330::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (2, 31)
    }
    fn __reduce52<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE)+ = (<NamedField> NEWLINE)+, NamedField, NEWLINE => ActionFn(331);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant22(__symbols);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action331::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (3, 31)
    }
    fn __reduce53<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",") = ParenExpr, "," => ActionFn(199);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action199::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (2, 32)
    }
    fn __reduce54<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")* =  => ActionFn(197);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action197::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (0, 33)
    }
    fn __reduce55<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")* = (<ParenExpr> ",")+ => ActionFn(198);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action198::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (1, 33)
    }
    fn __reduce56<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")+ = ParenExpr, "," => ActionFn(332);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action332::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (2, 34)
    }
    fn __reduce57<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")+ = (<ParenExpr> ",")+, ParenExpr, "," => ActionFn(333);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant24(__symbols);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action333::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (3, 34)
    }
    fn __reduce58<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",") = PatternField, "," => ActionFn(209);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action209::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (2, 35)
    }
    fn __reduce59<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")* =  => ActionFn(207);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action207::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (0, 36)
    }
    fn __reduce60<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")* = (<PatternField> ",")+ => ActionFn(208);
        let __sym0 = __pop_Variant27(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action208::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (1, 36)
    }
    fn __reduce61<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")+ = PatternField, "," => ActionFn(336);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action336::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (2, 37)
    }
    fn __reduce62<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")+ = (<PatternField> ",")+, PatternField, "," => ActionFn(337);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant27(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action337::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (3, 37)
    }
    fn __reduce63<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",") = RecordTypeField, "," => ActionFn(173);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action173::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (2, 38)
    }
    fn __reduce64<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")* =  => ActionFn(171);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action171::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (0, 39)
    }
    fn __reduce65<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")* = (<RecordTypeField> ",")+ => ActionFn(172);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action172::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 39)
    }
    fn __reduce66<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")+ = RecordTypeField, "," => ActionFn(340);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action340::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (2, 40)
    }
    fn __reduce67<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")+ = (<RecordTypeField> ",")+, RecordTypeField, "," => ActionFn(341);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant28(__symbols);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action341::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (3, 40)
    }
    fn __reduce68<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",") = TyParamWithPreds, "," => ActionFn(178);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant30(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action178::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (2, 41)
    }
    fn __reduce69<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",")* =  => ActionFn(176);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action176::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (0, 42)
    }
    fn __reduce70<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",")* = (<TyParamWithPreds> ",")+ => ActionFn(177);
        let __sym0 = __pop_Variant31(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action177::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (1, 42)
    }
    fn __reduce71<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",")+ = TyParamWithPreds, "," => ActionFn(344);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant30(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action344::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (2, 43)
    }
    fn __reduce72<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",")+ = (<TyParamWithPreds> ",")+, TyParamWithPreds, "," => ActionFn(345);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant30(__symbols);
        let __sym0 = __pop_Variant31(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action345::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (3, 43)
    }
    fn __reduce73<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",") = UpperId, "," => ActionFn(165);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action165::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant0(__nt), __end));
        (2, 44)
    }
    fn __reduce74<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")* =  => ActionFn(163);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action163::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (0, 45)
    }
    fn __reduce75<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")* = (<UpperId> ",")+ => ActionFn(164);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action164::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 45)
    }
    fn __reduce76<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")+ = UpperId, "," => ActionFn(348);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action348::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (2, 46)
    }
    fn __reduce77<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")+ = (<UpperId> ",")+, UpperId, "," => ActionFn(349);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action349::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (3, 46)
    }
    fn __reduce78<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".") = UpperId, "." => ActionFn(214);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action214::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant0(__nt), __end));
        (2, 47)
    }
    fn __reduce79<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")* =  => ActionFn(212);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action212::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (0, 48)
    }
    fn __reduce80<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")* = (<UpperId> ".")+ => ActionFn(213);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action213::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 48)
    }
    fn __reduce81<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")+ = UpperId, "." => ActionFn(352);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action352::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (2, 49)
    }
    fn __reduce82<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")+ = (<UpperId> ".")+, UpperId, "." => ActionFn(353);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action353::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (3, 49)
    }
    fn __reduce83<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // @L =  => ActionFn(162);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action162::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant33(__nt), __end));
        (0, 50)
    }
    fn __reduce84<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // @R =  => ActionFn(161);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action161::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant33(__nt), __end));
        (0, 51)
    }
    fn __reduce85<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt = LPat, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(41);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant10(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant50(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action41::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant34(__nt), __end));
        (6, 52)
    }
    fn __reduce86<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt = LPat, ":", LStmt => ActionFn(42);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant51(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant50(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action42::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant34(__nt), __end));
        (3, 52)
    }
    fn __reduce87<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt* =  => ActionFn(131);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action131::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (0, 53)
    }
    fn __reduce88<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt* = Alt+ => ActionFn(132);
        let __sym0 = __pop_Variant35(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action132::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (1, 53)
    }
    fn __reduce89<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt+ = Alt => ActionFn(191);
        let __sym0 = __pop_Variant34(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action191::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (1, 54)
    }
    fn __reduce90<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt+ = Alt+, Alt => ActionFn(192);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant34(__symbols);
        let __sym0 = __pop_Variant35(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action192::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (2, 54)
    }
    fn __reduce91<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alts =  => ActionFn(436);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action436::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant36(__nt), __end));
        (0, 55)
    }
    fn __reduce92<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alts = Alt+ => ActionFn(437);
        let __sym0 = __pop_Variant35(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action437::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant36(__nt), __end));
        (1, 55)
    }
    fn __reduce93<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "=" => ActionFn(43);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action43::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 56)
    }
    fn __reduce94<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "+=" => ActionFn(44);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action44::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 56)
    }
    fn __reduce95<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "-=" => ActionFn(45);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action45::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 56)
    }
    fn __reduce96<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "match", LInlineExpr, ":", NEWLINE, INDENT, Alts, DEDENT => ActionFn(50);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant36(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action50::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (7, 57)
    }
    fn __reduce97<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(265);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant10(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action265::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (13, 57)
    }
    fn __reduce98<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(266);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action266::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (7, 57)
    }
    fn __reduce99<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+, "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(267);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant10(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant9(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action267::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (14, 57)
    }
    fn __reduce100<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ => ActionFn(268);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant9(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action268::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (8, 57)
    }
    fn __reduce101<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // CallArg = LowerId, "=", LExpr => ActionFn(88);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action88::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (3, 58)
    }
    fn __reduce102<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // CallArg = LExpr => ActionFn(89);
        let __sym0 = __pop_Variant47(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action89::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (1, 58)
    }
    fn __reduce103<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // CallArg? = CallArg => ActionFn(200);
        let __sym0 = __pop_Variant16(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action200::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant39(__nt), __end));
        (1, 59)
    }
    fn __reduce104<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // CallArg? =  => ActionFn(201);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action201::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant39(__nt), __end));
        (0, 59)
    }
    fn __reduce105<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstrPattern = Constructor => ActionFn(102);
        let __sym0 = __pop_Variant41(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action102::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant40(__nt), __end));
        (1, 60)
    }
    fn __reduce106<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstrPattern = Constructor, "(", Sep<PatternField, ",">, ")" => ActionFn(103);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant61(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant41(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action103::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant40(__nt), __end));
        (4, 60)
    }
    fn __reduce107<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Constructor = UpperId, ".", UpperId => ActionFn(100);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action100::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant41(__nt), __end));
        (3, 61)
    }
    fn __reduce108<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Constructor = UpperId => ActionFn(101);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action101::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant41(__nt), __end));
        (1, 61)
    }
    fn __reduce109<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, NEWLINE => ActionFn(12);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action12::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (2, 62)
    }
    fn __reduce110<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, ":", NEWLINE, INDENT, NamedFields, DEDENT => ActionFn(13);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant53(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action13::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (6, 62)
    }
    fn __reduce111<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, "(", UnnamedFields, ",", ")", NEWLINE => ActionFn(243);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant75(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action243::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (6, 62)
    }
    fn __reduce112<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, "(", UnnamedFields, ")", NEWLINE => ActionFn(244);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant75(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action244::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (5, 62)
    }
    fn __reduce113<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl+ = ConstructorDecl => ActionFn(158);
        let __sym0 = __pop_Variant42(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action158::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (1, 63)
    }
    fn __reduce114<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl+ = ConstructorDecl+, ConstructorDecl => ActionFn(159);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant42(__symbols);
        let __sym0 = __pop_Variant43(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action159::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (2, 63)
    }
    fn __reduce115<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Expr = InlineExpr => ActionFn(47);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action47::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 64)
    }
    fn __reduce116<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Expr = BlockExpr => ActionFn(48);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action48::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 64)
    }
    fn __reduce117<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunDecl = FunSig, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(396);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant10(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant45(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action396::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant44(__nt), __end));
        (6, 65)
    }
    fn __reduce118<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "prim", FunSig, NEWLINE => ActionFn(397);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant45(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action397::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant44(__nt), __end));
        (3, 65)
    }
    fn __reduce119<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(302);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant2(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant58(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action302::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (14, 66)
    }
    fn __reduce120<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(303);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant2(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant58(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action303::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (12, 66)
    }
    fn __reduce121<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(304);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant2(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant58(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action304::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (13, 66)
    }
    fn __reduce122<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(305);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant2(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant58(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action305::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (11, 66)
    }
    fn __reduce123<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(306);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant2(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant58(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action306::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (12, 66)
    }
    fn __reduce124<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(307);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant2(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant58(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action307::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (10, 66)
    }
    fn __reduce125<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(308);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant2(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant58(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action308::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (11, 66)
    }
    fn __reduce126<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(309);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant2(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant58(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action309::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (9, 66)
    }
    fn __reduce127<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(310);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant2(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant58(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action310::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (10, 66)
    }
    fn __reduce128<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(311);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant2(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant58(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action311::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (8, 66)
    }
    fn __reduce129<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(312);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant2(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant58(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action312::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (9, 66)
    }
    fn __reduce130<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(313);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant2(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant58(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action313::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (7, 66)
    }
    fn __reduce131<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(314);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant58(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action314::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (12, 66)
    }
    fn __reduce132<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(315);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant58(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action315::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (10, 66)
    }
    fn __reduce133<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(316);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant58(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action316::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (11, 66)
    }
    fn __reduce134<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(317);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant58(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action317::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (9, 66)
    }
    fn __reduce135<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(318);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant58(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action318::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (10, 66)
    }
    fn __reduce136<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(319);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant58(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action319::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (8, 66)
    }
    fn __reduce137<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(320);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant58(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action320::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (9, 66)
    }
    fn __reduce138<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(321);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant58(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action321::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (7, 66)
    }
    fn __reduce139<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(322);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant58(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action322::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (8, 66)
    }
    fn __reduce140<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(323);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant58(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action323::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (6, 66)
    }
    fn __reduce141<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(324);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant58(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action324::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (7, 66)
    }
    fn __reduce142<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(325);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant58(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action325::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (5, 66)
    }
    fn __reduce143<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ImportDecl = "import", Sep<UpperId, ".">, NEWLINE => ActionFn(398);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant63(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action398::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (3, 67)
    }
    fn __reduce144<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr = "return", LInlineExpr => ActionFn(84);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action84::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (2, 68)
    }
    fn __reduce145<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr = InlineExpr7 => ActionFn(85);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action85::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 68)
    }
    fn __reduce146<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = "self" => ActionFn(53);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action53::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce147<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = LowerId => ActionFn(54);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action54::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce148<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = UpperId => ActionFn(55);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action55::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce149<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = "(", Sep<ParenExpr, ",">, ")" => ActionFn(56);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant60(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action56::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 69)
    }
    fn __reduce150<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = IntLit => ActionFn(57);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action57::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce151<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = StringLit => ActionFn(58);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action58::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce152<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = CharLit => ActionFn(59);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action59::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce153<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = InlineExpr0, "[", LExpr, "]" => ActionFn(399);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action399::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (4, 69)
    }
    fn __reduce154<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = InlineExpr0, "(", Sep<CallArg, ",">, ")" => ActionFn(400);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant59(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action400::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (4, 69)
    }
    fn __reduce155<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = InlineExpr0, ".", LowerId => ActionFn(401);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action401::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 69)
    }
    fn __reduce156<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = InlineExpr0, ".", UpperId => ActionFn(63);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action63::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 69)
    }
    fn __reduce157<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr1 = InlineExpr1, "..", InlineExpr0 => ActionFn(402);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action402::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 70)
    }
    fn __reduce158<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr1 = InlineExpr0 => ActionFn(65);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action65::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 70)
    }
    fn __reduce159<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr2 = "!", InlineExpr2 => ActionFn(403);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant38(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action403::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (2, 71)
    }
    fn __reduce160<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr2 = InlineExpr1 => ActionFn(67);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action67::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 71)
    }
    fn __reduce161<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr3 = InlineExpr3, "*", InlineExpr2 => ActionFn(404);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action404::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 72)
    }
    fn __reduce162<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr3 = InlineExpr2 => ActionFn(69);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action69::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 72)
    }
    fn __reduce163<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr4 = InlineExpr4, "+", InlineExpr3 => ActionFn(405);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action405::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 73)
    }
    fn __reduce164<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr4 = InlineExpr4, "-", InlineExpr3 => ActionFn(406);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action406::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 73)
    }
    fn __reduce165<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr4 = InlineExpr3 => ActionFn(72);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action72::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 73)
    }
    fn __reduce166<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, "==", InlineExpr4 => ActionFn(407);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action407::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce167<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, "!=", InlineExpr4 => ActionFn(408);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action408::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce168<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, "<", InlineExpr4 => ActionFn(409);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action409::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce169<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, ">", InlineExpr4 => ActionFn(410);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action410::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce170<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, "<=", InlineExpr4 => ActionFn(411);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action411::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce171<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, ">=", InlineExpr4 => ActionFn(412);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action412::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce172<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr4 => ActionFn(79);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action79::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 74)
    }
    fn __reduce173<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr6 = InlineExpr6, "&&", InlineExpr5 => ActionFn(413);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action413::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 75)
    }
    fn __reduce174<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr6 = InlineExpr5 => ActionFn(81);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action81::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 75)
    }
    fn __reduce175<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr7 = InlineExpr7, "||", InlineExpr6 => ActionFn(414);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action414::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 76)
    }
    fn __reduce176<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr7 = InlineExpr6 => ActionFn(83);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action83::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 76)
    }
    fn __reduce177<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LBlockExpr = BlockExpr => ActionFn(415);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action415::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 77)
    }
    fn __reduce178<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LExpr = Expr => ActionFn(416);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action416::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 78)
    }
    fn __reduce179<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig = FunSig => ActionFn(417);
        let __sym0 = __pop_Variant45(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action417::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant48(__nt), __end));
        (1, 79)
    }
    fn __reduce180<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig* =  => ActionFn(116);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action116::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (0, 80)
    }
    fn __reduce181<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig* = LFunSig+ => ActionFn(117);
        let __sym0 = __pop_Variant49(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action117::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (1, 80)
    }
    fn __reduce182<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig+ = LFunSig => ActionFn(215);
        let __sym0 = __pop_Variant48(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action215::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (1, 81)
    }
    fn __reduce183<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig+ = LFunSig+, LFunSig => ActionFn(216);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant48(__symbols);
        let __sym0 = __pop_Variant49(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action216::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (2, 81)
    }
    fn __reduce184<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LInlineExpr = InlineExpr => ActionFn(418);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action418::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 82)
    }
    fn __reduce185<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LLowerId = LowerId => ActionFn(419);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action419::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (1, 83)
    }
    fn __reduce186<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LPat = Pat => ActionFn(420);
        let __sym0 = __pop_Variant55(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action420::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant50(__nt), __end));
        (1, 84)
    }
    fn __reduce187<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt = Stmt => ActionFn(421);
        let __sym0 = __pop_Variant64(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action421::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (1, 85)
    }
    fn __reduce188<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt* =  => ActionFn(133);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action133::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (0, 86)
    }
    fn __reduce189<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt* = LStmt+ => ActionFn(134);
        let __sym0 = __pop_Variant52(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action134::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (1, 86)
    }
    fn __reduce190<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt+ = LStmt => ActionFn(189);
        let __sym0 = __pop_Variant51(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action189::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (1, 87)
    }
    fn __reduce191<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt+ = LStmt+, LStmt => ActionFn(190);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant51(__symbols);
        let __sym0 = __pop_Variant52(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action190::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (2, 87)
    }
    fn __reduce192<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmts =  => ActionFn(446);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action446::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (0, 88)
    }
    fn __reduce193<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmts = LStmt+ => ActionFn(447);
        let __sym0 = __pop_Variant52(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action447::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (1, 88)
    }
    fn __reduce194<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LType = Type => ActionFn(422);
        let __sym0 = __pop_Variant70(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action422::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (1, 89)
    }
    fn __reduce195<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LType? = LType => ActionFn(184);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action184::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (1, 90)
    }
    fn __reduce196<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LType? =  => ActionFn(185);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action185::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (0, 90)
    }
    fn __reduce197<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LUpperId = UpperId => ActionFn(423);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action423::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (1, 91)
    }
    fn __reduce198<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NEWLINE* =  => ActionFn(112);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action112::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (0, 92)
    }
    fn __reduce199<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NEWLINE* = NEWLINE+ => ActionFn(113);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action113::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 92)
    }
    fn __reduce200<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NEWLINE+ = NEWLINE => ActionFn(219);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action219::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 93)
    }
    fn __reduce201<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NEWLINE+ = NEWLINE+, NEWLINE => ActionFn(220);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action220::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (2, 93)
    }
    fn __reduce202<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NamedField = LowerId, ":", Type => ActionFn(16);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant70(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action16::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (3, 94)
    }
    fn __reduce203<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NamedFields = (<NamedField> NEWLINE)+ => ActionFn(15);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action15::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant53(__nt), __end));
        (1, 95)
    }
    fn __reduce204<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ParenExpr = LowerId, "=", LExpr => ActionFn(86);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action86::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (3, 96)
    }
    fn __reduce205<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ParenExpr = LExpr => ActionFn(87);
        let __sym0 = __pop_Variant47(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action87::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 96)
    }
    fn __reduce206<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ParenExpr? = ParenExpr => ActionFn(195);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action195::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (1, 97)
    }
    fn __reduce207<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ParenExpr? =  => ActionFn(196);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action196::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (0, 97)
    }
    fn __reduce208<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat = Pat0, "|", Pat => ActionFn(424);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant55(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant55(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action424::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (3, 98)
    }
    fn __reduce209<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat = Pat0 => ActionFn(99);
        let __sym0 = __pop_Variant55(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action99::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 98)
    }
    fn __reduce210<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = LowerId => ActionFn(91);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action91::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce211<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = ConstrPattern => ActionFn(92);
        let __sym0 = __pop_Variant40(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action92::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce212<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = "(", Sep<PatternField, ",">, ")" => ActionFn(93);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant61(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action93::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (3, 99)
    }
    fn __reduce213<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = "_" => ActionFn(94);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action94::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce214<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = StringLit => ActionFn(95);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action95::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce215<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = CharLit => ActionFn(96);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action96::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce216<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = StringLit, LowerId => ActionFn(97);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action97::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (2, 99)
    }
    fn __reduce217<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // PatternField = LowerId, "=", LPat => ActionFn(104);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant50(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action104::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (3, 100)
    }
    fn __reduce218<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // PatternField = LPat => ActionFn(105);
        let __sym0 = __pop_Variant50(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action105::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 100)
    }
    fn __reduce219<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // PatternField? = PatternField => ActionFn(205);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action205::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (1, 101)
    }
    fn __reduce220<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // PatternField? =  => ActionFn(206);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action206::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (0, 101)
    }
    fn __reduce221<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField = LowerId, ":", Type => ActionFn(23);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant70(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action23::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (3, 102)
    }
    fn __reduce222<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField = Type => ActionFn(24);
        let __sym0 = __pop_Variant70(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action24::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (1, 102)
    }
    fn __reduce223<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField? = RecordTypeField => ActionFn(169);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action169::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (1, 103)
    }
    fn __reduce224<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField? =  => ActionFn(170);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action170::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (0, 103)
    }
    fn __reduce225<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <LType>), ","> = LowerId, ":", LType => ActionFn(326);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action326::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (3, 104)
    }
    fn __reduce226<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <LType>), ","> =  => ActionFn(327);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action327::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (0, 104)
    }
    fn __reduce227<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <LType>), ","> = (<(<LowerId> ":" <LType>)> ",")+, LowerId, ":", LType => ActionFn(328);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action328::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (4, 104)
    }
    fn __reduce228<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <LType>), ","> = (<(<LowerId> ":" <LType>)> ",")+ => ActionFn(329);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action329::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (1, 104)
    }
    fn __reduce229<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = CallArg => ActionFn(438);
        let __sym0 = __pop_Variant16(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action438::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (1, 105)
    }
    fn __reduce230<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> =  => ActionFn(439);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action439::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (0, 105)
    }
    fn __reduce231<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = (<CallArg> ",")+, CallArg => ActionFn(440);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant16(__symbols);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action440::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (2, 105)
    }
    fn __reduce232<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = (<CallArg> ",")+ => ActionFn(441);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action441::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (1, 105)
    }
    fn __reduce233<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, "+"> = LType => ActionFn(448);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action448::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 106)
    }
    fn __reduce234<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, "+"> =  => ActionFn(449);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action449::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (0, 106)
    }
    fn __reduce235<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, "+"> = (<LType> "+")+, LType => ActionFn(450);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action450::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 106)
    }
    fn __reduce236<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, "+"> = (<LType> "+")+ => ActionFn(451);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action451::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 106)
    }
    fn __reduce237<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, ","> = LType => ActionFn(452);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action452::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 107)
    }
    fn __reduce238<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, ","> =  => ActionFn(453);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action453::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (0, 107)
    }
    fn __reduce239<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, ","> = (<LType> ",")+, LType => ActionFn(454);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action454::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 107)
    }
    fn __reduce240<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, ","> = (<LType> ",")+ => ActionFn(455);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action455::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 107)
    }
    fn __reduce241<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = ParenExpr => ActionFn(462);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action462::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (1, 108)
    }
    fn __reduce242<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> =  => ActionFn(463);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action463::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (0, 108)
    }
    fn __reduce243<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = (<ParenExpr> ",")+, ParenExpr => ActionFn(464);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant24(__symbols);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action464::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (2, 108)
    }
    fn __reduce244<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = (<ParenExpr> ",")+ => ActionFn(465);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action465::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (1, 108)
    }
    fn __reduce245<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = PatternField => ActionFn(466);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action466::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (1, 109)
    }
    fn __reduce246<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> =  => ActionFn(467);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action467::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (0, 109)
    }
    fn __reduce247<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = (<PatternField> ",")+, PatternField => ActionFn(468);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant27(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action468::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (2, 109)
    }
    fn __reduce248<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = (<PatternField> ",")+ => ActionFn(469);
        let __sym0 = __pop_Variant27(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action469::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (1, 109)
    }
    fn __reduce249<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = RecordTypeField => ActionFn(470);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action470::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (1, 110)
    }
    fn __reduce250<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> =  => ActionFn(471);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action471::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (0, 110)
    }
    fn __reduce251<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = (<RecordTypeField> ",")+, RecordTypeField => ActionFn(472);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant28(__symbols);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action472::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (2, 110)
    }
    fn __reduce252<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = (<RecordTypeField> ",")+ => ActionFn(473);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action473::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (1, 110)
    }
    fn __reduce253<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<TyParamWithPreds, ","> = TyParamWithPreds => ActionFn(476);
        let __sym0 = __pop_Variant30(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action476::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (1, 111)
    }
    fn __reduce254<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<TyParamWithPreds, ","> =  => ActionFn(477);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action477::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (0, 111)
    }
    fn __reduce255<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<TyParamWithPreds, ","> = (<TyParamWithPreds> ",")+, TyParamWithPreds => ActionFn(478);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant30(__symbols);
        let __sym0 = __pop_Variant31(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action478::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (2, 111)
    }
    fn __reduce256<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<TyParamWithPreds, ","> = (<TyParamWithPreds> ",")+ => ActionFn(479);
        let __sym0 = __pop_Variant31(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action479::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (1, 111)
    }
    fn __reduce257<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = UpperId => ActionFn(480);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action480::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (1, 112)
    }
    fn __reduce258<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> =  => ActionFn(481);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action481::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (0, 112)
    }
    fn __reduce259<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = (<UpperId> ",")+, UpperId => ActionFn(482);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action482::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (2, 112)
    }
    fn __reduce260<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = (<UpperId> ",")+ => ActionFn(483);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action483::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (1, 112)
    }
    fn __reduce261<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = UpperId => ActionFn(484);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action484::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (1, 113)
    }
    fn __reduce262<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> =  => ActionFn(485);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action485::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (0, 113)
    }
    fn __reduce263<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = (<UpperId> ".")+, UpperId => ActionFn(486);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action486::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (2, 113)
    }
    fn __reduce264<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = (<UpperId> ".")+ => ActionFn(487);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action487::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (1, 113)
    }
    fn __reduce265<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, ":", LType, "=", LInlineExpr, NEWLINE => ActionFn(248);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant47(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant50(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action248::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (7, 114)
    }
    fn __reduce266<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, "=", LInlineExpr, NEWLINE => ActionFn(249);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant47(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant50(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action249::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (5, 114)
    }
    fn __reduce267<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, ":", LType, "=", LBlockExpr => ActionFn(250);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant47(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant50(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action250::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (6, 114)
    }
    fn __reduce268<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, "=", LBlockExpr => ActionFn(251);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant47(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant50(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action251::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (4, 114)
    }
    fn __reduce269<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = LInlineExpr, AssignOp, LExpr, NEWLINE => ActionFn(35);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant37(__symbols);
        let __sym0 = __pop_Variant47(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action35::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (4, 114)
    }
    fn __reduce270<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = InlineExpr, NEWLINE => ActionFn(425);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action425::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (2, 114)
    }
    fn __reduce271<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = BlockExpr => ActionFn(426);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action426::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (1, 114)
    }
    fn __reduce272<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "for", LowerId, "in", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(38);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant10(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant47(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action38::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (9, 114)
    }
    fn __reduce273<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "while", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(39);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action39::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (7, 114)
    }
    fn __reduce274<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = TypeDecl => ActionFn(456);
        let __sym0 = __pop_Variant72(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action456::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (1, 115)
    }
    fn __reduce275<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, TypeDecl => ActionFn(457);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant72(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action457::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (2, 115)
    }
    fn __reduce276<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = FunDecl => ActionFn(458);
        let __sym0 = __pop_Variant44(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action458::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (1, 115)
    }
    fn __reduce277<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, FunDecl => ActionFn(459);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant44(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action459::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (2, 115)
    }
    fn __reduce278<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = ImportDecl => ActionFn(460);
        let __sym0 = __pop_Variant46(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action460::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (1, 115)
    }
    fn __reduce279<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, ImportDecl => ActionFn(461);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant46(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action461::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (2, 115)
    }
    fn __reduce280<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl* =  => ActionFn(114);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action114::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant66(__nt), __end));
        (0, 116)
    }
    fn __reduce281<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl* = TopDecl+ => ActionFn(115);
        let __sym0 = __pop_Variant66(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action115::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant66(__nt), __end));
        (1, 116)
    }
    fn __reduce282<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl+ = TopDecl => ActionFn(217);
        let __sym0 = __pop_Variant65(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action217::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant66(__nt), __end));
        (1, 117)
    }
    fn __reduce283<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl+ = TopDecl+, TopDecl => ActionFn(218);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant65(__symbols);
        let __sym0 = __pop_Variant66(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action218::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant66(__nt), __end));
        (2, 117)
    }
    fn __reduce284<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecls =  => ActionFn(474);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action474::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant67(__nt), __end));
        (0, 118)
    }
    fn __reduce285<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecls = TopDecl+ => ActionFn(475);
        let __sym0 = __pop_Variant66(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action475::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant67(__nt), __end));
        (1, 118)
    }
    fn __reduce286<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TraitDecl = "trait", LUpperId, "[", UpperId, ":", Sep<LType, "+">, "]", ":", NEWLINE, INDENT => ActionFn(442);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant4(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action442::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant68(__nt), __end));
        (10, 119)
    }
    fn __reduce287<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TraitDecl = "trait", LUpperId, "[", UpperId, ":", Sep<LType, "+">, "]", ":", NEWLINE, INDENT, LFunSig+ => ActionFn(443);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant49(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant4(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action443::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant68(__nt), __end));
        (11, 119)
    }
    fn __reduce288<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TraitDecl = "trait", LUpperId, "[", UpperId, "]", ":", NEWLINE, INDENT => ActionFn(444);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action444::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant68(__nt), __end));
        (8, 119)
    }
    fn __reduce289<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TraitDecl = "trait", LUpperId, "[", UpperId, "]", ":", NEWLINE, INDENT, LFunSig+ => ActionFn(445);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant49(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action445::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant68(__nt), __end));
        (9, 119)
    }
    fn __reduce290<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TyParamWithPreds = LUpperId => ActionFn(432);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action432::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (1, 120)
    }
    fn __reduce291<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TyParamWithPreds = LUpperId, ":", Sep<LType, "+"> => ActionFn(433);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant4(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action433::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (3, 120)
    }
    fn __reduce292<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TyParamWithPreds? = TyParamWithPreds => ActionFn(174);
        let __sym0 = __pop_Variant30(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action174::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant69(__nt), __end));
        (1, 121)
    }
    fn __reduce293<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TyParamWithPreds? =  => ActionFn(175);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action175::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant69(__nt), __end));
        (0, 121)
    }
    fn __reduce294<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Type = UpperId => ActionFn(20);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action20::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant70(__nt), __end));
        (1, 122)
    }
    fn __reduce295<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Type = UpperId, "[", Sep<LType, ",">, "]" => ActionFn(21);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant4(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action21::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant70(__nt), __end));
        (4, 122)
    }
    fn __reduce296<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Type = "(", Sep<RecordTypeField, ",">, ")" => ActionFn(22);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant62(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action22::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant70(__nt), __end));
        (3, 122)
    }
    fn __reduce297<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeConstrs = ConstructorDecl+ => ActionFn(11);
        let __sym0 = __pop_Variant43(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action11::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant71(__nt), __end));
        (1, 123)
    }
    fn __reduce298<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeDecl = "type", UpperId, TypeParams, TypeDeclRhs => ActionFn(434);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant73(__symbols);
        let __sym2 = __pop_Variant74(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action434::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant72(__nt), __end));
        (4, 124)
    }
    fn __reduce299<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeDecl = "prim", "type", UpperId, TypeParams, NEWLINE => ActionFn(435);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant74(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action435::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant72(__nt), __end));
        (5, 124)
    }
    fn __reduce300<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeDeclRhs = ":", NEWLINE, INDENT, TypeConstrs, DEDENT => ActionFn(7);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant71(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action7::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant73(__nt), __end));
        (5, 125)
    }
    fn __reduce301<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeDeclRhs = ":", NEWLINE, INDENT, NamedFields, DEDENT => ActionFn(8);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant53(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action8::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant73(__nt), __end));
        (5, 125)
    }
    fn __reduce302<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeParams =  => ActionFn(9);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action9::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant74(__nt), __end));
        (0, 126)
    }
    fn __reduce303<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeParams = "[", Sep<UpperId, ",">, "]" => ActionFn(10);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant63(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action10::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant74(__nt), __end));
        (3, 126)
    }
    fn __reduce304<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // UnnamedFields = UnnamedFields, ",", Type => ActionFn(17);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant70(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant75(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action17::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant75(__nt), __end));
        (3, 127)
    }
    fn __reduce305<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // UnnamedFields = Type => ActionFn(18);
        let __sym0 = __pop_Variant70(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action18::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant75(__nt), __end));
        (1, 127)
    }
    fn __reduce306<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // UpperId? = UpperId => ActionFn(210);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action210::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (1, 128)
    }
    fn __reduce307<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // UpperId? =  => ActionFn(211);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action211::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (0, 128)
    }
    fn __reduce309<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // __LStmt = LStmt => ActionFn(0);
        let __sym0 = __pop_Variant51(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action0::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (1, 130)
    }
    fn __reduce310<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // __TopDecls = TopDecls => ActionFn(2);
        let __sym0 = __pop_Variant67(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action2::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant67(__nt), __end));
        (1, 131)
    }
}
#[allow(unused_imports)]
pub use self::__parse__LExpr::LExprParser;

#[rustfmt::skip]
#[allow(non_snake_case, non_camel_case_types, unused_mut, unused_variables, unused_imports, unused_parens, clippy::needless_lifetimes, clippy::type_complexity, clippy::needless_return, clippy::too_many_arguments, clippy::never_loop, clippy::match_single_binding, clippy::needless_raw_string_hashes)]
mod __parse__LStmt {

    use crate::ast::*;
    use crate::token::{TokenKind, Token};
    use crate::interpolation::parse_string_parts;
    use std::convert::Infallible;
    use std::rc::Rc;
    use lexgen_util::{LexerError, Loc};
    use smol_str::SmolStr;
    #[allow(unused_extern_crates)]
    extern crate lalrpop_util as __lalrpop_util;
    #[allow(unused_imports)]
    use self::__lalrpop_util::state_machine as __state_machine;
    extern crate core;
    extern crate alloc;
    use super::__ToTriple;
    #[allow(dead_code)]
    pub(crate) enum __Symbol<>
     {
        Variant0(Token),
        Variant1(core::option::Option<Token>),
        Variant2(L<Type>),
        Variant3(core::option::Option<L<Type>>),
        Variant4(Vec<L<Type>>),
        Variant5(core::option::Option<Vec<L<Type>>>),
        Variant6(Vec<L<(L<SmolStr>, Vec<L<Type>>)>>),
        Variant7(core::option::Option<Vec<L<(L<SmolStr>, Vec<L<Type>>)>>>),
        Variant8((L<Expr>, Vec<L<Stmt>>)),
        Variant9(alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>),
        Variant10(Vec<L<Stmt>>),
        Variant11(core::option::Option<Vec<L<Stmt>>>),
        Variant12((Token, core::option::Option<Token>)),
        Variant13(core::option::Option<(Token, core::option::Option<Token>)>),
        Variant14((Token, L<Type>)),
        Variant15(alloc::vec::Vec<(Token, L<Type>)>),
        Variant16(CallArg),
        Variant17(alloc::vec::Vec<CallArg>),
        Variant18(alloc::vec::Vec<L<Type>>),
        Variant19(L<SmolStr>),
        Variant20(core::option::Option<L<SmolStr>>),
        Variant21(core::option::Option<(Token, L<Type>)>),
        Variant22((SmolStr, Type)),
        Variant23(alloc::vec::Vec<(SmolStr, Type)>),
        Variant24((Option<SmolStr>, L<Expr>)),
        Variant25(alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>),
        Variant26((Option<SmolStr>, L<Pat>)),
        Variant27(alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>),
        Variant28(Named<Type>),
        Variant29(alloc::vec::Vec<Named<Type>>),
        Variant30(L<(L<SmolStr>, Vec<L<Type>>)>),
        Variant31(alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>),
        Variant32(alloc::vec::Vec<Token>),
        Variant33(Loc),
        Variant34(Alt),
        Variant35(alloc::vec::Vec<Alt>),
        Variant36(Vec<Alt>),
        Variant37(AssignOp),
        Variant38(Expr),
        Variant39(core::option::Option<CallArg>),
        Variant40(ConstrPattern),
        Variant41(Constructor),
        Variant42(ConstructorDecl),
        Variant43(alloc::vec::Vec<ConstructorDecl>),
        Variant44(L<FunDecl>),
        Variant45(FunSig),
        Variant46(L<ImportDecl>),
        Variant47(L<Expr>),
        Variant48(L<FunSig>),
        Variant49(alloc::vec::Vec<L<FunSig>>),
        Variant50(L<Pat>),
        Variant51(L<Stmt>),
        Variant52(alloc::vec::Vec<L<Stmt>>),
        Variant53(Vec<(SmolStr, Type)>),
        Variant54(core::option::Option<(Option<SmolStr>, L<Expr>)>),
        Variant55(Pat),
        Variant56(core::option::Option<(Option<SmolStr>, L<Pat>)>),
        Variant57(core::option::Option<Named<Type>>),
        Variant58(Vec<(Token, L<Type>)>),
        Variant59(Vec<CallArg>),
        Variant60(Vec<(Option<SmolStr>, L<Expr>)>),
        Variant61(Vec<(Option<SmolStr>, L<Pat>)>),
        Variant62(Vec<Named<Type>>),
        Variant63(Vec<Token>),
        Variant64(Stmt),
        Variant65(L<TopDecl>),
        Variant66(alloc::vec::Vec<L<TopDecl>>),
        Variant67(Vec<L<TopDecl>>),
        Variant68(L<TraitDecl>),
        Variant69(core::option::Option<L<(L<SmolStr>, Vec<L<Type>>)>>),
        Variant70(Type),
        Variant71(Vec<ConstructorDecl>),
        Variant72(L<TypeDecl>),
        Variant73(TypeDeclRhs),
        Variant74(Vec<SmolStr>),
        Variant75(Vec<Type>),
    }
    const __ACTION: &[i16] = &[
        // State 0
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 5, 0, 0, 0, 6, 7, 0, 8, 71, 0, 0, 9, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 1
        0, 0, 0, 0, 0, 0, 0, 79, 0, 0, 80, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 2
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 3
        3, 0, 0, 4, -243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 89, 0, 75, 76,
        // State 4
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 5
        0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 99, 0, 100, 101,
        // State 6
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 7
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 8
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 9
        3, 0, 0, 4, -231, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 109, 0, 75, 76,
        // State 10
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 11
        0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 12
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 13
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 14
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 15
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 16
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 17
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 18
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 19
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 20
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 21
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 22
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 23
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 24
        3, 0, 0, 4, -245, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 89, 0, 75, 76,
        // State 25
        0, 0, 0, 26, -247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 133, 0, 100, 101,
        // State 26
        3, 0, 0, 4, -233, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 109, 0, 75, 76,
        // State 27
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 28
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 29
        0, 0, 0, 26, -247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 133, 0, 100, 101,
        // State 30
        0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
        // State 31
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 32
        0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 99, 0, 100, 101,
        // State 33
        0, 0, 0, 26, -249, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 133, 0, 100, 101,
        // State 34
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 35
        0, 0, 0, 36, -251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 150,
        // State 36
        0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 99, 0, 100, 101,
        // State 37
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 5, 0, 0, 0, 6, 7, 0, 8, 71, 0, 0, 9, 0, 0, 0, 0, 72, -193, 0, 73, 74, 0, 75, 76,
        // State 38
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 39
        0, 0, 0, 36, -253, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 150,
        // State 40
        0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
        // State 41
        0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, -92, 0, 0, 99, 0, 100, 101,
        // State 42
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 5, 0, 0, 0, 6, 7, 0, 8, 71, 0, 0, 9, 0, 0, 0, 0, 72, -193, 0, 73, 74, 0, 75, 76,
        // State 43
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 5, 0, 0, 0, 6, 7, 0, 8, 71, 0, 0, 9, 0, 0, 0, 0, 72, -194, 0, 73, 74, 0, 75, 76,
        // State 44
        0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
        // State 45
        0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -241, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
        // State 46
        0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, -93, 0, 0, 99, 0, 100, 101,
        // State 47
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 5, 0, 0, 0, 6, 7, 0, 8, 71, 0, 0, 9, 0, 0, 0, 0, 72, -193, 0, 73, 74, 0, 75, 76,
        // State 48
        -99, 0, 0, -99, -99, 0, 0, 0, -99, 0, 0, 0, 0, -99, 0, 0, 0, 0, 0, 0, 0, -99, -99, 51, 198, 0, -99, -99, 0, 0, 0, -99, -99, 0, -99, -99, 0, 0, -99, 0, 0, 0, 0, -99, -99, 0, -99, -99, -99, -99, -99,
        // State 49
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 5, 0, 0, 0, 6, 7, 0, 8, 71, 0, 0, 9, 0, 0, 0, 0, 72, 0, 0, 73, 74, 201, 75, 76,
        // State 50
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 51
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 8, 71, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 73, 74, 0, 75, 76,
        // State 52
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 5, 0, 0, 0, 6, 7, 0, 8, 71, 0, 0, 9, 0, 0, 0, 0, 72, -193, 0, 73, 74, 0, 75, 76,
        // State 53
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 5, 0, 0, 0, 6, 7, 0, 8, 71, 0, 0, 9, 0, 0, 0, 0, 72, -193, 0, 73, 74, 0, 75, 76,
        // State 54
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 5, 0, 0, 0, 6, 7, 0, 8, 71, 0, 0, 9, 0, 0, 0, 0, 72, -193, 0, 73, 74, 0, 75, 76,
        // State 55
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 5, 0, 0, 0, 6, 7, 0, 8, 71, 0, 0, 9, 0, 0, 0, 0, 72, -193, 0, 73, 74, 0, 75, 76,
        // State 56
        3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 5, 0, 0, 0, 6, 7, 0, 8, 71, 0, 0, 9, 0, 0, 0, 0, 72, -193, 0, 73, 74, 0, 75, 76,
        // State 57
        -272, 0, 0, -272, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -272, 0, 0, 0, -272, -272, 0, 0, 0, -272, -272, 0, -272, -272, 0, 0, -272, 0, 0, 0, 0, -272, -272, 0, -272, -272, 0, -272, -272,
        // State 58
        0, 0, 0, 0, 0, 0, 0, -185, 0, 0, -185, 0, 0, 0, 0, 0, -185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
        // State 59
        0, -159, -159, 10, -159, -159, -159, -159, -159, -159, -159, 78, -159, -159, -159, -159, -159, -159, -159, -159, 11, -159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -159, 0, 0, 0, 0, 0, 0, -159, 0, 0,
        // State 60
        0, -161, -161, 0, -161, -161, -161, -161, -161, -161, -161, 0, 12, -161, -161, -161, -161, -161, -161, -161, 0, -161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -161, 0, 0, 0, 0, 0, 0, -161, 0, 0,
        // State 61
        0, -163, -163, 0, -163, -163, -163, -163, -163, -163, -163, 0, 0, -163, -163, -163, -163, -163, -163, -163, 0, -163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -163, 0, 0, 0, 0, 0, 0, -163, 0, 0,
        // State 62
        0, -166, -166, 0, -166, 13, -166, -166, -166, -166, -166, 0, 0, -166, -166, -166, -166, -166, -166, -166, 0, -166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -166, 0, 0, 0, 0, 0, 0, -166, 0, 0,
        // State 63
        0, -173, -173, 0, -173, 0, 14, -173, -173, 15, -173, 0, 0, -173, -173, -173, -173, -173, -173, -173, 0, -173, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -173, 0, 0, 0, 0, 0, 0, -173, 0, 0,
        // State 64
        0, 16, -175, 0, -175, 0, 0, -175, -175, 0, -175, 0, 0, -175, 17, 18, -175, 19, 20, 21, 0, -175, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -175, 0, 0, 0, 0, 0, 0, -175, 0, 0,
        // State 65
        0, 0, 22, 0, -177, 0, 0, -177, -177, 0, -177, 0, 0, -177, 0, 0, -177, 0, 0, 0, 0, -177, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -177, 0, 0, 0, 0, 0, 0, -177, 0, 0,
        // State 66
        0, 0, 0, 0, -146, 0, 0, -146, -146, 0, -146, 0, 0, -146, 0, 0, -146, 0, 0, 0, 0, -146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, -146, 0, 0,
        // State 67
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 68
        -188, 0, 0, -188, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -188, 0, 0, 0, -188, -188, 0, 0, 0, -188, -188, 0, -188, -188, 0, 0, -188, 0, 0, 0, 0, -188, -188, 0, -188, -188, 0, -188, -188,
        // State 69
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 0,
        // State 70
        0, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -147, 0, 0, 0, 0, 0, 0, -147, 0, 0,
        // State 71
        0, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -153, 0, 0, 0, 0, 0, 0, -153, 0, 0,
        // State 72
        0, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -151, 0, 0, 0, 0, 0, 0, -151, 0, 0,
        // State 73
        0, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -148, 0, 0, 0, 0, 0, 0, -148, 0, 0,
        // State 74
        0, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -152, 0, 0, 0, 0, 0, 0, -152, 0, 0,
        // State 75
        0, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -149, 0, 0, 0, 0, 0, 0, -149, 0, 0,
        // State 76
        -271, 0, 0, -271, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -271, 0, 0, 0, -271, -271, 0, 0, 0, -271, -271, 0, -271, -271, 0, 0, -271, 0, 0, 0, 0, -271, -271, 0, -271, -271, 0, -271, -271,
        // State 77
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 111,
        // State 78
        -95, 0, 0, -95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -95, 0, 0, 0, 0, -95, 0, -95, -95, 0, 0, 0, 0, 0, 0, 0, -95, 0, 0, -95, -95, 0, -95, -95,
        // State 79
        -96, 0, 0, -96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -96, 0, 0, 0, 0, -96, 0, -96, -96, 0, 0, 0, 0, 0, 0, 0, -96, 0, 0, -96, -96, 0, -96, -96,
        // State 80
        -94, 0, 0, -94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -94, 0, 0, 0, 0, -94, 0, -94, -94, 0, 0, 0, 0, 0, 0, 0, -94, 0, 0, -94, -94, 0, -94, -94,
        // State 81
        0, -160, -160, 0, -160, -160, -160, -160, -160, -160, -160, 0, 0, -160, -160, -160, -160, -160, -160, -160, 0, -160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -160, 0, 0, 0, 0, 0, 0, -160, 0, 0,
        // State 82
        0, 0, 0, 0, -117, 0, 0, 0, -117, 0, 0, 0, 0, -117, 0, 0, 0, 0, 0, 0, 0, -117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -117, 0, 0,
        // State 83
        0, 0, 0, 0, -179, 0, 0, 0, -179, 0, 0, 0, 0, -179, 0, 0, 0, 0, 0, 0, 0, -179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -179, 0, 0,
        // State 84
        0, 0, 0, 0, -116, 0, 0, 0, -116, 0, 0, 0, 0, -116, 0, 0, 0, 0, 0, 0, 0, -116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -116, 0, 0,
        // State 85
        0, 0, 0, 0, -206, 0, 0, 0, -206, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 86
        0, 0, 0, 0, -242, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 87
        0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 88
        0, -148, -148, -148, -148, -148, -148, 0, -148, -148, 0, -148, -148, 0, -148, -148, 28, -148, -148, -148, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 89
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 90
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 91
        0, 0, 0, 0, -212, 0, 0, 0, -212, 0, 0, 0, 0, -212, 0, 0, -212, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -212, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 92
        0, 0, 0, 30, -106, 0, 0, 0, -106, 0, 0, 0, 0, -106, 0, 0, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 93
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 94
        0, 0, 0, 0, -187, 0, 0, 0, -187, 0, 0, 0, 0, -187, 0, 0, -187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 95
        0, 0, 0, 0, -210, 0, 0, 0, -210, 0, 0, 0, 0, -210, 0, 0, -210, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 96
        0, 0, 0, 0, -214, 0, 0, 0, -214, 0, 0, 0, 0, -214, 0, 0, -214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 97
        0, 0, 0, 0, -216, 0, 0, 0, -216, 0, 0, 0, 0, -216, 0, 0, -216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 98
        0, 0, 0, 0, -211, 0, 0, 0, -211, 0, 0, 0, 0, -211, 0, 0, -211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 99
        0, 0, 0, 0, -215, 0, 0, 0, -215, 0, 0, 0, 0, -215, 0, 0, -215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -215, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0,
        // State 100
        0, 0, 0, -109, -109, 0, 0, 0, -109, 0, 0, 135, 0, -109, 0, 0, -109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 101
        0, 0, 0, 0, -185, 0, 0, -185, -185, 0, -185, 0, 0, -185, 0, 0, -185, 0, 0, 0, 0, -185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -185, 0, 0,
        // State 102
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 103
        0, 0, 0, 0, -145, 0, 0, -145, -145, 0, -145, 0, 0, -145, 0, 0, -145, 0, 0, 0, 0, -145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -145, 0, 0,
        // State 104
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 105
        0, 0, 0, 0, -230, 0, 0, 0, 139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 106
        0, 0, 0, 0, -103, 0, 0, 0, -103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 107
        0, 0, 0, 0, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 108
        0, -148, -148, -148, -148, -148, -148, 0, -148, -148, 0, -148, -148, 0, -148, -148, 35, -148, -148, -148, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 109
        0, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -156, 0, 0, 0, 0, 0, 0, -156, 0, 0,
        // State 110
        0, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -157, 0, 0, 0, 0, 0, 0, -157, 0, 0,
        // State 111
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 112
        0, -158, -158, 10, -158, -158, -158, -158, -158, -158, -158, 78, -158, -158, -158, -158, -158, -158, -158, -158, 11, -158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -158, 0, 0, 0, 0, 0, 0, -158, 0, 0,
        // State 113
        0, -162, -162, 0, -162, -162, -162, -162, -162, -162, -162, 0, 0, -162, -162, -162, -162, -162, -162, -162, 0, -162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -162, 0, 0, 0, 0, 0, 0, -162, 0, 0,
        // State 114
        0, -164, -164, 0, -164, 13, -164, -164, -164, -164, -164, 0, 0, -164, -164, -164, -164, -164, -164, -164, 0, -164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -164, 0, 0, 0, 0, 0, 0, -164, 0, 0,
        // State 115
        0, -165, -165, 0, -165, 13, -165, -165, -165, -165, -165, 0, 0, -165, -165, -165, -165, -165, -165, -165, 0, -165, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -165, 0, 0, 0, 0, 0, 0, -165, 0, 0,
        // State 116
        0, -168, -168, 0, -168, 0, 14, -168, -168, 15, -168, 0, 0, -168, -168, -168, -168, -168, -168, -168, 0, -168, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -168, 0, 0, 0, 0, 0, 0, -168, 0, 0,
        // State 117
        0, -169, -169, 0, -169, 0, 14, -169, -169, 15, -169, 0, 0, -169, -169, -169, -169, -169, -169, -169, 0, -169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -169, 0, 0, 0, 0, 0, 0, -169, 0, 0,
        // State 118
        0, -171, -171, 0, -171, 0, 14, -171, -171, 15, -171, 0, 0, -171, -171, -171, -171, -171, -171, -171, 0, -171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -171, 0, 0, 0, 0, 0, 0, -171, 0, 0,
        // State 119
        0, -167, -167, 0, -167, 0, 14, -167, -167, 15, -167, 0, 0, -167, -167, -167, -167, -167, -167, -167, 0, -167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -167, 0, 0, 0, 0, 0, 0, -167, 0, 0,
        // State 120
        0, -170, -170, 0, -170, 0, 14, -170, -170, 15, -170, 0, 0, -170, -170, -170, -170, -170, -170, -170, 0, -170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -170, 0, 0, 0, 0, 0, 0, -170, 0, 0,
        // State 121
        0, -172, -172, 0, -172, 0, 14, -172, -172, 15, -172, 0, 0, -172, -172, -172, -172, -172, -172, -172, 0, -172, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -172, 0, 0, 0, 0, 0, 0, -172, 0, 0,
        // State 122
        0, 16, -174, 0, -174, 0, 0, -174, -174, 0, -174, 0, 0, -174, 17, 18, -174, 19, 20, 21, 0, -174, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -174, 0, 0, 0, 0, 0, 0, -174, 0, 0,
        // State 123
        0, 0, 22, 0, -176, 0, 0, -176, -176, 0, -176, 0, 0, -176, 0, 0, -176, 0, 0, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -176, 0, 0, 0, 0, 0, 0, -176, 0, 0,
        // State 124
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142, 0, 0,
        // State 125
        0, 0, 0, 0, -244, 0, 0, 0, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 126
        -57, 0, 0, -57, -57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -57, 0, 0, 0, 0, -57, 0, -57, -57, 0, 0, 0, 0, 0, 0, 0, -57, 0, 0, -57, -57, 0, -57, -57,
        // State 127
        0, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -150, 0, 0, 0, 0, 0, 0, -150, 0, 0,
        // State 128
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
        // State 129
        0, 0, 0, 0, -219, 0, 0, 0, -219, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 130
        0, 0, 0, 0, -246, 0, 0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 131
        0, 0, 0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 132
        0, 0, 0, 0, -211, 0, 0, 0, -211, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 133
        0, 0, 0, 0, -217, 0, 0, 0, -217, 0, 0, 0, 0, -217, 0, 0, -217, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -217, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 134
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
        // State 135
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 159, 0, 0,
        // State 136
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
        // State 137
        0, 0, 0, 0, -232, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 138
        -33, 0, 0, -33, -33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -33, 0, 0, 0, 0, -33, 0, -33, -33, 0, 0, 0, 0, 0, 0, 0, -33, 0, 0, -33, -33, 0, -33, -33,
        // State 139
        0, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -155, 0, 0, 0, 0, 0, 0, -155, 0, 0,
        // State 140
        0, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -154, 0, 0, 0, 0, 0, 0, -154, 0, 0,
        // State 141
        -270, 0, 0, -270, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -270, 0, 0, 0, -270, -270, 0, 0, 0, -270, -270, 0, -270, -270, 0, 0, -270, 0, 0, 0, 0, -270, -270, 0, -270, -270, 0, -270, -270,
        // State 142
        -58, 0, 0, -58, -58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -58, 0, 0, 0, 0, -58, 0, -58, -58, 0, 0, 0, 0, 0, 0, 0, -58, 0, 0, -58, -58, 0, -58, -58,
        // State 143
        0, 0, 0, 0, -205, 0, 0, 0, -205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 144
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 145
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0,
        // State 146
        0, 0, 0, 0, 164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 147
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 148
        0, 0, 0, 0, 0, 0, 0, 0, -195, 0, 0, 0, 0, 0, 0, 0, -195, 0, 0, 0, 0, -195, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 149
        0, 0, 0, 0, -295, 0, 0, 0, -295, 0, 0, 0, 0, 0, 0, 0, -295, 0, 0, 0, 41, -295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 150
        -178, 0, 0, -178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -178, 0, 0, 0, -178, -178, 0, 0, 0, -178, -178, 0, -178, -178, 0, 0, -178, 0, 0, 0, 0, -178, -178, 0, -178, -178, 0, -178, -178,
        // State 151
        -269, 0, 0, -269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -269, 0, 0, 0, -269, -269, 0, 0, 0, -269, -269, 0, -269, -269, 0, 0, -269, 0, 0, 0, 0, -269, -269, 0, -269, -269, 0, -269, -269,
        // State 152
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
        // State 153
        0, 0, 0, 0, -209, 0, 0, 0, -209, 0, 0, 0, 0, -209, 0, 0, -209, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 154
        0, 0, 0, 0, -248, 0, 0, 0, 170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 155
        0, 0, 0, -62, -62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -62, 0, 0, 0, -62, 0, -62, -62,
        // State 156
        0, 0, 0, 0, -213, 0, 0, 0, -213, 0, 0, 0, 0, -213, 0, 0, -213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 157
        0, 0, 0, -108, -108, 0, 0, 0, -108, 0, 0, 0, 0, -108, 0, 0, -108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 158
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
        // State 159
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0,
        // State 160
        -34, 0, 0, -34, -34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -34, 0, 0, 0, 0, -34, 0, -34, -34, 0, 0, 0, 0, 0, 0, 0, -34, 0, 0, -34, -34, 0, -34, -34,
        // State 161
        0, 0, 0, 0, -102, 0, 0, 0, -102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 162
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
        // State 163
        0, 0, 0, 0, -107, 0, 0, 0, -107, 0, 0, 0, 0, -107, 0, 0, -107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 164
        0, 0, 0, 0, -250, 0, 0, 0, 178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 165
        0, 0, 0, 0, 179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 166
        0, 0, 0, 0, -223, 0, 0, 0, -223, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 167
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 168
        -267, 0, 0, -267, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -267, 0, 0, 0, -267, -267, 0, 0, 0, -267, -267, 0, -267, -267, 0, 0, -267, 0, 0, 0, 0, -267, -267, 0, -267, -267, 0, -267, -267,
        // State 169
        0, 0, 0, -63, -63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -63, 0, 0, 0, -63, 0, -63, -63,
        // State 170
        0, 0, 0, 0, -218, 0, 0, 0, -218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 171
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0,
        // State 172
        -191, 0, 0, -191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -191, -191, 0, 0, 0, -191, -191, 0, -191, -191, 0, 0, -191, 0, 0, 0, 0, -191, -191, 0, -191, -191, 0, -191, -191,
        // State 173
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0,
        // State 174
        -268, 0, 0, -268, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -268, 0, 0, 0, -268, -268, 0, 0, 0, -268, -268, 0, -268, -268, 0, 0, -268, 0, 0, 0, 0, -268, -268, 0, -268, -268, 0, -268, -268,
        // State 175
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
        // State 176
        0, 0, 0, 0, -252, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 177
        0, 0, 0, -67, -67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -67, 0, 0, -67,
        // State 178
        0, 0, 0, 0, -297, 0, 0, 0, -297, 0, 0, 0, 0, 0, 0, 0, -297, 0, 0, 0, 0, -297, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 179
        0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -238, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 180
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 181
        0, 0, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -90, -90, 0, 0, -90, 0, -90, -90,
        // State 182
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
        // State 183
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 184
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
        // State 185
        -192, 0, 0, -192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -192, -192, 0, 0, 0, -192, -192, 0, -192, -192, 0, 0, -192, 0, 0, 0, 0, -192, -192, 0, -192, -192, 0, -192, -192,
        // State 186
        -266, 0, 0, -266, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -266, 0, 0, 0, -266, -266, 0, 0, 0, -266, -266, 0, -266, -266, 0, 0, -266, 0, 0, 0, 0, -266, -266, 0, -266, -266, 0, -266, -266,
        // State 187
        0, 0, 0, -68, -68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -68, 0, 0, -68,
        // State 188
        0, 0, 0, 0, -222, 0, 0, 0, -222, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 189
        0, 0, 0, 0, 0, 0, 0, 0, 199, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 190
        0, 0, 0, -43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -43,
        // State 191
        0, 0, 0, 0, -296, 0, 0, 0, -296, 0, 0, 0, 0, 0, 0, 0, -296, 0, 0, 0, 0, -296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 192
        0, 0, 0, -91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -91, -91, 0, 0, -91, 0, -91, -91,
        // State 193
        -97, 0, 0, -97, -97, 0, 0, 0, -97, 0, 0, 0, 0, -97, 0, 0, 0, 0, 0, 0, 0, -97, -97, 0, 0, 0, -97, -97, 0, 0, 0, -97, -97, 0, -97, -97, 0, 0, -97, 0, 0, 0, 0, -97, -97, 0, -97, -97, -97, -97, -97,
        // State 194
        -274, 0, 0, -274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -274, 0, 0, 0, -274, -274, 0, 0, 0, -274, -274, 0, -274, -274, 0, 0, -274, 0, 0, 0, 0, -274, -274, 0, -274, -274, 0, -274, -274,
        // State 195
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
        // State 196
        -101, 0, 0, -101, -101, 0, 0, 0, -101, 0, 0, 0, 0, -101, 0, 0, 0, 0, 0, 0, 0, -101, -101, 52, 203, 0, -101, -101, 0, 0, 0, -101, -101, 0, -101, -101, 0, 0, -101, 0, 0, 0, 0, -101, -101, 0, -101, -101, -101, -101, -101,
        // State 197
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 198
        0, 0, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -44,
        // State 199
        0, 0, 0, -87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -87, -87, 0, 0, -87, 0, -87, -87,
        // State 200
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 53, 0, 0, 0, 0, 0,
        // State 201
        -273, 0, 0, -273, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -273, 0, 0, 0, -273, -273, 0, 0, 0, -273, -273, 0, -273, -273, 0, 0, -273, 0, 0, 0, 0, -273, -273, 0, -273, -273, 0, -273, -273,
        // State 202
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 207, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 203
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 208, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 204
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
        // State 205
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 206
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
        // State 207
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 213, 0, 0,
        // State 208
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0,
        // State 209
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
        // State 210
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 0, 0,
        // State 211
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 0, 0,
        // State 212
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0,
        // State 213
        0, 0, 0, -86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -86, -86, 0, 0, -86, 0, -86, -86,
        // State 214
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
        // State 215
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
        // State 216
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
        // State 217
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
        // State 218
        -98, 0, 0, -98, -98, 0, 0, 0, -98, 0, 0, 0, 0, -98, 0, 0, 0, 0, 0, 0, 0, -98, -98, 0, 0, 0, -98, -98, 0, 0, 0, -98, -98, 0, -98, -98, 0, 0, -98, 0, 0, 0, 0, -98, -98, 0, -98, -98, -98, -98, -98,
        // State 219
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
        // State 220
        -100, 0, 0, -100, -100, 0, 0, 0, -100, 0, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, -100, -100, 0, 0, 0, -100, -100, 0, 0, 0, -100, -100, 0, -100, -100, 0, 0, -100, 0, 0, 0, 0, -100, -100, 0, -100, -100, -100, -100, -100,
        // State 221
        -15, 0, 0, -15, -15, 0, 0, 0, -15, 0, 0, 0, 0, -15, 0, 0, 0, 0, 0, 0, 0, -15, -15, -15, -15, 0, -15, -15, 0, 0, 0, -15, -15, 0, -15, -15, 0, 0, -15, 0, 0, 0, 0, -15, -15, 0, -15, -15, -15, -15, -15,
        // State 222
        -16, 0, 0, -16, -16, 0, 0, 0, -16, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, 0, -16, -16, -16, -16, 0, -16, -16, 0, 0, 0, -16, -16, 0, -16, -16, 0, 0, -16, 0, 0, 0, 0, -16, -16, 0, -16, -16, -16, -16, -16,
    ];
    fn __action(state: i16, integer: usize) -> i16 {
        __ACTION[(state as usize) * 51 + integer]
    }
    const __EOF_ACTION: &[i16] = &[
        // State 0
        0,
        // State 1
        0,
        // State 2
        0,
        // State 3
        0,
        // State 4
        0,
        // State 5
        0,
        // State 6
        0,
        // State 7
        0,
        // State 8
        0,
        // State 9
        0,
        // State 10
        0,
        // State 11
        0,
        // State 12
        0,
        // State 13
        0,
        // State 14
        0,
        // State 15
        0,
        // State 16
        0,
        // State 17
        0,
        // State 18
        0,
        // State 19
        0,
        // State 20
        0,
        // State 21
        0,
        // State 22
        0,
        // State 23
        0,
        // State 24
        0,
        // State 25
        0,
        // State 26
        0,
        // State 27
        0,
        // State 28
        0,
        // State 29
        0,
        // State 30
        0,
        // State 31
        0,
        // State 32
        0,
        // State 33
        0,
        // State 34
        0,
        // State 35
        0,
        // State 36
        0,
        // State 37
        0,
        // State 38
        0,
        // State 39
        0,
        // State 40
        0,
        // State 41
        0,
        // State 42
        0,
        // State 43
        0,
        // State 44
        0,
        // State 45
        0,
        // State 46
        0,
        // State 47
        0,
        // State 48
        -99,
        // State 49
        0,
        // State 50
        0,
        // State 51
        0,
        // State 52
        0,
        // State 53
        0,
        // State 54
        0,
        // State 55
        0,
        // State 56
        0,
        // State 57
        -272,
        // State 58
        0,
        // State 59
        0,
        // State 60
        0,
        // State 61
        0,
        // State 62
        0,
        // State 63
        0,
        // State 64
        0,
        // State 65
        0,
        // State 66
        0,
        // State 67
        -310,
        // State 68
        -188,
        // State 69
        0,
        // State 70
        0,
        // State 71
        0,
        // State 72
        0,
        // State 73
        0,
        // State 74
        0,
        // State 75
        0,
        // State 76
        -271,
        // State 77
        0,
        // State 78
        0,
        // State 79
        0,
        // State 80
        0,
        // State 81
        0,
        // State 82
        0,
        // State 83
        0,
        // State 84
        0,
        // State 85
        0,
        // State 86
        0,
        // State 87
        0,
        // State 88
        0,
        // State 89
        0,
        // State 90
        0,
        // State 91
        0,
        // State 92
        0,
        // State 93
        0,
        // State 94
        0,
        // State 95
        0,
        // State 96
        0,
        // State 97
        0,
        // State 98
        0,
        // State 99
        0,
        // State 100
        0,
        // State 101
        0,
        // State 102
        0,
        // State 103
        0,
        // State 104
        0,
        // State 105
        0,
        // State 106
        0,
        // State 107
        0,
        // State 108
        0,
        // State 109
        0,
        // State 110
        0,
        // State 111
        0,
        // State 112
        0,
        // State 113
        0,
        // State 114
        0,
        // State 115
        0,
        // State 116
        0,
        // State 117
        0,
        // State 118
        0,
        // State 119
        0,
        // State 120
        0,
        // State 121
        0,
        // State 122
        0,
        // State 123
        0,
        // State 124
        0,
        // State 125
        0,
        // State 126
        0,
        // State 127
        0,
        // State 128
        0,
        // State 129
        0,
        // State 130
        0,
        // State 131
        0,
        // State 132
        0,
        // State 133
        0,
        // State 134
        0,
        // State 135
        0,
        // State 136
        0,
        // State 137
        0,
        // State 138
        0,
        // State 139
        0,
        // State 140
        0,
        // State 141
        -270,
        // State 142
        0,
        // State 143
        0,
        // State 144
        0,
        // State 145
        0,
        // State 146
        0,
        // State 147
        0,
        // State 148
        0,
        // State 149
        0,
        // State 150
        -178,
        // State 151
        -269,
        // State 152
        0,
        // State 153
        0,
        // State 154
        0,
        // State 155
        0,
        // State 156
        0,
        // State 157
        0,
        // State 158
        0,
        // State 159
        0,
        // State 160
        0,
        // State 161
        0,
        // State 162
        0,
        // State 163
        0,
        // State 164
        0,
        // State 165
        0,
        // State 166
        0,
        // State 167
        0,
        // State 168
        -267,
        // State 169
        0,
        // State 170
        0,
        // State 171
        0,
        // State 172
        0,
        // State 173
        0,
        // State 174
        -268,
        // State 175
        0,
        // State 176
        0,
        // State 177
        0,
        // State 178
        0,
        // State 179
        0,
        // State 180
        0,
        // State 181
        0,
        // State 182
        0,
        // State 183
        0,
        // State 184
        0,
        // State 185
        0,
        // State 186
        -266,
        // State 187
        0,
        // State 188
        0,
        // State 189
        0,
        // State 190
        0,
        // State 191
        0,
        // State 192
        0,
        // State 193
        -97,
        // State 194
        -274,
        // State 195
        0,
        // State 196
        -101,
        // State 197
        0,
        // State 198
        0,
        // State 199
        0,
        // State 200
        0,
        // State 201
        -273,
        // State 202
        0,
        // State 203
        0,
        // State 204
        0,
        // State 205
        0,
        // State 206
        0,
        // State 207
        0,
        // State 208
        0,
        // State 209
        0,
        // State 210
        0,
        // State 211
        0,
        // State 212
        0,
        // State 213
        0,
        // State 214
        0,
        // State 215
        0,
        // State 216
        0,
        // State 217
        0,
        // State 218
        -98,
        // State 219
        0,
        // State 220
        -100,
        // State 221
        -15,
        // State 222
        -16,
    ];
    fn __goto(state: i16, nt: usize) -> i16 {
        match nt {
            9 => 196,
            19 => 26,
            25 => 45,
            34 => 24,
            37 => 33,
            40 => 39,
            52 => match state {
                46 => 192,
                _ => 181,
            },
            54 => 46,
            55 => 182,
            56 => 23,
            57 => match state {
                3..=4 | 8..=10 | 23..=24 | 26..=28 | 34 | 50..=51 => 82,
                31 | 38 => 150,
                _ => 57,
            },
            58 => match state {
                26 => 137,
                _ => 105,
            },
            60 => 91,
            61 => 92,
            64 => 83,
            68 => match state {
                3..=4 | 8..=10 | 23..=24 | 26..=28 | 34 | 50..=51 => 84,
                6..=7 | 31 | 38 => 101,
                _ => 58,
            },
            69 => match state {
                11 => 112,
                _ => 59,
            },
            70 => 60,
            71 => match state {
                2 => 81,
                12 => 113,
                _ => 61,
            },
            72 => match state {
                13 => 114,
                14 => 115,
                _ => 62,
            },
            73 => match state {
                15 => 116,
                16 => 117,
                17 => 118,
                18 => 119,
                19 => 120,
                20 => 121,
                _ => 63,
            },
            74 => match state {
                21 => 122,
                _ => 64,
            },
            75 => match state {
                22 => 123,
                _ => 65,
            },
            76 => 66,
            77 => match state {
                38 => 174,
                _ => 151,
            },
            78 => match state {
                4 => 90,
                8 => 104,
                9 | 26 => 106,
                10 => 111,
                23 => 124,
                27 => 143,
                28 => 144,
                34 => 161,
                50 => 203,
                51 => 205,
                _ => 85,
            },
            82 => match state {
                6 => 102,
                7 => 103,
                31 => 152,
                38 => 175,
                _ => 1,
            },
            84 => match state {
                5 => 93,
                36 => 170,
                41 | 46 => 183,
                _ => 129,
            },
            85 => match state {
                0 => 67,
                43 => 185,
                49 => 199,
                _ => 172,
            },
            87 => 43,
            88 => match state {
                42 => 184,
                47 => 195,
                52 => 209,
                53 => 215,
                54 => 216,
                55 => 217,
                56 => 219,
                _ => 173,
            },
            89 => match state {
                40 => 179,
                45 => 189,
                _ => 147,
            },
            96 => match state {
                24 => 125,
                _ => 86,
            },
            98 => match state {
                32 => 153,
                _ => 94,
            },
            99 => 95,
            100 => match state {
                33 => 154,
                _ => 130,
            },
            102 => match state {
                39 => 176,
                _ => 164,
            },
            105 => 107,
            107 => 180,
            108 => 87,
            109 => match state {
                29 => 146,
                _ => 131,
            },
            110 => 165,
            114 => 68,
            122 => match state {
                35 | 39 => 166,
                44 => 188,
                _ => 148,
            },
            _ => 0,
        }
    }
    const __TERMINAL: &[&str] = &[
        r###""!""###,
        r###""!=""###,
        r###""&&""###,
        r###""(""###,
        r###"")""###,
        r###""*""###,
        r###""+""###,
        r###""+=""###,
        r###"",""###,
        r###""-""###,
        r###""-=""###,
        r###"".""###,
        r###""..""###,
        r###"":""###,
        r###""<""###,
        r###""<=""###,
        r###""=""###,
        r###""==""###,
        r###"">""###,
        r###"">=""###,
        r###""[""###,
        r###""]""###,
        r###""_""###,
        r###""elif""###,
        r###""else""###,
        r###""fn""###,
        r###""for""###,
        r###""if""###,
        r###""impl""###,
        r###""import""###,
        r###""in""###,
        r###""let""###,
        r###""match""###,
        r###""prim""###,
        r###""return""###,
        r###""self""###,
        r###""trait""###,
        r###""type""###,
        r###""while""###,
        r###""{""###,
        r###""|""###,
        r###""||""###,
        r###""}""###,
        r###"CharLit"###,
        r###"DEDENT"###,
        r###"INDENT"###,
        r###"IntLit"###,
        r###"LowerId"###,
        r###"NEWLINE"###,
        r###"StringLit"###,
        r###"UpperId"###,
    ];
    fn __expected_tokens(__state: i16) -> alloc::vec::Vec<alloc::string::String> {
        __TERMINAL.iter().enumerate().filter_map(|(index, terminal)| {
            let next_state = __action(__state, index);
            if next_state == 0 {
                None
            } else {
                Some(alloc::string::ToString::to_string(terminal))
            }
        }).collect()
    }
    fn __expected_tokens_from_states<
        'a,
    >(
        __states: &[i16],
        _: core::marker::PhantomData<(&'a ())>,
    ) -> alloc::vec::Vec<alloc::string::String>
    {
        __TERMINAL.iter().enumerate().filter_map(|(index, terminal)| {
            if __accepts(None, __states, Some(index), core::marker::PhantomData::<(&())>) {
                Some(alloc::string::ToString::to_string(terminal))
            } else {
                None
            }
        }).collect()
    }
    struct __StateMachine<'a>
    where 
    {
        module: &'a Rc<str>,
        __phantom: core::marker::PhantomData<(&'a ())>,
    }
    impl<'a> __state_machine::ParserDefinition for __StateMachine<'a>
    where 
    {
        type Location = Loc;
        type Error = LexerError<Infallible>;
        type Token = Token;
        type TokenIndex = usize;
        type Symbol = __Symbol<>;
        type Success = L<Stmt>;
        type StateIndex = i16;
        type Action = i16;
        type ReduceIndex = i16;
        type NonterminalIndex = usize;

        #[inline]
        fn start_location(&self) -> Self::Location {
              Default::default()
        }

        #[inline]
        fn start_state(&self) -> Self::StateIndex {
              0
        }

        #[inline]
        fn token_to_index(&self, token: &Self::Token) -> Option<usize> {
            __token_to_integer(token, core::marker::PhantomData::<(&())>)
        }

        #[inline]
        fn action(&self, state: i16, integer: usize) -> i16 {
            __action(state, integer)
        }

        #[inline]
        fn error_action(&self, state: i16) -> i16 {
            __action(state, 51 - 1)
        }

        #[inline]
        fn eof_action(&self, state: i16) -> i16 {
            __EOF_ACTION[state as usize]
        }

        #[inline]
        fn goto(&self, state: i16, nt: usize) -> i16 {
            __goto(state, nt)
        }

        fn token_to_symbol(&self, token_index: usize, token: Self::Token) -> Self::Symbol {
            __token_to_symbol(token_index, token, core::marker::PhantomData::<(&())>)
        }

        fn expected_tokens(&self, state: i16) -> alloc::vec::Vec<alloc::string::String> {
            __expected_tokens(state)
        }

        fn expected_tokens_from_states(&self, states: &[i16]) -> alloc::vec::Vec<alloc::string::String> {
            __expected_tokens_from_states(states, core::marker::PhantomData::<(&())>)
        }

        #[inline]
        fn uses_error_recovery(&self) -> bool {
            false
        }

        #[inline]
        fn error_recovery_symbol(
            &self,
            recovery: __state_machine::ErrorRecovery<Self>,
        ) -> Self::Symbol {
            panic!("error recovery not enabled for this grammar")
        }

        fn reduce(
            &mut self,
            action: i16,
            start_location: Option<&Self::Location>,
            states: &mut alloc::vec::Vec<i16>,
            symbols: &mut alloc::vec::Vec<__state_machine::SymbolTriple<Self>>,
        ) -> Option<__state_machine::ParseResult<Self>> {
            __reduce(
                self.module,
                action,
                start_location,
                states,
                symbols,
                core::marker::PhantomData::<(&())>,
            )
        }

        fn simulate_reduce(&self, action: i16) -> __state_machine::SimulatedReduce<Self> {
            __simulate_reduce(action, core::marker::PhantomData::<(&())>)
        }
    }
    fn __token_to_integer<
        'a,
    >(
        __token: &Token,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> Option<usize>
    {
        match *__token {
            Token { kind: TokenKind::Exclamation, .. } if true => Some(0),
            Token { kind: TokenKind::ExclamationEq, .. } if true => Some(1),
            Token { kind: TokenKind::AmpAmp, .. } if true => Some(2),
            Token { kind: TokenKind::LParen, .. } if true => Some(3),
            Token { kind: TokenKind::RParen, .. } if true => Some(4),
            Token { kind: TokenKind::Star, .. } if true => Some(5),
            Token { kind: TokenKind::Plus, .. } if true => Some(6),
            Token { kind: TokenKind::PlusEq, .. } if true => Some(7),
            Token { kind: TokenKind::Comma, .. } if true => Some(8),
            Token { kind: TokenKind::Minus, .. } if true => Some(9),
            Token { kind: TokenKind::MinusEq, .. } if true => Some(10),
            Token { kind: TokenKind::Dot, .. } if true => Some(11),
            Token { kind: TokenKind::DotDot, .. } if true => Some(12),
            Token { kind: TokenKind::Colon, .. } if true => Some(13),
            Token { kind: TokenKind::LAngle, .. } if true => Some(14),
            Token { kind: TokenKind::LAngleEq, .. } if true => Some(15),
            Token { kind: TokenKind::Eq, .. } if true => Some(16),
            Token { kind: TokenKind::EqEq, .. } if true => Some(17),
            Token { kind: TokenKind::RAngle, .. } if true => Some(18),
            Token { kind: TokenKind::RAngleEq, .. } if true => Some(19),
            Token { kind: TokenKind::LBracket, .. } if true => Some(20),
            Token { kind: TokenKind::RBracket, .. } if true => Some(21),
            Token { kind: TokenKind::Underscore, .. } if true => Some(22),
            Token { kind: TokenKind::Elif, .. } if true => Some(23),
            Token { kind: TokenKind::Else, .. } if true => Some(24),
            Token { kind: TokenKind::Fn, .. } if true => Some(25),
            Token { kind: TokenKind::For, .. } if true => Some(26),
            Token { kind: TokenKind::If, .. } if true => Some(27),
            Token { kind: TokenKind::Impl, .. } if true => Some(28),
            Token { kind: TokenKind::Import, .. } if true => Some(29),
            Token { kind: TokenKind::In, .. } if true => Some(30),
            Token { kind: TokenKind::Let, .. } if true => Some(31),
            Token { kind: TokenKind::Match, .. } if true => Some(32),
            Token { kind: TokenKind::Prim, .. } if true => Some(33),
            Token { kind: TokenKind::Return, .. } if true => Some(34),
            Token { kind: TokenKind::Self_, .. } if true => Some(35),
            Token { kind: TokenKind::Trait, .. } if true => Some(36),
            Token { kind: TokenKind::Type, .. } if true => Some(37),
            Token { kind: TokenKind::While, .. } if true => Some(38),
            Token { kind: TokenKind::LBrace, .. } if true => Some(39),
            Token { kind: TokenKind::Pipe, .. } if true => Some(40),
            Token { kind: TokenKind::PipePipe, .. } if true => Some(41),
            Token { kind: TokenKind::RBrace, .. } if true => Some(42),
            Token { kind: TokenKind::Char, .. } if true => Some(43),
            Token { kind: TokenKind::Dedent, .. } if true => Some(44),
            Token { kind: TokenKind::Indent, .. } if true => Some(45),
            Token { kind: TokenKind::Int, .. } if true => Some(46),
            Token { kind: TokenKind::LowerId, .. } if true => Some(47),
            Token { kind: TokenKind::Newline, .. } if true => Some(48),
            Token { kind: TokenKind::String, .. } if true => Some(49),
            Token { kind: TokenKind::UpperId, .. } if true => Some(50),
            _ => None,
        }
    }
    fn __token_to_symbol<
        'a,
    >(
        __token_index: usize,
        __token: Token,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> __Symbol<>
    {
        #[allow(clippy::manual_range_patterns)]match __token_index {
            0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 => __Symbol::Variant0(__token),
            _ => unreachable!(),
        }
    }
    fn __simulate_reduce<
        'a,
    >(
        __reduce_index: i16,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> __state_machine::SimulatedReduce<__StateMachine<'a>>
    {
        match __reduce_index {
            0 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 0,
                }
            }
            1 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 0,
                }
            }
            2 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 1,
                }
            }
            3 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 2,
                }
            }
            4 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 2,
                }
            }
            5 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 3,
                }
            }
            6 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 4,
                }
            }
            7 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 4,
                }
            }
            8 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 5,
                }
            }
            9 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 6,
                }
            }
            10 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 6,
                }
            }
            11 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 7,
                }
            }
            12 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 8,
                }
            }
            13 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 8,
                }
            }
            14 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 9,
                }
            }
            15 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 9,
                }
            }
            16 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 10,
                }
            }
            17 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 11,
                }
            }
            18 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 11,
                }
            }
            19 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 12,
                }
            }
            20 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 12,
                }
            }
            21 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 13,
                }
            }
            22 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 13,
                }
            }
            23 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 13,
                }
            }
            24 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 14,
                }
            }
            25 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 15,
                }
            }
            26 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 15,
                }
            }
            27 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 16,
                }
            }
            28 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 16,
                }
            }
            29 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 17,
                }
            }
            30 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 18,
                }
            }
            31 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 18,
                }
            }
            32 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 19,
                }
            }
            33 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 19,
                }
            }
            34 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 20,
                }
            }
            35 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 21,
                }
            }
            36 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 21,
                }
            }
            37 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 22,
                }
            }
            38 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 22,
                }
            }
            39 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 23,
                }
            }
            40 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 24,
                }
            }
            41 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 24,
                }
            }
            42 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 25,
                }
            }
            43 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 25,
                }
            }
            44 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 26,
                }
            }
            45 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 27,
                }
            }
            46 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 27,
                }
            }
            47 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 28,
                }
            }
            48 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 29,
                }
            }
            49 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 29,
                }
            }
            50 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 30,
                }
            }
            51 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 31,
                }
            }
            52 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 31,
                }
            }
            53 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 32,
                }
            }
            54 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 33,
                }
            }
            55 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 33,
                }
            }
            56 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 34,
                }
            }
            57 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 34,
                }
            }
            58 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 35,
                }
            }
            59 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 36,
                }
            }
            60 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 36,
                }
            }
            61 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 37,
                }
            }
            62 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 37,
                }
            }
            63 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 38,
                }
            }
            64 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 39,
                }
            }
            65 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 39,
                }
            }
            66 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 40,
                }
            }
            67 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 40,
                }
            }
            68 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 41,
                }
            }
            69 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 42,
                }
            }
            70 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 42,
                }
            }
            71 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 43,
                }
            }
            72 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 43,
                }
            }
            73 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 44,
                }
            }
            74 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 45,
                }
            }
            75 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 45,
                }
            }
            76 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 46,
                }
            }
            77 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 46,
                }
            }
            78 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 47,
                }
            }
            79 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 48,
                }
            }
            80 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 48,
                }
            }
            81 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 49,
                }
            }
            82 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 49,
                }
            }
            83 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 50,
                }
            }
            84 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 51,
                }
            }
            85 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 52,
                }
            }
            86 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 52,
                }
            }
            87 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 53,
                }
            }
            88 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 53,
                }
            }
            89 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 54,
                }
            }
            90 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 54,
                }
            }
            91 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 55,
                }
            }
            92 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            93 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 56,
                }
            }
            94 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 56,
                }
            }
            95 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 56,
                }
            }
            96 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 57,
                }
            }
            97 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 57,
                }
            }
            98 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 57,
                }
            }
            99 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 57,
                }
            }
            100 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 57,
                }
            }
            101 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 58,
                }
            }
            102 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 58,
                }
            }
            103 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 59,
                }
            }
            104 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 59,
                }
            }
            105 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 60,
                }
            }
            106 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 60,
                }
            }
            107 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 61,
                }
            }
            108 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 61,
                }
            }
            109 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 62,
                }
            }
            110 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 62,
                }
            }
            111 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 62,
                }
            }
            112 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 62,
                }
            }
            113 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 63,
                }
            }
            114 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 63,
                }
            }
            115 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 64,
                }
            }
            116 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 64,
                }
            }
            117 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 65,
                }
            }
            118 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 65,
                }
            }
            119 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 66,
                }
            }
            120 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 66,
                }
            }
            121 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 66,
                }
            }
            122 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 66,
                }
            }
            123 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 66,
                }
            }
            124 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 66,
                }
            }
            125 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 66,
                }
            }
            126 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 66,
                }
            }
            127 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 66,
                }
            }
            128 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 66,
                }
            }
            129 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 66,
                }
            }
            130 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 66,
                }
            }
            131 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 66,
                }
            }
            132 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 66,
                }
            }
            133 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 66,
                }
            }
            134 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 66,
                }
            }
            135 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 66,
                }
            }
            136 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 66,
                }
            }
            137 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 66,
                }
            }
            138 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 66,
                }
            }
            139 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 66,
                }
            }
            140 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 66,
                }
            }
            141 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 66,
                }
            }
            142 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 66,
                }
            }
            143 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 67,
                }
            }
            144 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 68,
                }
            }
            145 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 68,
                }
            }
            146 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            147 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            148 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            149 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 69,
                }
            }
            150 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            151 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            152 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            153 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 69,
                }
            }
            154 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 69,
                }
            }
            155 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 69,
                }
            }
            156 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 69,
                }
            }
            157 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 70,
                }
            }
            158 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 70,
                }
            }
            159 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 71,
                }
            }
            160 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 71,
                }
            }
            161 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 72,
                }
            }
            162 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 72,
                }
            }
            163 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 73,
                }
            }
            164 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 73,
                }
            }
            165 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 73,
                }
            }
            166 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            167 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            168 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            169 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            170 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            171 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            172 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 74,
                }
            }
            173 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 75,
                }
            }
            174 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 75,
                }
            }
            175 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 76,
                }
            }
            176 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 76,
                }
            }
            177 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 77,
                }
            }
            178 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 78,
                }
            }
            179 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 79,
                }
            }
            180 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 80,
                }
            }
            181 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 80,
                }
            }
            182 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 81,
                }
            }
            183 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 81,
                }
            }
            184 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 82,
                }
            }
            185 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 83,
                }
            }
            186 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 84,
                }
            }
            187 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 85,
                }
            }
            188 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 86,
                }
            }
            189 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 86,
                }
            }
            190 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 87,
                }
            }
            191 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 87,
                }
            }
            192 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 88,
                }
            }
            193 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 88,
                }
            }
            194 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 89,
                }
            }
            195 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 90,
                }
            }
            196 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 90,
                }
            }
            197 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 91,
                }
            }
            198 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 92,
                }
            }
            199 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 92,
                }
            }
            200 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 93,
                }
            }
            201 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 93,
                }
            }
            202 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 94,
                }
            }
            203 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 95,
                }
            }
            204 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 96,
                }
            }
            205 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 96,
                }
            }
            206 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 97,
                }
            }
            207 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 97,
                }
            }
            208 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 98,
                }
            }
            209 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 98,
                }
            }
            210 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            211 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            212 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 99,
                }
            }
            213 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            214 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            215 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            216 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 99,
                }
            }
            217 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 100,
                }
            }
            218 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 100,
                }
            }
            219 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 101,
                }
            }
            220 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 101,
                }
            }
            221 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 102,
                }
            }
            222 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 102,
                }
            }
            223 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 103,
                }
            }
            224 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 103,
                }
            }
            225 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 104,
                }
            }
            226 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 104,
                }
            }
            227 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 104,
                }
            }
            228 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 104,
                }
            }
            229 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 105,
                }
            }
            230 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 105,
                }
            }
            231 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 105,
                }
            }
            232 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 105,
                }
            }
            233 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 106,
                }
            }
            234 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 106,
                }
            }
            235 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 106,
                }
            }
            236 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 106,
                }
            }
            237 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 107,
                }
            }
            238 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 107,
                }
            }
            239 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 107,
                }
            }
            240 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 107,
                }
            }
            241 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 108,
                }
            }
            242 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 108,
                }
            }
            243 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 108,
                }
            }
            244 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 108,
                }
            }
            245 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 109,
                }
            }
            246 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 109,
                }
            }
            247 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 109,
                }
            }
            248 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 109,
                }
            }
            249 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 110,
                }
            }
            250 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 110,
                }
            }
            251 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 110,
                }
            }
            252 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 110,
                }
            }
            253 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 111,
                }
            }
            254 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 111,
                }
            }
            255 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 111,
                }
            }
            256 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 111,
                }
            }
            257 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 112,
                }
            }
            258 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 112,
                }
            }
            259 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 112,
                }
            }
            260 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 112,
                }
            }
            261 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 113,
                }
            }
            262 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 113,
                }
            }
            263 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 113,
                }
            }
            264 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 113,
                }
            }
            265 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 114,
                }
            }
            266 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 114,
                }
            }
            267 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 114,
                }
            }
            268 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 114,
                }
            }
            269 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 114,
                }
            }
            270 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 114,
                }
            }
            271 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 114,
                }
            }
            272 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 114,
                }
            }
            273 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 114,
                }
            }
            274 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 115,
                }
            }
            275 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 115,
                }
            }
            276 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 115,
                }
            }
            277 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 115,
                }
            }
            278 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 115,
                }
            }
            279 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 115,
                }
            }
            280 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 116,
                }
            }
            281 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 116,
                }
            }
            282 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 117,
                }
            }
            283 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 117,
                }
            }
            284 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 118,
                }
            }
            285 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 118,
                }
            }
            286 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 119,
                }
            }
            287 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 119,
                }
            }
            288 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 119,
                }
            }
            289 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 119,
                }
            }
            290 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 120,
                }
            }
            291 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 120,
                }
            }
            292 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 121,
                }
            }
            293 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 121,
                }
            }
            294 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 122,
                }
            }
            295 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 122,
                }
            }
            296 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 122,
                }
            }
            297 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 123,
                }
            }
            298 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 124,
                }
            }
            299 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 124,
                }
            }
            300 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 125,
                }
            }
            301 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 125,
                }
            }
            302 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 126,
                }
            }
            303 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 126,
                }
            }
            304 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 127,
                }
            }
            305 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 127,
                }
            }
            306 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 128,
                }
            }
            307 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 128,
                }
            }
            308 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 129,
                }
            }
            309 => __state_machine::SimulatedReduce::Accept,
            310 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 131,
                }
            }
            _ => panic!("invalid reduction index {}", __reduce_index)
        }
    }
    pub struct LStmtParser {
        _priv: (),
    }

    impl Default for LStmtParser { fn default() -> Self { Self::new() } }
    impl LStmtParser {
        pub fn new() -> LStmtParser {
            LStmtParser {
                _priv: (),
            }
        }

        #[allow(dead_code)]
        pub fn parse<
            'a,
            __TOKEN: __ToTriple<'a, >,
            __TOKENS: IntoIterator<Item=__TOKEN>,
        >(
            &self,
            module: &'a Rc<str>,
            __tokens0: __TOKENS,
        ) -> Result<L<Stmt>, __lalrpop_util::ParseError<Loc, Token, LexerError<Infallible>>>
        {
            let __tokens = __tokens0.into_iter();
            let mut __tokens = __tokens.map(|t| __ToTriple::to_triple(t));
            __state_machine::Parser::drive(
                __StateMachine {
                    module,
                    __phantom: core::marker::PhantomData::<(&())>,
                },
                __tokens,
            )
        }
    }
    fn __accepts<
        'a,
    >(
        __error_state: Option<i16>,
        __states: &[i16],
        __opt_integer: Option<usize>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> bool
    {
        let mut __states = __states.to_vec();
        __states.extend(__error_state);
        loop {
            let mut __states_len = __states.len();
            let __top = __states[__states_len - 1];
            let __action = match __opt_integer {
                None => __EOF_ACTION[__top as usize],
                Some(__integer) => __action(__top, __integer),
            };
            if __action == 0 { return false; }
            if __action > 0 { return true; }
            let (__to_pop, __nt) = match __simulate_reduce(-(__action + 1), core::marker::PhantomData::<(&())>) {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop, nonterminal_produced
                } => (states_to_pop, nonterminal_produced),
                __state_machine::SimulatedReduce::Accept => return true,
            };
            __states_len -= __to_pop;
            __states.truncate(__states_len);
            let __top = __states[__states_len - 1];
            let __next_state = __goto(__top, __nt);
            __states.push(__next_state);
        }
    }
    fn __reduce<
        'a,
    >(
        module: &'a Rc<str>,
        __action: i16,
        __lookahead_start: Option<&Loc>,
        __states: &mut alloc::vec::Vec<i16>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> Option<Result<L<Stmt>,__lalrpop_util::ParseError<Loc, Token, LexerError<Infallible>>>>
    {
        let (__pop_states, __nonterminal) = match __action {
            0 => {
                __reduce0(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            1 => {
                __reduce1(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            2 => {
                __reduce2(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            3 => {
                __reduce3(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            4 => {
                __reduce4(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            5 => {
                __reduce5(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            6 => {
                __reduce6(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            7 => {
                __reduce7(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            8 => {
                __reduce8(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            9 => {
                __reduce9(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            10 => {
                __reduce10(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            11 => {
                __reduce11(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            12 => {
                __reduce12(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            13 => {
                __reduce13(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            14 => {
                __reduce14(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            15 => {
                __reduce15(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            16 => {
                __reduce16(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            17 => {
                __reduce17(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            18 => {
                __reduce18(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            19 => {
                __reduce19(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            20 => {
                __reduce20(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            21 => {
                __reduce21(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            22 => {
                __reduce22(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            23 => {
                __reduce23(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            24 => {
                __reduce24(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            25 => {
                __reduce25(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            26 => {
                __reduce26(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            27 => {
                __reduce27(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            28 => {
                __reduce28(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            29 => {
                __reduce29(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            30 => {
                __reduce30(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            31 => {
                __reduce31(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            32 => {
                __reduce32(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            33 => {
                __reduce33(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            34 => {
                __reduce34(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            35 => {
                __reduce35(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            36 => {
                __reduce36(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            37 => {
                __reduce37(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            38 => {
                __reduce38(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            39 => {
                __reduce39(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            40 => {
                __reduce40(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            41 => {
                __reduce41(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            42 => {
                __reduce42(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            43 => {
                __reduce43(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            44 => {
                __reduce44(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            45 => {
                __reduce45(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            46 => {
                __reduce46(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            47 => {
                __reduce47(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            48 => {
                __reduce48(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            49 => {
                __reduce49(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            50 => {
                __reduce50(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            51 => {
                __reduce51(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            52 => {
                __reduce52(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            53 => {
                __reduce53(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            54 => {
                __reduce54(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            55 => {
                __reduce55(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            56 => {
                __reduce56(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            57 => {
                __reduce57(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            58 => {
                __reduce58(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            59 => {
                __reduce59(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            60 => {
                __reduce60(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            61 => {
                __reduce61(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            62 => {
                __reduce62(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            63 => {
                __reduce63(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            64 => {
                __reduce64(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            65 => {
                __reduce65(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            66 => {
                __reduce66(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            67 => {
                __reduce67(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            68 => {
                __reduce68(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            69 => {
                __reduce69(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            70 => {
                __reduce70(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            71 => {
                __reduce71(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            72 => {
                __reduce72(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            73 => {
                __reduce73(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            74 => {
                __reduce74(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            75 => {
                __reduce75(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            76 => {
                __reduce76(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            77 => {
                __reduce77(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            78 => {
                __reduce78(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            79 => {
                __reduce79(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            80 => {
                __reduce80(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            81 => {
                __reduce81(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            82 => {
                __reduce82(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            83 => {
                __reduce83(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            84 => {
                __reduce84(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            85 => {
                __reduce85(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            86 => {
                __reduce86(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            87 => {
                __reduce87(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            88 => {
                __reduce88(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            89 => {
                __reduce89(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            90 => {
                __reduce90(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            91 => {
                __reduce91(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            92 => {
                __reduce92(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            93 => {
                __reduce93(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            94 => {
                __reduce94(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            95 => {
                __reduce95(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            96 => {
                __reduce96(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            97 => {
                __reduce97(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            98 => {
                __reduce98(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            99 => {
                __reduce99(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            100 => {
                __reduce100(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            101 => {
                __reduce101(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            102 => {
                __reduce102(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            103 => {
                __reduce103(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            104 => {
                __reduce104(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            105 => {
                __reduce105(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            106 => {
                __reduce106(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            107 => {
                __reduce107(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            108 => {
                __reduce108(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            109 => {
                __reduce109(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            110 => {
                __reduce110(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            111 => {
                __reduce111(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            112 => {
                __reduce112(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            113 => {
                __reduce113(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            114 => {
                __reduce114(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            115 => {
                __reduce115(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            116 => {
                __reduce116(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            117 => {
                __reduce117(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            118 => {
                __reduce118(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            119 => {
                __reduce119(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            120 => {
                __reduce120(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            121 => {
                __reduce121(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            122 => {
                __reduce122(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            123 => {
                __reduce123(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            124 => {
                __reduce124(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            125 => {
                __reduce125(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            126 => {
                __reduce126(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            127 => {
                __reduce127(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            128 => {
                __reduce128(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            129 => {
                __reduce129(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            130 => {
                __reduce130(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            131 => {
                __reduce131(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            132 => {
                __reduce132(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            133 => {
                __reduce133(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            134 => {
                __reduce134(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            135 => {
                __reduce135(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            136 => {
                __reduce136(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            137 => {
                __reduce137(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            138 => {
                __reduce138(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            139 => {
                __reduce139(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            140 => {
                __reduce140(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            141 => {
                __reduce141(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            142 => {
                __reduce142(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            143 => {
                __reduce143(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            144 => {
                __reduce144(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            145 => {
                __reduce145(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            146 => {
                __reduce146(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            147 => {
                __reduce147(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            148 => {
                __reduce148(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            149 => {
                __reduce149(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            150 => {
                __reduce150(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            151 => {
                __reduce151(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            152 => {
                __reduce152(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            153 => {
                __reduce153(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            154 => {
                __reduce154(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            155 => {
                __reduce155(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            156 => {
                __reduce156(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            157 => {
                __reduce157(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            158 => {
                __reduce158(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            159 => {
                __reduce159(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            160 => {
                __reduce160(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            161 => {
                __reduce161(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            162 => {
                __reduce162(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            163 => {
                __reduce163(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            164 => {
                __reduce164(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            165 => {
                __reduce165(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            166 => {
                __reduce166(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            167 => {
                __reduce167(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            168 => {
                __reduce168(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            169 => {
                __reduce169(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            170 => {
                __reduce170(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            171 => {
                __reduce171(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            172 => {
                __reduce172(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            173 => {
                __reduce173(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            174 => {
                __reduce174(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            175 => {
                __reduce175(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            176 => {
                __reduce176(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            177 => {
                __reduce177(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            178 => {
                __reduce178(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            179 => {
                __reduce179(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            180 => {
                __reduce180(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            181 => {
                __reduce181(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            182 => {
                __reduce182(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            183 => {
                __reduce183(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            184 => {
                __reduce184(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            185 => {
                __reduce185(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            186 => {
                __reduce186(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            187 => {
                __reduce187(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            188 => {
                __reduce188(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            189 => {
                __reduce189(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            190 => {
                __reduce190(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            191 => {
                __reduce191(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            192 => {
                __reduce192(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            193 => {
                __reduce193(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            194 => {
                __reduce194(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            195 => {
                __reduce195(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            196 => {
                __reduce196(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            197 => {
                __reduce197(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            198 => {
                __reduce198(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            199 => {
                __reduce199(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            200 => {
                __reduce200(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            201 => {
                __reduce201(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            202 => {
                __reduce202(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            203 => {
                __reduce203(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            204 => {
                __reduce204(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            205 => {
                __reduce205(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            206 => {
                __reduce206(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            207 => {
                __reduce207(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            208 => {
                __reduce208(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            209 => {
                __reduce209(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            210 => {
                __reduce210(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            211 => {
                __reduce211(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            212 => {
                __reduce212(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            213 => {
                __reduce213(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            214 => {
                __reduce214(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            215 => {
                __reduce215(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            216 => {
                __reduce216(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            217 => {
                __reduce217(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            218 => {
                __reduce218(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            219 => {
                __reduce219(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            220 => {
                __reduce220(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            221 => {
                __reduce221(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            222 => {
                __reduce222(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            223 => {
                __reduce223(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            224 => {
                __reduce224(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            225 => {
                __reduce225(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            226 => {
                __reduce226(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            227 => {
                __reduce227(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            228 => {
                __reduce228(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            229 => {
                __reduce229(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            230 => {
                __reduce230(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            231 => {
                __reduce231(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            232 => {
                __reduce232(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            233 => {
                __reduce233(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            234 => {
                __reduce234(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            235 => {
                __reduce235(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            236 => {
                __reduce236(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            237 => {
                __reduce237(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            238 => {
                __reduce238(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            239 => {
                __reduce239(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            240 => {
                __reduce240(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            241 => {
                __reduce241(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            242 => {
                __reduce242(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            243 => {
                __reduce243(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            244 => {
                __reduce244(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            245 => {
                __reduce245(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            246 => {
                __reduce246(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            247 => {
                __reduce247(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            248 => {
                __reduce248(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            249 => {
                __reduce249(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            250 => {
                __reduce250(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            251 => {
                __reduce251(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            252 => {
                __reduce252(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            253 => {
                __reduce253(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            254 => {
                __reduce254(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            255 => {
                __reduce255(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            256 => {
                __reduce256(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            257 => {
                __reduce257(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            258 => {
                __reduce258(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            259 => {
                __reduce259(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            260 => {
                __reduce260(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            261 => {
                __reduce261(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            262 => {
                __reduce262(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            263 => {
                __reduce263(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            264 => {
                __reduce264(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            265 => {
                __reduce265(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            266 => {
                __reduce266(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            267 => {
                __reduce267(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            268 => {
                __reduce268(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            269 => {
                __reduce269(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            270 => {
                __reduce270(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            271 => {
                __reduce271(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            272 => {
                __reduce272(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            273 => {
                __reduce273(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            274 => {
                __reduce274(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            275 => {
                __reduce275(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            276 => {
                __reduce276(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            277 => {
                __reduce277(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            278 => {
                __reduce278(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            279 => {
                __reduce279(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            280 => {
                __reduce280(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            281 => {
                __reduce281(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            282 => {
                __reduce282(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            283 => {
                __reduce283(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            284 => {
                __reduce284(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            285 => {
                __reduce285(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            286 => {
                __reduce286(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            287 => {
                __reduce287(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            288 => {
                __reduce288(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            289 => {
                __reduce289(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            290 => {
                __reduce290(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            291 => {
                __reduce291(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            292 => {
                __reduce292(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            293 => {
                __reduce293(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            294 => {
                __reduce294(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            295 => {
                __reduce295(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            296 => {
                __reduce296(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            297 => {
                __reduce297(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            298 => {
                __reduce298(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            299 => {
                __reduce299(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            300 => {
                __reduce300(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            301 => {
                __reduce301(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            302 => {
                __reduce302(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            303 => {
                __reduce303(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            304 => {
                __reduce304(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            305 => {
                __reduce305(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            306 => {
                __reduce306(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            307 => {
                __reduce307(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            308 => {
                __reduce308(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            309 => {
                // __LStmt = LStmt => ActionFn(0);
                let __sym0 = __pop_Variant51(__symbols);
                let __start = __sym0.0;
                let __end = __sym0.2;
                let __nt = super::__action0::<>(module, __sym0);
                return Some(Ok(__nt));
            }
            310 => {
                __reduce310(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            _ => panic!("invalid action code {}", __action)
        };
        let __states_len = __states.len();
        __states.truncate(__states_len - __pop_states);
        let __state = *__states.last().unwrap();
        let __next_state = __goto(__state, __nonterminal);
        __states.push(__next_state);
        None
    }
    #[inline(never)]
    fn __symbol_type_mismatch() -> ! {
        panic!("symbol type mismatch")
    }
    fn __pop_Variant8<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (L<Expr>, Vec<L<Stmt>>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant8(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant24<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (Option<SmolStr>, L<Expr>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant24(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant26<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (Option<SmolStr>, L<Pat>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant26(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant22<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (SmolStr, Type), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant22(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant14<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (Token, L<Type>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant14(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant12<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (Token, core::option::Option<Token>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant12(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant34<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Alt, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant34(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant37<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, AssignOp, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant37(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant16<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, CallArg, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant16(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant40<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, ConstrPattern, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant40(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant41<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Constructor, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant41(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant42<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, ConstructorDecl, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant42(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant38<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Expr, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant38(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant45<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, FunSig, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant45(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant30<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<(L<SmolStr>, Vec<L<Type>>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant30(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant47<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<Expr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant47(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant44<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<FunDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant44(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant48<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<FunSig>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant48(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant46<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<ImportDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant46(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant50<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<Pat>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant50(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant19<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<SmolStr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant19(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant51<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<Stmt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant51(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant65<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<TopDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant65(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant68<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<TraitDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant68(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant2<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant2(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant72<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<TypeDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant72(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant33<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Loc, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant33(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant28<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Named<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant28(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant55<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Pat, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant55(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant64<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Stmt, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant64(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant0<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Token, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant0(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant70<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Type, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant70(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant73<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, TypeDeclRhs, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant73(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant60<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant60(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant61<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant61(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant53<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<(SmolStr, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant53(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant58<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<(Token, L<Type>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant58(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant36<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<Alt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant36(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant59<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant59(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant71<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<ConstructorDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant71(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant6<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant6(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant10<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<L<Stmt>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant10(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant67<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<L<TopDecl>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant67(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant4<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<L<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant4(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant62<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant62(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant74<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<SmolStr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant74(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant63<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<Token>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant63(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant75<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant75(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant9<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant9(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant25<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant25(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant27<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant27(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant23<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(SmolStr, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant23(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant15<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Token, L<Type>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant15(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant35<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Alt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant35(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant17<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant17(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant43<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<ConstructorDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant43(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant31<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant31(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant49<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<FunSig>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant49(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant52<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<Stmt>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant52(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant66<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<TopDecl>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant66(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant18<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant18(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant29<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant29(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant32<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Token>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant32(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant54<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant54(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant56<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant56(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant21<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<(Token, L<Type>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant21(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant13<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<(Token, core::option::Option<Token>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant13(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant39<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant39(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant69<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant69(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant20<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<L<SmolStr>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant20(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant3<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<L<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant3(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant57<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant57(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant1<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Token>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant1(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant7<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Vec<L<(L<SmolStr>, Vec<L<Type>>)>>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant7(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant11<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Vec<L<Stmt>>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant11(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant5<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Vec<L<Type>>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant5(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __reduce0<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ","? = "," => ActionFn(156);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action156::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (1, 0)
    }
    fn __reduce1<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ","? =  => ActionFn(157);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action157::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (0, 0)
    }
    fn __reduce2<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <LType>) = ":", LType => ActionFn(138);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action138::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 1)
    }
    fn __reduce3<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <LType>)? = ":", LType => ActionFn(245);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action245::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (2, 2)
    }
    fn __reduce4<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <LType>)? =  => ActionFn(137);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action137::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (0, 2)
    }
    fn __reduce5<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <Sep<LType, "+">>) = ":", Sep<LType, "+"> => ActionFn(120);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant4(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action120::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 3)
    }
    fn __reduce6<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <Sep<LType, "+">>)? = ":", Sep<LType, "+"> => ActionFn(252);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant4(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action252::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant5(__nt), __end));
        (2, 4)
    }
    fn __reduce7<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <Sep<LType, "+">>)? =  => ActionFn(119);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action119::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant5(__nt), __end));
        (0, 4)
    }
    fn __reduce8<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("[" <Sep<TyParamWithPreds, ",">> "]") = "[", Sep<TyParamWithPreds, ",">, "]" => ActionFn(146);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant6(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action146::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (3, 5)
    }
    fn __reduce9<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("[" <Sep<TyParamWithPreds, ",">> "]")? = "[", Sep<TyParamWithPreds, ",">, "]" => ActionFn(255);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant6(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action255::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (3, 6)
    }
    fn __reduce10<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("[" <Sep<TyParamWithPreds, ",">> "]")? =  => ActionFn(145);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action145::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (0, 6)
    }
    fn __reduce11<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT) = "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(130);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action130::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant8(__nt), __end));
        (7, 7)
    }
    fn __reduce12<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)* =  => ActionFn(128);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action128::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (0, 8)
    }
    fn __reduce13<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)* = ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ => ActionFn(129);
        let __sym0 = __pop_Variant9(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action129::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (1, 8)
    }
    fn __reduce14<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ = "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(260);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action260::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (7, 9)
    }
    fn __reduce15<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ = ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+, "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(261);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant10(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant9(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action261::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (8, 9)
    }
    fn __reduce16<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT) = "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(127);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant10(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action127::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (6, 10)
    }
    fn __reduce17<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT)? = "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(264);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant10(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action264::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (6, 11)
    }
    fn __reduce18<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT)? =  => ActionFn(126);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action126::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (0, 11)
    }
    fn __reduce19<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?) = "self", "," => ActionFn(241);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action241::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (2, 12)
    }
    fn __reduce20<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?) = "self" => ActionFn(242);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action242::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (1, 12)
    }
    fn __reduce21<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? = "self", "," => ActionFn(269);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action269::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (2, 13)
    }
    fn __reduce22<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? = "self" => ActionFn(270);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action270::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (1, 13)
    }
    fn __reduce23<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? =  => ActionFn(142);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action142::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (0, 13)
    }
    fn __reduce24<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",") = LowerId, ":", LType, "," => ActionFn(283);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action283::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (4, 14)
    }
    fn __reduce25<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",")* =  => ActionFn(181);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action181::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (0, 15)
    }
    fn __reduce26<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",")* = (<(<LowerId> ":" <LType>)> ",")+ => ActionFn(182);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action182::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (1, 15)
    }
    fn __reduce27<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",")+ = LowerId, ":", LType, "," => ActionFn(285);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action285::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (4, 16)
    }
    fn __reduce28<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",")+ = (<(<LowerId> ":" <LType>)> ",")+, LowerId, ":", LType, "," => ActionFn(286);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action286::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (5, 16)
    }
    fn __reduce29<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",") = CallArg, "," => ActionFn(204);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant16(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action204::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (2, 17)
    }
    fn __reduce30<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")* =  => ActionFn(202);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action202::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (0, 18)
    }
    fn __reduce31<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")* = (<CallArg> ",")+ => ActionFn(203);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action203::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (1, 18)
    }
    fn __reduce32<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")+ = CallArg, "," => ActionFn(289);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant16(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action289::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (2, 19)
    }
    fn __reduce33<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")+ = (<CallArg> ",")+, CallArg, "," => ActionFn(290);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant16(__symbols);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action290::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (3, 19)
    }
    fn __reduce34<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+") = LType, "+" => ActionFn(188);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action188::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 20)
    }
    fn __reduce35<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+")* =  => ActionFn(186);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action186::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (0, 21)
    }
    fn __reduce36<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+")* = (<LType> "+")+ => ActionFn(187);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action187::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (1, 21)
    }
    fn __reduce37<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+")+ = LType, "+" => ActionFn(293);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action293::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (2, 22)
    }
    fn __reduce38<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+")+ = (<LType> "+")+, LType, "+" => ActionFn(294);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action294::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (3, 22)
    }
    fn __reduce39<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",") = LType, "," => ActionFn(168);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action168::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 23)
    }
    fn __reduce40<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",")* =  => ActionFn(166);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action166::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (0, 24)
    }
    fn __reduce41<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",")* = (<LType> ",")+ => ActionFn(167);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action167::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (1, 24)
    }
    fn __reduce42<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",")+ = LType, "," => ActionFn(297);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action297::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (2, 25)
    }
    fn __reduce43<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",")+ = (<LType> ",")+, LType, "," => ActionFn(298);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action298::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (3, 25)
    }
    fn __reduce44<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LUpperId> ".") = LUpperId, "." => ActionFn(150);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action150::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (2, 26)
    }
    fn __reduce45<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LUpperId> ".")? = LUpperId, "." => ActionFn(301);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action301::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (2, 27)
    }
    fn __reduce46<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LUpperId> ".")? =  => ActionFn(149);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action149::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (0, 27)
    }
    fn __reduce47<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <LType>) = LowerId, ":", LType => ActionFn(140);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action140::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (3, 28)
    }
    fn __reduce48<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <LType>)? = LowerId, ":", LType => ActionFn(284);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action284::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (3, 29)
    }
    fn __reduce49<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <LType>)? =  => ActionFn(180);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action180::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (0, 29)
    }
    fn __reduce50<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE) = NamedField, NEWLINE => ActionFn(155);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action155::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (2, 30)
    }
    fn __reduce51<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE)+ = NamedField, NEWLINE => ActionFn(330);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action330::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (2, 31)
    }
    fn __reduce52<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE)+ = (<NamedField> NEWLINE)+, NamedField, NEWLINE => ActionFn(331);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant22(__symbols);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action331::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (3, 31)
    }
    fn __reduce53<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",") = ParenExpr, "," => ActionFn(199);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action199::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (2, 32)
    }
    fn __reduce54<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")* =  => ActionFn(197);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action197::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (0, 33)
    }
    fn __reduce55<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")* = (<ParenExpr> ",")+ => ActionFn(198);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action198::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (1, 33)
    }
    fn __reduce56<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")+ = ParenExpr, "," => ActionFn(332);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action332::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (2, 34)
    }
    fn __reduce57<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")+ = (<ParenExpr> ",")+, ParenExpr, "," => ActionFn(333);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant24(__symbols);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action333::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (3, 34)
    }
    fn __reduce58<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",") = PatternField, "," => ActionFn(209);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action209::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (2, 35)
    }
    fn __reduce59<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")* =  => ActionFn(207);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action207::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (0, 36)
    }
    fn __reduce60<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")* = (<PatternField> ",")+ => ActionFn(208);
        let __sym0 = __pop_Variant27(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action208::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (1, 36)
    }
    fn __reduce61<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")+ = PatternField, "," => ActionFn(336);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action336::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (2, 37)
    }
    fn __reduce62<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")+ = (<PatternField> ",")+, PatternField, "," => ActionFn(337);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant27(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action337::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (3, 37)
    }
    fn __reduce63<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",") = RecordTypeField, "," => ActionFn(173);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action173::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (2, 38)
    }
    fn __reduce64<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")* =  => ActionFn(171);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action171::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (0, 39)
    }
    fn __reduce65<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")* = (<RecordTypeField> ",")+ => ActionFn(172);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action172::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 39)
    }
    fn __reduce66<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")+ = RecordTypeField, "," => ActionFn(340);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action340::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (2, 40)
    }
    fn __reduce67<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")+ = (<RecordTypeField> ",")+, RecordTypeField, "," => ActionFn(341);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant28(__symbols);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action341::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (3, 40)
    }
    fn __reduce68<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",") = TyParamWithPreds, "," => ActionFn(178);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant30(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action178::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (2, 41)
    }
    fn __reduce69<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",")* =  => ActionFn(176);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action176::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (0, 42)
    }
    fn __reduce70<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",")* = (<TyParamWithPreds> ",")+ => ActionFn(177);
        let __sym0 = __pop_Variant31(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action177::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (1, 42)
    }
    fn __reduce71<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",")+ = TyParamWithPreds, "," => ActionFn(344);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant30(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action344::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (2, 43)
    }
    fn __reduce72<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",")+ = (<TyParamWithPreds> ",")+, TyParamWithPreds, "," => ActionFn(345);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant30(__symbols);
        let __sym0 = __pop_Variant31(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action345::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (3, 43)
    }
    fn __reduce73<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",") = UpperId, "," => ActionFn(165);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action165::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant0(__nt), __end));
        (2, 44)
    }
    fn __reduce74<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")* =  => ActionFn(163);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action163::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (0, 45)
    }
    fn __reduce75<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")* = (<UpperId> ",")+ => ActionFn(164);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action164::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 45)
    }
    fn __reduce76<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")+ = UpperId, "," => ActionFn(348);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action348::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (2, 46)
    }
    fn __reduce77<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")+ = (<UpperId> ",")+, UpperId, "," => ActionFn(349);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action349::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (3, 46)
    }
    fn __reduce78<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".") = UpperId, "." => ActionFn(214);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action214::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant0(__nt), __end));
        (2, 47)
    }
    fn __reduce79<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")* =  => ActionFn(212);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action212::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (0, 48)
    }
    fn __reduce80<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")* = (<UpperId> ".")+ => ActionFn(213);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action213::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 48)
    }
    fn __reduce81<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")+ = UpperId, "." => ActionFn(352);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action352::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (2, 49)
    }
    fn __reduce82<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")+ = (<UpperId> ".")+, UpperId, "." => ActionFn(353);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action353::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (3, 49)
    }
    fn __reduce83<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // @L =  => ActionFn(162);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action162::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant33(__nt), __end));
        (0, 50)
    }
    fn __reduce84<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // @R =  => ActionFn(161);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action161::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant33(__nt), __end));
        (0, 51)
    }
    fn __reduce85<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt = LPat, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(41);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant10(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant50(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action41::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant34(__nt), __end));
        (6, 52)
    }
    fn __reduce86<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt = LPat, ":", LStmt => ActionFn(42);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant51(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant50(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action42::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant34(__nt), __end));
        (3, 52)
    }
    fn __reduce87<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt* =  => ActionFn(131);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action131::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (0, 53)
    }
    fn __reduce88<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt* = Alt+ => ActionFn(132);
        let __sym0 = __pop_Variant35(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action132::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (1, 53)
    }
    fn __reduce89<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt+ = Alt => ActionFn(191);
        let __sym0 = __pop_Variant34(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action191::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (1, 54)
    }
    fn __reduce90<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt+ = Alt+, Alt => ActionFn(192);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant34(__symbols);
        let __sym0 = __pop_Variant35(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action192::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (2, 54)
    }
    fn __reduce91<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alts =  => ActionFn(436);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action436::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant36(__nt), __end));
        (0, 55)
    }
    fn __reduce92<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alts = Alt+ => ActionFn(437);
        let __sym0 = __pop_Variant35(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action437::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant36(__nt), __end));
        (1, 55)
    }
    fn __reduce93<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "=" => ActionFn(43);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action43::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 56)
    }
    fn __reduce94<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "+=" => ActionFn(44);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action44::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 56)
    }
    fn __reduce95<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "-=" => ActionFn(45);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action45::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 56)
    }
    fn __reduce96<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "match", LInlineExpr, ":", NEWLINE, INDENT, Alts, DEDENT => ActionFn(50);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant36(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action50::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (7, 57)
    }
    fn __reduce97<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(265);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant10(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action265::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (13, 57)
    }
    fn __reduce98<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(266);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action266::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (7, 57)
    }
    fn __reduce99<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+, "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(267);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant10(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant9(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action267::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (14, 57)
    }
    fn __reduce100<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ => ActionFn(268);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant9(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action268::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (8, 57)
    }
    fn __reduce101<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // CallArg = LowerId, "=", LExpr => ActionFn(88);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action88::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (3, 58)
    }
    fn __reduce102<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // CallArg = LExpr => ActionFn(89);
        let __sym0 = __pop_Variant47(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action89::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (1, 58)
    }
    fn __reduce103<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // CallArg? = CallArg => ActionFn(200);
        let __sym0 = __pop_Variant16(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action200::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant39(__nt), __end));
        (1, 59)
    }
    fn __reduce104<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // CallArg? =  => ActionFn(201);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action201::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant39(__nt), __end));
        (0, 59)
    }
    fn __reduce105<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstrPattern = Constructor => ActionFn(102);
        let __sym0 = __pop_Variant41(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action102::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant40(__nt), __end));
        (1, 60)
    }
    fn __reduce106<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstrPattern = Constructor, "(", Sep<PatternField, ",">, ")" => ActionFn(103);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant61(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant41(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action103::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant40(__nt), __end));
        (4, 60)
    }
    fn __reduce107<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Constructor = UpperId, ".", UpperId => ActionFn(100);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action100::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant41(__nt), __end));
        (3, 61)
    }
    fn __reduce108<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Constructor = UpperId => ActionFn(101);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action101::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant41(__nt), __end));
        (1, 61)
    }
    fn __reduce109<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, NEWLINE => ActionFn(12);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action12::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (2, 62)
    }
    fn __reduce110<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, ":", NEWLINE, INDENT, NamedFields, DEDENT => ActionFn(13);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant53(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action13::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (6, 62)
    }
    fn __reduce111<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, "(", UnnamedFields, ",", ")", NEWLINE => ActionFn(243);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant75(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action243::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (6, 62)
    }
    fn __reduce112<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, "(", UnnamedFields, ")", NEWLINE => ActionFn(244);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant75(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action244::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (5, 62)
    }
    fn __reduce113<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl+ = ConstructorDecl => ActionFn(158);
        let __sym0 = __pop_Variant42(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action158::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (1, 63)
    }
    fn __reduce114<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl+ = ConstructorDecl+, ConstructorDecl => ActionFn(159);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant42(__symbols);
        let __sym0 = __pop_Variant43(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action159::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (2, 63)
    }
    fn __reduce115<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Expr = InlineExpr => ActionFn(47);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action47::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 64)
    }
    fn __reduce116<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Expr = BlockExpr => ActionFn(48);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action48::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 64)
    }
    fn __reduce117<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunDecl = FunSig, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(396);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant10(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant45(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action396::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant44(__nt), __end));
        (6, 65)
    }
    fn __reduce118<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "prim", FunSig, NEWLINE => ActionFn(397);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant45(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action397::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant44(__nt), __end));
        (3, 65)
    }
    fn __reduce119<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(302);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant2(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant58(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action302::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (14, 66)
    }
    fn __reduce120<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(303);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant2(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant58(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action303::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (12, 66)
    }
    fn __reduce121<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(304);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant2(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant58(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action304::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (13, 66)
    }
    fn __reduce122<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(305);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant2(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant58(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action305::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (11, 66)
    }
    fn __reduce123<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(306);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant2(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant58(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action306::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (12, 66)
    }
    fn __reduce124<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(307);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant2(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant58(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action307::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (10, 66)
    }
    fn __reduce125<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(308);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant2(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant58(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action308::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (11, 66)
    }
    fn __reduce126<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(309);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant2(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant58(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action309::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (9, 66)
    }
    fn __reduce127<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(310);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant2(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant58(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action310::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (10, 66)
    }
    fn __reduce128<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(311);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant2(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant58(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action311::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (8, 66)
    }
    fn __reduce129<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(312);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant2(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant58(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action312::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (9, 66)
    }
    fn __reduce130<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(313);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant2(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant58(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action313::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (7, 66)
    }
    fn __reduce131<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(314);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant58(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action314::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (12, 66)
    }
    fn __reduce132<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(315);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant58(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action315::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (10, 66)
    }
    fn __reduce133<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(316);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant58(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action316::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (11, 66)
    }
    fn __reduce134<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(317);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant58(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action317::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (9, 66)
    }
    fn __reduce135<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(318);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant58(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action318::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (10, 66)
    }
    fn __reduce136<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(319);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant58(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action319::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (8, 66)
    }
    fn __reduce137<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(320);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant58(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action320::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (9, 66)
    }
    fn __reduce138<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(321);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant58(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action321::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (7, 66)
    }
    fn __reduce139<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(322);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant58(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action322::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (8, 66)
    }
    fn __reduce140<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(323);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant58(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action323::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (6, 66)
    }
    fn __reduce141<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(324);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant58(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action324::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (7, 66)
    }
    fn __reduce142<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(325);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant58(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action325::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (5, 66)
    }
    fn __reduce143<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ImportDecl = "import", Sep<UpperId, ".">, NEWLINE => ActionFn(398);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant63(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action398::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (3, 67)
    }
    fn __reduce144<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr = "return", LInlineExpr => ActionFn(84);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action84::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (2, 68)
    }
    fn __reduce145<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr = InlineExpr7 => ActionFn(85);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action85::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 68)
    }
    fn __reduce146<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = "self" => ActionFn(53);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action53::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce147<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = LowerId => ActionFn(54);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action54::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce148<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = UpperId => ActionFn(55);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action55::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce149<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = "(", Sep<ParenExpr, ",">, ")" => ActionFn(56);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant60(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action56::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 69)
    }
    fn __reduce150<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = IntLit => ActionFn(57);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action57::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce151<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = StringLit => ActionFn(58);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action58::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce152<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = CharLit => ActionFn(59);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action59::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce153<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = InlineExpr0, "[", LExpr, "]" => ActionFn(399);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action399::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (4, 69)
    }
    fn __reduce154<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = InlineExpr0, "(", Sep<CallArg, ",">, ")" => ActionFn(400);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant59(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action400::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (4, 69)
    }
    fn __reduce155<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = InlineExpr0, ".", LowerId => ActionFn(401);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action401::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 69)
    }
    fn __reduce156<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = InlineExpr0, ".", UpperId => ActionFn(63);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action63::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 69)
    }
    fn __reduce157<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr1 = InlineExpr1, "..", InlineExpr0 => ActionFn(402);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action402::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 70)
    }
    fn __reduce158<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr1 = InlineExpr0 => ActionFn(65);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action65::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 70)
    }
    fn __reduce159<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr2 = "!", InlineExpr2 => ActionFn(403);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant38(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action403::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (2, 71)
    }
    fn __reduce160<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr2 = InlineExpr1 => ActionFn(67);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action67::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 71)
    }
    fn __reduce161<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr3 = InlineExpr3, "*", InlineExpr2 => ActionFn(404);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action404::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 72)
    }
    fn __reduce162<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr3 = InlineExpr2 => ActionFn(69);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action69::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 72)
    }
    fn __reduce163<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr4 = InlineExpr4, "+", InlineExpr3 => ActionFn(405);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action405::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 73)
    }
    fn __reduce164<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr4 = InlineExpr4, "-", InlineExpr3 => ActionFn(406);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action406::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 73)
    }
    fn __reduce165<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr4 = InlineExpr3 => ActionFn(72);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action72::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 73)
    }
    fn __reduce166<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, "==", InlineExpr4 => ActionFn(407);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action407::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce167<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, "!=", InlineExpr4 => ActionFn(408);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action408::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce168<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, "<", InlineExpr4 => ActionFn(409);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action409::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce169<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, ">", InlineExpr4 => ActionFn(410);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action410::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce170<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, "<=", InlineExpr4 => ActionFn(411);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action411::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce171<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, ">=", InlineExpr4 => ActionFn(412);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action412::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce172<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr4 => ActionFn(79);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action79::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 74)
    }
    fn __reduce173<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr6 = InlineExpr6, "&&", InlineExpr5 => ActionFn(413);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action413::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 75)
    }
    fn __reduce174<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr6 = InlineExpr5 => ActionFn(81);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action81::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 75)
    }
    fn __reduce175<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr7 = InlineExpr7, "||", InlineExpr6 => ActionFn(414);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action414::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 76)
    }
    fn __reduce176<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr7 = InlineExpr6 => ActionFn(83);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action83::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 76)
    }
    fn __reduce177<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LBlockExpr = BlockExpr => ActionFn(415);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action415::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 77)
    }
    fn __reduce178<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LExpr = Expr => ActionFn(416);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action416::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 78)
    }
    fn __reduce179<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig = FunSig => ActionFn(417);
        let __sym0 = __pop_Variant45(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action417::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant48(__nt), __end));
        (1, 79)
    }
    fn __reduce180<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig* =  => ActionFn(116);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action116::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (0, 80)
    }
    fn __reduce181<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig* = LFunSig+ => ActionFn(117);
        let __sym0 = __pop_Variant49(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action117::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (1, 80)
    }
    fn __reduce182<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig+ = LFunSig => ActionFn(215);
        let __sym0 = __pop_Variant48(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action215::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (1, 81)
    }
    fn __reduce183<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig+ = LFunSig+, LFunSig => ActionFn(216);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant48(__symbols);
        let __sym0 = __pop_Variant49(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action216::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (2, 81)
    }
    fn __reduce184<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LInlineExpr = InlineExpr => ActionFn(418);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action418::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 82)
    }
    fn __reduce185<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LLowerId = LowerId => ActionFn(419);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action419::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (1, 83)
    }
    fn __reduce186<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LPat = Pat => ActionFn(420);
        let __sym0 = __pop_Variant55(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action420::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant50(__nt), __end));
        (1, 84)
    }
    fn __reduce187<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt = Stmt => ActionFn(421);
        let __sym0 = __pop_Variant64(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action421::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (1, 85)
    }
    fn __reduce188<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt* =  => ActionFn(133);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action133::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (0, 86)
    }
    fn __reduce189<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt* = LStmt+ => ActionFn(134);
        let __sym0 = __pop_Variant52(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action134::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (1, 86)
    }
    fn __reduce190<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt+ = LStmt => ActionFn(189);
        let __sym0 = __pop_Variant51(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action189::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (1, 87)
    }
    fn __reduce191<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt+ = LStmt+, LStmt => ActionFn(190);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant51(__symbols);
        let __sym0 = __pop_Variant52(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action190::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (2, 87)
    }
    fn __reduce192<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmts =  => ActionFn(446);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action446::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (0, 88)
    }
    fn __reduce193<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmts = LStmt+ => ActionFn(447);
        let __sym0 = __pop_Variant52(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action447::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (1, 88)
    }
    fn __reduce194<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LType = Type => ActionFn(422);
        let __sym0 = __pop_Variant70(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action422::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (1, 89)
    }
    fn __reduce195<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LType? = LType => ActionFn(184);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action184::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (1, 90)
    }
    fn __reduce196<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LType? =  => ActionFn(185);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action185::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (0, 90)
    }
    fn __reduce197<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LUpperId = UpperId => ActionFn(423);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action423::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (1, 91)
    }
    fn __reduce198<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NEWLINE* =  => ActionFn(112);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action112::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (0, 92)
    }
    fn __reduce199<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NEWLINE* = NEWLINE+ => ActionFn(113);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action113::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 92)
    }
    fn __reduce200<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NEWLINE+ = NEWLINE => ActionFn(219);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action219::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 93)
    }
    fn __reduce201<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NEWLINE+ = NEWLINE+, NEWLINE => ActionFn(220);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action220::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (2, 93)
    }
    fn __reduce202<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NamedField = LowerId, ":", Type => ActionFn(16);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant70(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action16::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (3, 94)
    }
    fn __reduce203<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NamedFields = (<NamedField> NEWLINE)+ => ActionFn(15);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action15::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant53(__nt), __end));
        (1, 95)
    }
    fn __reduce204<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ParenExpr = LowerId, "=", LExpr => ActionFn(86);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action86::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (3, 96)
    }
    fn __reduce205<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ParenExpr = LExpr => ActionFn(87);
        let __sym0 = __pop_Variant47(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action87::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 96)
    }
    fn __reduce206<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ParenExpr? = ParenExpr => ActionFn(195);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action195::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (1, 97)
    }
    fn __reduce207<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ParenExpr? =  => ActionFn(196);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action196::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (0, 97)
    }
    fn __reduce208<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat = Pat0, "|", Pat => ActionFn(424);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant55(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant55(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action424::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (3, 98)
    }
    fn __reduce209<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat = Pat0 => ActionFn(99);
        let __sym0 = __pop_Variant55(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action99::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 98)
    }
    fn __reduce210<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = LowerId => ActionFn(91);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action91::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce211<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = ConstrPattern => ActionFn(92);
        let __sym0 = __pop_Variant40(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action92::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce212<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = "(", Sep<PatternField, ",">, ")" => ActionFn(93);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant61(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action93::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (3, 99)
    }
    fn __reduce213<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = "_" => ActionFn(94);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action94::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce214<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = StringLit => ActionFn(95);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action95::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce215<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = CharLit => ActionFn(96);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action96::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce216<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = StringLit, LowerId => ActionFn(97);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action97::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (2, 99)
    }
    fn __reduce217<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // PatternField = LowerId, "=", LPat => ActionFn(104);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant50(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action104::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (3, 100)
    }
    fn __reduce218<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // PatternField = LPat => ActionFn(105);
        let __sym0 = __pop_Variant50(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action105::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 100)
    }
    fn __reduce219<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // PatternField? = PatternField => ActionFn(205);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action205::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (1, 101)
    }
    fn __reduce220<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // PatternField? =  => ActionFn(206);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action206::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (0, 101)
    }
    fn __reduce221<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField = LowerId, ":", Type => ActionFn(23);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant70(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action23::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (3, 102)
    }
    fn __reduce222<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField = Type => ActionFn(24);
        let __sym0 = __pop_Variant70(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action24::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (1, 102)
    }
    fn __reduce223<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField? = RecordTypeField => ActionFn(169);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action169::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (1, 103)
    }
    fn __reduce224<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField? =  => ActionFn(170);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action170::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (0, 103)
    }
    fn __reduce225<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <LType>), ","> = LowerId, ":", LType => ActionFn(326);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action326::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (3, 104)
    }
    fn __reduce226<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <LType>), ","> =  => ActionFn(327);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action327::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (0, 104)
    }
    fn __reduce227<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <LType>), ","> = (<(<LowerId> ":" <LType>)> ",")+, LowerId, ":", LType => ActionFn(328);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action328::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (4, 104)
    }
    fn __reduce228<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <LType>), ","> = (<(<LowerId> ":" <LType>)> ",")+ => ActionFn(329);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action329::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (1, 104)
    }
    fn __reduce229<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = CallArg => ActionFn(438);
        let __sym0 = __pop_Variant16(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action438::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (1, 105)
    }
    fn __reduce230<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> =  => ActionFn(439);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action439::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (0, 105)
    }
    fn __reduce231<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = (<CallArg> ",")+, CallArg => ActionFn(440);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant16(__symbols);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action440::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (2, 105)
    }
    fn __reduce232<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = (<CallArg> ",")+ => ActionFn(441);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action441::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (1, 105)
    }
    fn __reduce233<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, "+"> = LType => ActionFn(448);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action448::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 106)
    }
    fn __reduce234<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, "+"> =  => ActionFn(449);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action449::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (0, 106)
    }
    fn __reduce235<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, "+"> = (<LType> "+")+, LType => ActionFn(450);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action450::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 106)
    }
    fn __reduce236<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, "+"> = (<LType> "+")+ => ActionFn(451);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action451::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 106)
    }
    fn __reduce237<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, ","> = LType => ActionFn(452);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action452::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 107)
    }
    fn __reduce238<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, ","> =  => ActionFn(453);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action453::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (0, 107)
    }
    fn __reduce239<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, ","> = (<LType> ",")+, LType => ActionFn(454);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action454::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 107)
    }
    fn __reduce240<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, ","> = (<LType> ",")+ => ActionFn(455);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action455::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 107)
    }
    fn __reduce241<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = ParenExpr => ActionFn(462);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action462::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (1, 108)
    }
    fn __reduce242<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> =  => ActionFn(463);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action463::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (0, 108)
    }
    fn __reduce243<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = (<ParenExpr> ",")+, ParenExpr => ActionFn(464);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant24(__symbols);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action464::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (2, 108)
    }
    fn __reduce244<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = (<ParenExpr> ",")+ => ActionFn(465);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action465::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (1, 108)
    }
    fn __reduce245<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = PatternField => ActionFn(466);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action466::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (1, 109)
    }
    fn __reduce246<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> =  => ActionFn(467);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action467::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (0, 109)
    }
    fn __reduce247<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = (<PatternField> ",")+, PatternField => ActionFn(468);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant27(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action468::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (2, 109)
    }
    fn __reduce248<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = (<PatternField> ",")+ => ActionFn(469);
        let __sym0 = __pop_Variant27(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action469::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (1, 109)
    }
    fn __reduce249<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = RecordTypeField => ActionFn(470);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action470::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (1, 110)
    }
    fn __reduce250<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> =  => ActionFn(471);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action471::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (0, 110)
    }
    fn __reduce251<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = (<RecordTypeField> ",")+, RecordTypeField => ActionFn(472);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant28(__symbols);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action472::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (2, 110)
    }
    fn __reduce252<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = (<RecordTypeField> ",")+ => ActionFn(473);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action473::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (1, 110)
    }
    fn __reduce253<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<TyParamWithPreds, ","> = TyParamWithPreds => ActionFn(476);
        let __sym0 = __pop_Variant30(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action476::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (1, 111)
    }
    fn __reduce254<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<TyParamWithPreds, ","> =  => ActionFn(477);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action477::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (0, 111)
    }
    fn __reduce255<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<TyParamWithPreds, ","> = (<TyParamWithPreds> ",")+, TyParamWithPreds => ActionFn(478);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant30(__symbols);
        let __sym0 = __pop_Variant31(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action478::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (2, 111)
    }
    fn __reduce256<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<TyParamWithPreds, ","> = (<TyParamWithPreds> ",")+ => ActionFn(479);
        let __sym0 = __pop_Variant31(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action479::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (1, 111)
    }
    fn __reduce257<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = UpperId => ActionFn(480);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action480::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (1, 112)
    }
    fn __reduce258<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> =  => ActionFn(481);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action481::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (0, 112)
    }
    fn __reduce259<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = (<UpperId> ",")+, UpperId => ActionFn(482);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action482::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (2, 112)
    }
    fn __reduce260<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = (<UpperId> ",")+ => ActionFn(483);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action483::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (1, 112)
    }
    fn __reduce261<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = UpperId => ActionFn(484);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action484::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (1, 113)
    }
    fn __reduce262<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> =  => ActionFn(485);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action485::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (0, 113)
    }
    fn __reduce263<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = (<UpperId> ".")+, UpperId => ActionFn(486);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action486::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (2, 113)
    }
    fn __reduce264<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = (<UpperId> ".")+ => ActionFn(487);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action487::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (1, 113)
    }
    fn __reduce265<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, ":", LType, "=", LInlineExpr, NEWLINE => ActionFn(248);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant47(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant50(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action248::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (7, 114)
    }
    fn __reduce266<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, "=", LInlineExpr, NEWLINE => ActionFn(249);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant47(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant50(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action249::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (5, 114)
    }
    fn __reduce267<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, ":", LType, "=", LBlockExpr => ActionFn(250);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant47(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant50(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action250::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (6, 114)
    }
    fn __reduce268<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, "=", LBlockExpr => ActionFn(251);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant47(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant50(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action251::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (4, 114)
    }
    fn __reduce269<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = LInlineExpr, AssignOp, LExpr, NEWLINE => ActionFn(35);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant37(__symbols);
        let __sym0 = __pop_Variant47(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action35::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (4, 114)
    }
    fn __reduce270<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = InlineExpr, NEWLINE => ActionFn(425);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action425::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (2, 114)
    }
    fn __reduce271<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = BlockExpr => ActionFn(426);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action426::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (1, 114)
    }
    fn __reduce272<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "for", LowerId, "in", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(38);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant10(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant47(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action38::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (9, 114)
    }
    fn __reduce273<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "while", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(39);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action39::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (7, 114)
    }
    fn __reduce274<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = TypeDecl => ActionFn(456);
        let __sym0 = __pop_Variant72(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action456::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (1, 115)
    }
    fn __reduce275<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, TypeDecl => ActionFn(457);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant72(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action457::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (2, 115)
    }
    fn __reduce276<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = FunDecl => ActionFn(458);
        let __sym0 = __pop_Variant44(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action458::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (1, 115)
    }
    fn __reduce277<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, FunDecl => ActionFn(459);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant44(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action459::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (2, 115)
    }
    fn __reduce278<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = ImportDecl => ActionFn(460);
        let __sym0 = __pop_Variant46(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action460::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (1, 115)
    }
    fn __reduce279<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, ImportDecl => ActionFn(461);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant46(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action461::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (2, 115)
    }
    fn __reduce280<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl* =  => ActionFn(114);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action114::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant66(__nt), __end));
        (0, 116)
    }
    fn __reduce281<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl* = TopDecl+ => ActionFn(115);
        let __sym0 = __pop_Variant66(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action115::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant66(__nt), __end));
        (1, 116)
    }
    fn __reduce282<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl+ = TopDecl => ActionFn(217);
        let __sym0 = __pop_Variant65(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action217::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant66(__nt), __end));
        (1, 117)
    }
    fn __reduce283<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl+ = TopDecl+, TopDecl => ActionFn(218);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant65(__symbols);
        let __sym0 = __pop_Variant66(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action218::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant66(__nt), __end));
        (2, 117)
    }
    fn __reduce284<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecls =  => ActionFn(474);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action474::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant67(__nt), __end));
        (0, 118)
    }
    fn __reduce285<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecls = TopDecl+ => ActionFn(475);
        let __sym0 = __pop_Variant66(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action475::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant67(__nt), __end));
        (1, 118)
    }
    fn __reduce286<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TraitDecl = "trait", LUpperId, "[", UpperId, ":", Sep<LType, "+">, "]", ":", NEWLINE, INDENT => ActionFn(442);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant4(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action442::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant68(__nt), __end));
        (10, 119)
    }
    fn __reduce287<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TraitDecl = "trait", LUpperId, "[", UpperId, ":", Sep<LType, "+">, "]", ":", NEWLINE, INDENT, LFunSig+ => ActionFn(443);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant49(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant4(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action443::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant68(__nt), __end));
        (11, 119)
    }
    fn __reduce288<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TraitDecl = "trait", LUpperId, "[", UpperId, "]", ":", NEWLINE, INDENT => ActionFn(444);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action444::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant68(__nt), __end));
        (8, 119)
    }
    fn __reduce289<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TraitDecl = "trait", LUpperId, "[", UpperId, "]", ":", NEWLINE, INDENT, LFunSig+ => ActionFn(445);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant49(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action445::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant68(__nt), __end));
        (9, 119)
    }
    fn __reduce290<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TyParamWithPreds = LUpperId => ActionFn(432);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action432::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (1, 120)
    }
    fn __reduce291<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TyParamWithPreds = LUpperId, ":", Sep<LType, "+"> => ActionFn(433);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant4(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action433::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (3, 120)
    }
    fn __reduce292<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TyParamWithPreds? = TyParamWithPreds => ActionFn(174);
        let __sym0 = __pop_Variant30(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action174::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant69(__nt), __end));
        (1, 121)
    }
    fn __reduce293<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TyParamWithPreds? =  => ActionFn(175);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action175::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant69(__nt), __end));
        (0, 121)
    }
    fn __reduce294<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Type = UpperId => ActionFn(20);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action20::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant70(__nt), __end));
        (1, 122)
    }
    fn __reduce295<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Type = UpperId, "[", Sep<LType, ",">, "]" => ActionFn(21);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant4(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action21::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant70(__nt), __end));
        (4, 122)
    }
    fn __reduce296<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Type = "(", Sep<RecordTypeField, ",">, ")" => ActionFn(22);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant62(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action22::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant70(__nt), __end));
        (3, 122)
    }
    fn __reduce297<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeConstrs = ConstructorDecl+ => ActionFn(11);
        let __sym0 = __pop_Variant43(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action11::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant71(__nt), __end));
        (1, 123)
    }
    fn __reduce298<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeDecl = "type", UpperId, TypeParams, TypeDeclRhs => ActionFn(434);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant73(__symbols);
        let __sym2 = __pop_Variant74(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action434::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant72(__nt), __end));
        (4, 124)
    }
    fn __reduce299<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeDecl = "prim", "type", UpperId, TypeParams, NEWLINE => ActionFn(435);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant74(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action435::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant72(__nt), __end));
        (5, 124)
    }
    fn __reduce300<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeDeclRhs = ":", NEWLINE, INDENT, TypeConstrs, DEDENT => ActionFn(7);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant71(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action7::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant73(__nt), __end));
        (5, 125)
    }
    fn __reduce301<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeDeclRhs = ":", NEWLINE, INDENT, NamedFields, DEDENT => ActionFn(8);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant53(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action8::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant73(__nt), __end));
        (5, 125)
    }
    fn __reduce302<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeParams =  => ActionFn(9);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action9::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant74(__nt), __end));
        (0, 126)
    }
    fn __reduce303<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeParams = "[", Sep<UpperId, ",">, "]" => ActionFn(10);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant63(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action10::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant74(__nt), __end));
        (3, 126)
    }
    fn __reduce304<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // UnnamedFields = UnnamedFields, ",", Type => ActionFn(17);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant70(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant75(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action17::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant75(__nt), __end));
        (3, 127)
    }
    fn __reduce305<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // UnnamedFields = Type => ActionFn(18);
        let __sym0 = __pop_Variant70(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action18::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant75(__nt), __end));
        (1, 127)
    }
    fn __reduce306<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // UpperId? = UpperId => ActionFn(210);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action210::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (1, 128)
    }
    fn __reduce307<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // UpperId? =  => ActionFn(211);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action211::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (0, 128)
    }
    fn __reduce308<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // __LExpr = LExpr => ActionFn(1);
        let __sym0 = __pop_Variant47(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action1::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 129)
    }
    fn __reduce310<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // __TopDecls = TopDecls => ActionFn(2);
        let __sym0 = __pop_Variant67(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action2::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant67(__nt), __end));
        (1, 131)
    }
}
#[allow(unused_imports)]
pub use self::__parse__LStmt::LStmtParser;

#[rustfmt::skip]
#[allow(non_snake_case, non_camel_case_types, unused_mut, unused_variables, unused_imports, unused_parens, clippy::needless_lifetimes, clippy::type_complexity, clippy::needless_return, clippy::too_many_arguments, clippy::never_loop, clippy::match_single_binding, clippy::needless_raw_string_hashes)]
mod __parse__TopDecls {

    use crate::ast::*;
    use crate::token::{TokenKind, Token};
    use crate::interpolation::parse_string_parts;
    use std::convert::Infallible;
    use std::rc::Rc;
    use lexgen_util::{LexerError, Loc};
    use smol_str::SmolStr;
    #[allow(unused_extern_crates)]
    extern crate lalrpop_util as __lalrpop_util;
    #[allow(unused_imports)]
    use self::__lalrpop_util::state_machine as __state_machine;
    extern crate core;
    extern crate alloc;
    use super::__ToTriple;
    #[allow(dead_code)]
    pub(crate) enum __Symbol<>
     {
        Variant0(Token),
        Variant1(core::option::Option<Token>),
        Variant2(L<Type>),
        Variant3(core::option::Option<L<Type>>),
        Variant4(Vec<L<Type>>),
        Variant5(core::option::Option<Vec<L<Type>>>),
        Variant6(Vec<L<(L<SmolStr>, Vec<L<Type>>)>>),
        Variant7(core::option::Option<Vec<L<(L<SmolStr>, Vec<L<Type>>)>>>),
        Variant8((L<Expr>, Vec<L<Stmt>>)),
        Variant9(alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>),
        Variant10(Vec<L<Stmt>>),
        Variant11(core::option::Option<Vec<L<Stmt>>>),
        Variant12((Token, core::option::Option<Token>)),
        Variant13(core::option::Option<(Token, core::option::Option<Token>)>),
        Variant14((Token, L<Type>)),
        Variant15(alloc::vec::Vec<(Token, L<Type>)>),
        Variant16(CallArg),
        Variant17(alloc::vec::Vec<CallArg>),
        Variant18(alloc::vec::Vec<L<Type>>),
        Variant19(L<SmolStr>),
        Variant20(core::option::Option<L<SmolStr>>),
        Variant21(core::option::Option<(Token, L<Type>)>),
        Variant22((SmolStr, Type)),
        Variant23(alloc::vec::Vec<(SmolStr, Type)>),
        Variant24((Option<SmolStr>, L<Expr>)),
        Variant25(alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>),
        Variant26((Option<SmolStr>, L<Pat>)),
        Variant27(alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>),
        Variant28(Named<Type>),
        Variant29(alloc::vec::Vec<Named<Type>>),
        Variant30(L<(L<SmolStr>, Vec<L<Type>>)>),
        Variant31(alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>),
        Variant32(alloc::vec::Vec<Token>),
        Variant33(Loc),
        Variant34(Alt),
        Variant35(alloc::vec::Vec<Alt>),
        Variant36(Vec<Alt>),
        Variant37(AssignOp),
        Variant38(Expr),
        Variant39(core::option::Option<CallArg>),
        Variant40(ConstrPattern),
        Variant41(Constructor),
        Variant42(ConstructorDecl),
        Variant43(alloc::vec::Vec<ConstructorDecl>),
        Variant44(L<FunDecl>),
        Variant45(FunSig),
        Variant46(L<ImportDecl>),
        Variant47(L<Expr>),
        Variant48(L<FunSig>),
        Variant49(alloc::vec::Vec<L<FunSig>>),
        Variant50(L<Pat>),
        Variant51(L<Stmt>),
        Variant52(alloc::vec::Vec<L<Stmt>>),
        Variant53(Vec<(SmolStr, Type)>),
        Variant54(core::option::Option<(Option<SmolStr>, L<Expr>)>),
        Variant55(Pat),
        Variant56(core::option::Option<(Option<SmolStr>, L<Pat>)>),
        Variant57(core::option::Option<Named<Type>>),
        Variant58(Vec<(Token, L<Type>)>),
        Variant59(Vec<CallArg>),
        Variant60(Vec<(Option<SmolStr>, L<Expr>)>),
        Variant61(Vec<(Option<SmolStr>, L<Pat>)>),
        Variant62(Vec<Named<Type>>),
        Variant63(Vec<Token>),
        Variant64(Stmt),
        Variant65(L<TopDecl>),
        Variant66(alloc::vec::Vec<L<TopDecl>>),
        Variant67(Vec<L<TopDecl>>),
        Variant68(L<TraitDecl>),
        Variant69(core::option::Option<L<(L<SmolStr>, Vec<L<Type>>)>>),
        Variant70(Type),
        Variant71(Vec<ConstructorDecl>),
        Variant72(L<TypeDecl>),
        Variant73(TypeDeclRhs),
        Variant74(Vec<SmolStr>),
        Variant75(Vec<Type>),
    }
    const __ACTION: &[i16] = &[
        // State 0
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
        // State 1
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 0, 0,
        // State 2
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
        // State 3
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 123, 0, 0, 124,
        // State 4
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -263, 0, 127,
        // State 5
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 6
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -303, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 7
        0, 0, 0, 0, -227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
        // State 8
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
        // State 9
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 123, 0, 0, 0,
        // State 10
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -303, 0, 0,
        // State 11
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 12
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -259, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
        // State 13
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 21, 0, 0, 0, 22, 23, 0, 24, 163, 0, 0, 25, 0, 0, 0, 0, 164, -193, 0, 165, 166, 0, 167, 168,
        // State 14
        0, 0, 0, 0, -227, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
        // State 15
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -257, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
        // State 16
        0, 0, 0, 0, 0, 0, 0, 182, 0, 0, 183, 0, 0, 0, 0, 0, 184, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 17
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 21, 0, 0, 0, 22, 23, 0, 24, 163, 0, 0, 25, 0, 0, 0, 0, 164, -194, 0, 165, 166, 0, 167, 168,
        // State 18
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 19
        19, 0, 0, 20, -243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 194, 0, 167, 168,
        // State 20
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 21
        0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 203, 0, 0, 0, 204, 0, 205, 206,
        // State 22
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 23
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 24
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 25
        0, 0, 0, 0, -227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
        // State 26
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 27
        0, 0, 0, 50, 0, 0, 0, 0, -235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 28
        0, 0, 0, 0, -227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
        // State 29
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
        // State 30
        19, 0, 0, 20, -231, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 225, 0, 167, 168,
        // State 31
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 32
        0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 33
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 34
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 35
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 36
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 37
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 38
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 39
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 40
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 41
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 42
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 43
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 44
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 45
        19, 0, 0, 20, -245, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 194, 0, 167, 168,
        // State 46
        0, 0, 0, 47, -247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 203, 0, 0, 0, 249, 0, 205, 206,
        // State 47
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 48
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 49
        0, 0, 0, 50, -251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 261, 0, 0, 215,
        // State 50
        0, 0, 0, 50, 0, 0, 0, 0, -237, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -237, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 51
        0, 0, 0, 0, -227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
        // State 52
        0, 0, 0, 0, -227, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
        // State 53
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 273,
        // State 54
        19, 0, 0, 20, -233, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 225, 0, 167, 168,
        // State 55
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 56
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 57
        0, 0, 0, 47, -247, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 203, 0, 0, 0, 249, 0, 205, 206,
        // State 58
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 59
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 60
        0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 203, 0, 0, 0, 204, 0, 205, 206,
        // State 61
        0, 0, 0, 47, -249, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 203, 0, 0, 0, 249, 0, 205, 206,
        // State 62
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 63
        0, 0, 0, 50, -253, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 261, 0, 0, 215,
        // State 64
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 65
        0, 0, 0, 0, -227, 0, 0, 0, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
        // State 66
        0, 0, 0, 0, -227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
        // State 67
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -204, 0, 0, 272, 0, 0, 0,
        // State 68
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -298, 0, 0, 0, 0, 0, 273,
        // State 69
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 70
        0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 203, 0, 0, 0, 204, 0, 205, 206,
        // State 71
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 72
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 73
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -241, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 74
        0, 0, 0, 0, -227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
        // State 75
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 76
        0, 0, 0, 0, -227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
        // State 77
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 78
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 79
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 21, 0, 0, 0, 22, 23, 0, 24, 163, 0, 0, 25, 0, 0, 0, 0, 164, -193, 0, 165, 166, 0, 167, 168,
        // State 80
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 81
        0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 203, -92, 0, 0, 204, 0, 205, 206,
        // State 82
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 21, 0, 0, 0, 22, 23, 0, 24, 163, 0, 0, 25, 0, 0, 0, 0, 164, -193, 0, 165, 166, 0, 167, 168,
        // State 83
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 84
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 85
        0, 0, 0, 0, -227, 0, 0, 0, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
        // State 86
        0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 203, -93, 0, 0, 204, 0, 205, 206,
        // State 87
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 88
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 89
        0, 0, 0, 0, -227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
        // State 90
        0, 0, 0, 50, 362, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 91
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
        // State 92
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 21, 0, 0, 0, 22, 23, 0, 24, 163, 0, 0, 25, 0, 0, 0, 0, 164, -193, 0, 165, 166, 0, 167, 168,
        // State 93
        -99, 0, 0, -99, -99, 0, 0, 0, -99, 0, 0, 0, 0, -99, 0, 0, 0, 0, 0, 0, 0, -99, -99, 98, 366, 0, -99, -99, 0, 0, 0, -99, -99, 0, -99, -99, 0, 0, -99, 0, 0, 0, 0, -99, -99, 0, -99, -99, -99, -99, -99,
        // State 94
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 21, 0, 0, 0, 22, 23, 0, 24, 163, 0, 0, 25, 0, 0, 0, 0, 164, 0, 0, 165, 166, 368, 167, 168,
        // State 95
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 96
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 97
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 98
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 99
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 23, 0, 24, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 165, 166, 0, 167, 168,
        // State 100
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 21, 0, 0, 0, 22, 23, 0, 24, 163, 0, 0, 25, 0, 0, 0, 0, 164, -193, 0, 165, 166, 0, 167, 168,
        // State 101
        0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
        // State 102
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 21, 0, 0, 0, 22, 23, 0, 24, 163, 0, 0, 25, 0, 0, 0, 0, 164, -193, 0, 165, 166, 0, 167, 168,
        // State 103
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 21, 0, 0, 0, 22, 23, 0, 24, 163, 0, 0, 25, 0, 0, 0, 0, 164, -193, 0, 165, 166, 0, 167, 168,
        // State 104
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 21, 0, 0, 0, 22, 23, 0, 24, 163, 0, 0, 25, 0, 0, 0, 0, 164, -193, 0, 165, 166, 0, 167, 168,
        // State 105
        19, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 21, 0, 0, 0, 22, 23, 0, 24, 163, 0, 0, 25, 0, 0, 0, 0, 164, -193, 0, 165, 166, 0, 167, 168,
        // State 106
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -277, 0, 0, 0, -277, 0, 0, 0, -277, 0, 0, 0, -277, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -277, 0, 0,
        // State 107
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 108
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -279, 0, 0, 0, -279, 0, 0, 0, -279, 0, 0, 0, -279, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -279, 0, 0,
        // State 109
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -283, 0, 0, 0, -283, 0, 0, 0, -283, 0, 0, 0, -283, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -283, 0, 0,
        // State 110
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 111
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -275, 0, 0, 0, -275, 0, 0, 0, -275, 0, 0, 0, -275, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -275, 0, 0,
        // State 112
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7,
        // State 113
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -201, 0, 0, 0, -201, 0, 0, 0, -201, 0, 0, 0, -201, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -201, 0, 0,
        // State 114
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
        // State 115
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -278, 0, 0, 0, -278, 0, 0, 0, -278, 0, 0, 0, -278, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -278, 0, 0,
        // State 116
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -280, 0, 0, 0, -280, 0, 0, 0, -280, 0, 0, 0, -280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -280, 0, 0,
        // State 117
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -276, 0, 0, 0, -276, 0, 0, 0, -276, 0, 0, 0, -276, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -276, 0, 0,
        // State 118
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -202, 0, 0, 0, -202, 0, 0, 0, -202, 0, 0, 0, -202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -202, 0, 0,
        // State 119
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -284, 0, 0, 0, -284, 0, 0, 0, -284, 0, 0, 0, -284, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -284, 0, 0,
        // State 120
        0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 121
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 122
        0, 0, 0, -186, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -186, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 123
        0, 0, 0, 0, 0, 0, 0, 0, -198, 0, 0, -198, 0, -198, 0, 0, 0, 0, 0, 0, 0, -198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 124
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -265, 0, 131,
        // State 125
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0,
        // State 126
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -262, 0, 0,
        // State 127
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
        // State 128
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11,
        // State 129
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0,
        // State 130
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -264, 0, 0,
        // State 131
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -144, 0, 0, 0, -144, 0, 0, 0, -144, 0, 0, 0, -144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -144, 0, 0,
        // State 132
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -82, 0, -82,
        // State 133
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -119, 0, 0, 0, -119, 0, 0, 0, -119, 0, 0, 0, -119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -119, 0, 0,
        // State 134
        0, 0, 0, 0, -229, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
        // State 135
        0, 0, 0, 0, 170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 136
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 137
        0, 0, 0, 0, 0, 0, 0, 0, -291, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, -291, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 138
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 173, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 139
        0, 0, 0, 0, 0, 0, 0, 0, 174, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 140
        0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 141
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -83, 0, -83,
        // State 142
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
        // State 143
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -299, 0, 0, 0, -299, 0, 0, 0, -299, 0, 0, 0, -299, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -299, 0, 0,
        // State 144
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
        // State 145
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -261, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
        // State 146
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 147
        0, 0, 0, 0, 0, 0, 0, 0, 179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 148
        -272, 0, 0, -272, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -272, 0, 0, 0, -272, -272, 0, 0, 0, -272, -272, 0, -272, -272, 0, 0, -272, 0, 0, 0, 0, -272, -272, 0, -272, -272, 0, -272, -272,
        // State 149
        0, 0, 0, 0, 0, 0, 0, -185, 0, 0, -185, 0, 0, 0, 0, 0, -185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
        // State 150
        0, -159, -159, 31, -159, -159, -159, -159, -159, -159, -159, 181, -159, -159, -159, -159, -159, -159, -159, -159, 32, -159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -159, 0, 0, 0, 0, 0, 0, -159, 0, 0,
        // State 151
        0, -161, -161, 0, -161, -161, -161, -161, -161, -161, -161, 0, 33, -161, -161, -161, -161, -161, -161, -161, 0, -161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -161, 0, 0, 0, 0, 0, 0, -161, 0, 0,
        // State 152
        0, -163, -163, 0, -163, -163, -163, -163, -163, -163, -163, 0, 0, -163, -163, -163, -163, -163, -163, -163, 0, -163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -163, 0, 0, 0, 0, 0, 0, -163, 0, 0,
        // State 153
        0, -166, -166, 0, -166, 34, -166, -166, -166, -166, -166, 0, 0, -166, -166, -166, -166, -166, -166, -166, 0, -166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -166, 0, 0, 0, 0, 0, 0, -166, 0, 0,
        // State 154
        0, -173, -173, 0, -173, 0, 35, -173, -173, 36, -173, 0, 0, -173, -173, -173, -173, -173, -173, -173, 0, -173, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -173, 0, 0, 0, 0, 0, 0, -173, 0, 0,
        // State 155
        0, 37, -175, 0, -175, 0, 0, -175, -175, 0, -175, 0, 0, -175, 38, 39, -175, 40, 41, 42, 0, -175, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -175, 0, 0, 0, 0, 0, 0, -175, 0, 0,
        // State 156
        0, 0, 43, 0, -177, 0, 0, -177, -177, 0, -177, 0, 0, -177, 0, 0, -177, 0, 0, 0, 0, -177, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -177, 0, 0, 0, 0, 0, 0, -177, 0, 0,
        // State 157
        0, 0, 0, 0, -146, 0, 0, -146, -146, 0, -146, 0, 0, -146, 0, 0, -146, 0, 0, 0, 0, -146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, -146, 0, 0,
        // State 158
        -191, 0, 0, -191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -191, -191, 0, 0, 0, -191, -191, 0, -191, -191, 0, 0, -191, 0, 0, 0, 0, -191, -191, 0, -191, -191, 0, -191, -191,
        // State 159
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
        // State 160
        -188, 0, 0, -188, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -188, 0, 0, 0, -188, -188, 0, 0, 0, -188, -188, 0, -188, -188, 0, 0, -188, 0, 0, 0, 0, -188, -188, 0, -188, -188, 0, -188, -188,
        // State 161
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
        // State 162
        0, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, -147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -147, 0, 0, 0, 0, 0, 0, -147, 0, 0,
        // State 163
        0, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, -153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -153, 0, 0, 0, 0, 0, 0, -153, 0, 0,
        // State 164
        0, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, -151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -151, 0, 0, 0, 0, 0, 0, -151, 0, 0,
        // State 165
        0, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -148, 0, 0, 0, 0, 0, 0, -148, 0, 0,
        // State 166
        0, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, -152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -152, 0, 0, 0, 0, 0, 0, -152, 0, 0,
        // State 167
        0, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, -149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -149, 0, 0, 0, 0, 0, 0, -149, 0, 0,
        // State 168
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 169
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, -143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -143, 0, 0,
        // State 170
        0, 0, 0, 0, 211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 171
        0, 0, 0, 0, 0, 0, 0, 0, 216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 172
        0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 173
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -72,
        // State 174
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -300, 0, 0, 0, -300, 0, 0, 0, -300, 0, 0, 0, -300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -300, 0, 0,
        // State 175
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0,
        // State 176
        0, 0, 0, 0, 0, 0, 0, 0, 221, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -260, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 177
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -304, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -304, 0, 0,
        // State 178
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -77,
        // State 179
        -271, 0, 0, -271, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -271, 0, 0, 0, -271, -271, 0, 0, 0, -271, -271, 0, -271, -271, 0, 0, -271, 0, 0, 0, 0, -271, -271, 0, -271, -271, 0, -271, -271,
        // State 180
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 226, 0, 0, 227,
        // State 181
        -95, 0, 0, -95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -95, 0, 0, 0, 0, -95, 0, -95, -95, 0, 0, 0, 0, 0, 0, 0, -95, 0, 0, -95, -95, 0, -95, -95,
        // State 182
        -96, 0, 0, -96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -96, 0, 0, 0, 0, -96, 0, -96, -96, 0, 0, 0, 0, 0, 0, 0, -96, 0, 0, -96, -96, 0, -96, -96,
        // State 183
        -94, 0, 0, -94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -94, 0, 0, 0, 0, -94, 0, -94, -94, 0, 0, 0, 0, 0, 0, 0, -94, 0, 0, -94, -94, 0, -94, -94,
        // State 184
        -192, 0, 0, -192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -192, -192, 0, 0, 0, -192, -192, 0, -192, -192, 0, 0, -192, 0, 0, 0, 0, -192, -192, 0, -192, -192, 0, -192, -192,
        // State 185
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -118, 0, 0, 0, -118, 0, 0, 0, -118, 0, 0, 0, -118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -118, 0, 0,
        // State 186
        0, -160, -160, 0, -160, -160, -160, -160, -160, -160, -160, 0, 0, -160, -160, -160, -160, -160, -160, -160, 0, -160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -160, 0, 0, 0, 0, 0, 0, -160, 0, 0,
        // State 187
        0, 0, 0, 0, -117, 0, 0, 0, -117, 0, 0, 0, 0, -117, 0, 0, 0, 0, 0, 0, 0, -117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -117, 0, 0,
        // State 188
        0, 0, 0, 0, -179, 0, 0, 0, -179, 0, 0, 0, 0, -179, 0, 0, 0, 0, 0, 0, 0, -179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -179, 0, 0,
        // State 189
        0, 0, 0, 0, -116, 0, 0, 0, -116, 0, 0, 0, 0, -116, 0, 0, 0, 0, 0, 0, 0, -116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -116, 0, 0,
        // State 190
        0, 0, 0, 0, -206, 0, 0, 0, -206, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 191
        0, 0, 0, 0, -242, 0, 0, 0, 243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 192
        0, 0, 0, 0, 244, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 193
        0, -148, -148, -148, -148, -148, -148, 0, -148, -148, 0, -148, -148, 0, -148, -148, 56, -148, -148, -148, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 194
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 195
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 245, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 196
        0, 0, 0, 0, -212, 0, 0, 0, -212, 0, 0, 0, 0, -212, 0, 0, -212, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -212, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 197
        0, 0, 0, 58, -106, 0, 0, 0, -106, 0, 0, 0, 0, -106, 0, 0, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 198
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 199
        0, 0, 0, 0, -187, 0, 0, 0, -187, 0, 0, 0, 0, -187, 0, 0, -187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 200
        0, 0, 0, 0, -210, 0, 0, 0, -210, 0, 0, 0, 0, -210, 0, 0, -210, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 201
        0, 0, 0, 0, -214, 0, 0, 0, -214, 0, 0, 0, 0, -214, 0, 0, -214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 202
        0, 0, 0, 0, -216, 0, 0, 0, -216, 0, 0, 0, 0, -216, 0, 0, -216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 203
        0, 0, 0, 0, -211, 0, 0, 0, -211, 0, 0, 0, 0, -211, 0, 0, -211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 204
        0, 0, 0, 0, -215, 0, 0, 0, -215, 0, 0, 0, 0, -215, 0, 0, -215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -215, 0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
        // State 205
        0, 0, 0, -109, -109, 0, 0, 0, -109, 0, 0, 251, 0, -109, 0, 0, -109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 206
        0, 0, 0, 0, -185, 0, 0, -185, -185, 0, -185, 0, 0, -185, 0, 0, -185, 0, 0, 0, 0, -185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -185, 0, 0,
        // State 207
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 208
        0, 0, 0, 0, -145, 0, 0, -145, -145, 0, -145, 0, 0, -145, 0, 0, -145, 0, 0, 0, 0, -145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -145, 0, 0,
        // State 209
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 253, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 210
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 0, 0, -141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -141, 0, 0,
        // State 211
        0, 0, 0, 0, 256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 212
        0, 0, 0, 0, -226, 0, 0, 0, 257, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 213
        0, 0, 0, 0, -195, 0, -195, 0, -195, 0, 0, 0, 0, 0, 0, 0, -195, 0, 0, 0, 0, -195, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -195, 0, 0,
        // State 214
        0, 0, 0, 0, -295, 0, -295, 0, -295, 0, 0, 0, 0, 0, 0, 0, -295, 0, 0, 0, 65, -295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -295, 0, 0,
        // State 215
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -73,
        // State 216
        0, 0, 0, 0, 0, 0, 263, 0, -234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 217
        0, 0, 0, 0, 0, 0, 0, 0, -292, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -292, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 218
        0, 0, 0, 0, 265, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 219
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 267, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 220
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -78,
        // State 221
        0, 0, 0, 0, -230, 0, 0, 0, 275, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 222
        0, 0, 0, 0, -103, 0, 0, 0, -103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 223
        0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 224
        0, -148, -148, -148, -148, -148, -148, 0, -148, -148, 0, -148, -148, 0, -148, -148, 70, -148, -148, -148, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 225
        0, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, -156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -156, 0, 0, 0, 0, 0, 0, -156, 0, 0,
        // State 226
        0, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, -157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -157, 0, 0, 0, 0, 0, 0, -157, 0, 0,
        // State 227
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 277, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 228
        0, -158, -158, 31, -158, -158, -158, -158, -158, -158, -158, 181, -158, -158, -158, -158, -158, -158, -158, -158, 32, -158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -158, 0, 0, 0, 0, 0, 0, -158, 0, 0,
        // State 229
        0, -162, -162, 0, -162, -162, -162, -162, -162, -162, -162, 0, 0, -162, -162, -162, -162, -162, -162, -162, 0, -162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -162, 0, 0, 0, 0, 0, 0, -162, 0, 0,
        // State 230
        0, -164, -164, 0, -164, 34, -164, -164, -164, -164, -164, 0, 0, -164, -164, -164, -164, -164, -164, -164, 0, -164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -164, 0, 0, 0, 0, 0, 0, -164, 0, 0,
        // State 231
        0, -165, -165, 0, -165, 34, -165, -165, -165, -165, -165, 0, 0, -165, -165, -165, -165, -165, -165, -165, 0, -165, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -165, 0, 0, 0, 0, 0, 0, -165, 0, 0,
        // State 232
        0, -168, -168, 0, -168, 0, 35, -168, -168, 36, -168, 0, 0, -168, -168, -168, -168, -168, -168, -168, 0, -168, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -168, 0, 0, 0, 0, 0, 0, -168, 0, 0,
        // State 233
        0, -169, -169, 0, -169, 0, 35, -169, -169, 36, -169, 0, 0, -169, -169, -169, -169, -169, -169, -169, 0, -169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -169, 0, 0, 0, 0, 0, 0, -169, 0, 0,
        // State 234
        0, -171, -171, 0, -171, 0, 35, -171, -171, 36, -171, 0, 0, -171, -171, -171, -171, -171, -171, -171, 0, -171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -171, 0, 0, 0, 0, 0, 0, -171, 0, 0,
        // State 235
        0, -167, -167, 0, -167, 0, 35, -167, -167, 36, -167, 0, 0, -167, -167, -167, -167, -167, -167, -167, 0, -167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -167, 0, 0, 0, 0, 0, 0, -167, 0, 0,
        // State 236
        0, -170, -170, 0, -170, 0, 35, -170, -170, 36, -170, 0, 0, -170, -170, -170, -170, -170, -170, -170, 0, -170, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -170, 0, 0, 0, 0, 0, 0, -170, 0, 0,
        // State 237
        0, -172, -172, 0, -172, 0, 35, -172, -172, 36, -172, 0, 0, -172, -172, -172, -172, -172, -172, -172, 0, -172, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -172, 0, 0, 0, 0, 0, 0, -172, 0, 0,
        // State 238
        0, 37, -174, 0, -174, 0, 0, -174, -174, 0, -174, 0, 0, -174, 38, 39, -174, 40, 41, 42, 0, -174, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -174, 0, 0, 0, 0, 0, 0, -174, 0, 0,
        // State 239
        0, 0, 43, 0, -176, 0, 0, -176, -176, 0, -176, 0, 0, -176, 0, 0, -176, 0, 0, 0, 0, -176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -176, 0, 0, 0, 0, 0, 0, -176, 0, 0,
        // State 240
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
        // State 241
        0, 0, 0, 0, -244, 0, 0, 0, 279, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 242
        -57, 0, 0, -57, -57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -57, 0, 0, 0, 0, -57, 0, -57, -57, 0, 0, 0, 0, 0, 0, 0, -57, 0, 0, -57, -57, 0, -57, -57,
        // State 243
        0, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, -150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -150, 0, 0, 0, 0, 0, 0, -150, 0, 0,
        // State 244
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
        // State 245
        0, 0, 0, 0, -219, 0, 0, 0, -219, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 246
        0, 0, 0, 0, -246, 0, 0, 0, 290, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 247
        0, 0, 0, 0, 291, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 248
        0, 0, 0, 0, -211, 0, 0, 0, -211, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 249
        0, 0, 0, 0, -217, 0, 0, 0, -217, 0, 0, 0, 0, -217, 0, 0, -217, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -217, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 250
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
        // State 251
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 293, 0, 0,
        // State 252
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
        // State 253
        0, 0, 0, 0, -228, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 254
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -131, 0, 0,
        // State 255
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, -139, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -139, 0, 0,
        // State 256
        0, 0, 0, 0, -28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -28, 0, 0, 0,
        // State 257
        0, 0, 0, 0, -250, 0, 0, 0, 298, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 258
        0, 0, 0, 0, 299, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 259
        0, 0, 0, 0, -223, 0, 0, 0, -223, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 260
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 261
        0, 0, 0, 0, 0, 0, 302, 0, -236, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -236, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 262
        0, 0, 0, -38, 0, 0, 0, 0, -38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -38,
        // State 263
        0, 0, 0, 0, 303, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 264
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, -142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -142, 0, 0,
        // State 265
        0, 0, 0, 0, 305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 266
        0, 0, 0, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 267
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -114, 0, 0, 0, 0, 0, -114,
        // State 268
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
        // State 269
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 310, 0, 0, 0, 0, 0, 0,
        // State 270
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
        // State 271
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 272
        0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
        // State 273
        0, 0, 0, 0, -232, 0, 0, 0, 314, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 274
        -33, 0, 0, -33, -33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -33, 0, 0, 0, 0, -33, 0, -33, -33, 0, 0, 0, 0, 0, 0, 0, -33, 0, 0, -33, -33, 0, -33, -33,
        // State 275
        0, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, -155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -155, 0, 0, 0, 0, 0, 0, -155, 0, 0,
        // State 276
        0, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, -154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -154, 0, 0, 0, 0, 0, 0, -154, 0, 0,
        // State 277
        -270, 0, 0, -270, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -270, 0, 0, 0, -270, -270, 0, 0, 0, -270, -270, 0, -270, -270, 0, 0, -270, 0, 0, 0, 0, -270, -270, 0, -270, -270, 0, -270, -270,
        // State 278
        -58, 0, 0, -58, -58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -58, 0, 0, 0, 0, -58, 0, -58, -58, 0, 0, 0, 0, 0, 0, 0, -58, 0, 0, -58, -58, 0, -58, -58,
        // State 279
        0, 0, 0, 0, -205, 0, 0, 0, -205, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 280
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 316, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 281
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0,
        // State 282
        0, 0, 0, 0, 317, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 283
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 284
        -178, 0, 0, -178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -178, 0, 0, 0, -178, -178, 0, 0, 0, -178, -178, 0, -178, -178, 0, 0, -178, 0, 0, 0, 0, -178, -178, 0, -178, -178, 0, -178, -178,
        // State 285
        -269, 0, 0, -269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -269, 0, 0, 0, -269, -269, 0, 0, 0, -269, -269, 0, -269, -269, 0, 0, -269, 0, 0, 0, 0, -269, -269, 0, -269, -269, 0, -269, -269,
        // State 286
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 318, 0, 0,
        // State 287
        0, 0, 0, 0, -209, 0, 0, 0, -209, 0, 0, 0, 0, -209, 0, 0, -209, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 288
        0, 0, 0, 0, -248, 0, 0, 0, 319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 289
        0, 0, 0, -62, -62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -62, 0, 0, 0, -62, 0, -62, -62,
        // State 290
        0, 0, 0, 0, -213, 0, 0, 0, -213, 0, 0, 0, 0, -213, 0, 0, -213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 291
        0, 0, 0, -108, -108, 0, 0, 0, -108, 0, 0, 0, 0, -108, 0, 0, -108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 292
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0,
        // State 293
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 0, 0,
        // State 294
        0, 0, 0, 0, -29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -29, 0, 0, 0,
        // State 295
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -129, 0, 0,
        // State 296
        0, 0, 0, 0, -252, 0, 0, 0, 322, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 297
        0, 0, 0, -67, -67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -67, 0, 0, -67,
        // State 298
        0, 0, 0, 0, -297, 0, -297, 0, -297, 0, 0, 0, 0, 0, 0, 0, -297, 0, 0, 0, 0, -297, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -297, 0, 0,
        // State 299
        0, 0, 0, 0, 0, 0, 0, 0, 325, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -238, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 300
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 326, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 301
        0, 0, 0, -39, 0, 0, 0, 0, -39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -39,
        // State 302
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, -137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -137, 0, 0,
        // State 303
        0, 0, 0, 0, 327, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 304
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 0, 0, -140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -140, 0, 0,
        // State 305
        0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 306
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
        // State 307
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -115, 0, 0, 0, 0, 0, -115,
        // State 308
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -52, 0, 0, -52, 0, 0, 0,
        // State 309
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -302, 0, 0, 0, -302, 0, 0, 0, -302, 0, 0, 0, -302, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -302, 0, 0,
        // State 310
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -301, 0, 0, 0, -301, 0, 0, 0, -301, 0, 0, 0, -301, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -301, 0, 0,
        // State 311
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
        // State 312
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -110, 0, 0, 0, 0, 0, -110,
        // State 313
        -34, 0, 0, -34, -34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -34, 0, 0, 0, 0, -34, 0, -34, -34, 0, 0, 0, 0, 0, 0, 0, -34, 0, 0, -34, -34, 0, -34, -34,
        // State 314
        0, 0, 0, 0, -102, 0, 0, 0, -102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 315
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 337, 0, 0,
        // State 316
        0, 0, 0, 0, -107, 0, 0, 0, -107, 0, 0, 0, 0, -107, 0, 0, -107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 317
        -267, 0, 0, -267, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -267, 0, 0, 0, -267, -267, 0, 0, 0, -267, -267, 0, -267, -267, 0, 0, -267, 0, 0, 0, 0, -267, -267, 0, -267, -267, 0, -267, -267,
        // State 318
        0, 0, 0, -63, -63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -63, 0, 0, 0, -63, 0, -63, -63,
        // State 319
        0, 0, 0, 0, -218, 0, 0, 0, -218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 320
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -127, 0, 0,
        // State 321
        0, 0, 0, -68, -68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -68, 0, 0, -68,
        // State 322
        0, 0, 0, 0, -222, 0, 0, 0, -222, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 323
        0, 0, 0, 0, 0, 0, 0, 0, 345, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 324
        0, 0, 0, -43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -43,
        // State 325
        0, 0, 0, 0, -296, 0, -296, 0, -296, 0, 0, 0, 0, 0, 0, 0, -296, 0, 0, 0, 0, -296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -296, 0, 0,
        // State 326
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, -135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -135, 0, 0,
        // State 327
        0, 0, 0, 0, 347, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 328
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -130, 0, 0,
        // State 329
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 89, 0, 0, -138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -138, 0, 0,
        // State 330
        0, 0, 0, 0, 349, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 331
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -53, 0, 0, -53, 0, 0, 0,
        // State 332
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -203, 0, 0,
        // State 333
        0, 0, 0, 0, -306, 0, 0, 0, -306, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 334
        0, 0, 0, 0, 351, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 335
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0,
        // State 336
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0,
        // State 337
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
        // State 338
        -268, 0, 0, -268, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -268, 0, 0, 0, -268, -268, 0, 0, 0, -268, -268, 0, -268, -268, 0, 0, -268, 0, 0, 0, 0, -268, -268, 0, -268, -268, 0, -268, -268,
        // State 339
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 352, 0, 0,
        // State 340
        0, 0, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -90, -90, 0, 0, -90, 0, -90, -90,
        // State 341
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 354, 0, 0, 0, 0, 0, 0,
        // State 342
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 343
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
        // State 344
        0, 0, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -44,
        // State 345
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -125, 0, 0,
        // State 346
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, -133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -133, 0, 0,
        // State 347
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -128, 0, 0,
        // State 348
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, -136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -136, 0, 0,
        // State 349
        0, 0, 0, 0, 358, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 350
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
        // State 351
        -266, 0, 0, -266, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -266, 0, 0, 0, -266, -266, 0, 0, 0, -266, -266, 0, -266, -266, 0, 0, -266, 0, 0, 0, 0, -266, -266, 0, -266, -266, 0, -266, -266,
        // State 352
        0, 0, 0, -91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -91, -91, 0, 0, -91, 0, -91, -91,
        // State 353
        -97, 0, 0, -97, -97, 0, 0, 0, -97, 0, 0, 0, 0, -97, 0, 0, 0, 0, 0, 0, 0, -97, -97, 0, 0, 0, -97, -97, 0, 0, 0, -97, -97, 0, -97, -97, 0, 0, -97, 0, 0, 0, 0, -97, -97, 0, -97, -97, -97, -97, -97,
        // State 354
        -274, 0, 0, -274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -274, 0, 0, 0, -274, -274, 0, 0, 0, -274, -274, 0, -274, -274, 0, 0, -274, 0, 0, 0, 0, -274, -274, 0, -274, -274, 0, -274, -274,
        // State 355
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -123, 0, 0,
        // State 356
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -126, 0, 0,
        // State 357
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 0, 0, -134, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -134, 0, 0,
        // State 358
        0, 0, 0, 0, 371, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 359
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -113, 0, 0, 0, 0, 0, -113,
        // State 360
        0, 0, 0, 0, -305, 0, 0, 0, -305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 361
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
        // State 362
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 373, 0, 0, 0, 0, 0, 0,
        // State 363
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
        // State 364
        -101, 0, 0, -101, -101, 0, 0, 0, -101, 0, 0, 0, 0, -101, 0, 0, 0, 0, 0, 0, 0, -101, -101, 100, 375, 0, -101, -101, 0, 0, 0, -101, -101, 0, -101, -101, 0, 0, -101, 0, 0, 0, 0, -101, -101, 0, -101, -101, -101, -101, -101,
        // State 365
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 377, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 366
        0, 0, 0, -87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -87, -87, 0, 0, -87, 0, -87, -87,
        // State 367
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0,
        // State 368
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -121, 0, 0,
        // State 369
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -124, 0, 0,
        // State 370
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, -132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -132, 0, 0,
        // State 371
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0, 0, 0, -112,
        // State 372
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -111, 0, 0, 0, 0, 0, -111,
        // State 373
        -273, 0, 0, -273, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -273, 0, 0, 0, -273, -273, 0, 0, 0, -273, -273, 0, -273, -273, 0, 0, -273, 0, 0, 0, 0, -273, -273, 0, -273, -273, 0, -273, -273,
        // State 374
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 380, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 375
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 381, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 376
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 382, 0, 0,
        // State 377
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -122, 0, 0,
        // State 378
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 385, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        // State 379
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
        // State 380
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 387, 0, 0,
        // State 381
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
        // State 382
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
        // State 383
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -120, 0, 0,
        // State 384
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
        // State 385
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0,
        // State 386
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0,
        // State 387
        0, 0, 0, -86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -86, -86, 0, 0, -86, 0, -86, -86,
        // State 388
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
        // State 389
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 393, 0, 0, 0, 0, 0, 0,
        // State 390
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
        // State 391
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
        // State 392
        -98, 0, 0, -98, -98, 0, 0, 0, -98, 0, 0, 0, 0, -98, 0, 0, 0, 0, 0, 0, 0, -98, -98, 0, 0, 0, -98, -98, 0, 0, 0, -98, -98, 0, -98, -98, 0, 0, -98, 0, 0, 0, 0, -98, -98, 0, -98, -98, -98, -98, -98,
        // State 393
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
        // State 394
        -100, 0, 0, -100, -100, 0, 0, 0, -100, 0, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, -100, -100, 0, 0, 0, -100, -100, 0, 0, 0, -100, -100, 0, -100, -100, 0, 0, -100, 0, 0, 0, 0, -100, -100, 0, -100, -100, -100, -100, -100,
        // State 395
        -15, 0, 0, -15, -15, 0, 0, 0, -15, 0, 0, 0, 0, -15, 0, 0, 0, 0, 0, 0, 0, -15, -15, -15, -15, 0, -15, -15, 0, 0, 0, -15, -15, 0, -15, -15, 0, 0, -15, 0, 0, 0, 0, -15, -15, 0, -15, -15, -15, -15, -15,
        // State 396
        -16, 0, 0, -16, -16, 0, 0, 0, -16, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, 0, -16, -16, -16, -16, 0, -16, -16, 0, 0, 0, -16, -16, 0, -16, -16, 0, 0, -16, 0, 0, 0, 0, -16, -16, 0, -16, -16, -16, -16, -16,
    ];
    fn __action(state: i16, integer: usize) -> i16 {
        __ACTION[(state as usize) * 51 + integer]
    }
    const __EOF_ACTION: &[i16] = &[
        // State 0
        -285,
        // State 1
        0,
        // State 2
        -286,
        // State 3
        0,
        // State 4
        0,
        // State 5
        0,
        // State 6
        0,
        // State 7
        0,
        // State 8
        0,
        // State 9
        0,
        // State 10
        0,
        // State 11
        0,
        // State 12
        0,
        // State 13
        0,
        // State 14
        0,
        // State 15
        0,
        // State 16
        0,
        // State 17
        0,
        // State 18
        0,
        // State 19
        0,
        // State 20
        0,
        // State 21
        0,
        // State 22
        0,
        // State 23
        0,
        // State 24
        0,
        // State 25
        0,
        // State 26
        0,
        // State 27
        0,
        // State 28
        0,
        // State 29
        0,
        // State 30
        0,
        // State 31
        0,
        // State 32
        0,
        // State 33
        0,
        // State 34
        0,
        // State 35
        0,
        // State 36
        0,
        // State 37
        0,
        // State 38
        0,
        // State 39
        0,
        // State 40
        0,
        // State 41
        0,
        // State 42
        0,
        // State 43
        0,
        // State 44
        0,
        // State 45
        0,
        // State 46
        0,
        // State 47
        0,
        // State 48
        0,
        // State 49
        0,
        // State 50
        0,
        // State 51
        0,
        // State 52
        0,
        // State 53
        0,
        // State 54
        0,
        // State 55
        0,
        // State 56
        0,
        // State 57
        0,
        // State 58
        0,
        // State 59
        0,
        // State 60
        0,
        // State 61
        0,
        // State 62
        0,
        // State 63
        0,
        // State 64
        0,
        // State 65
        0,
        // State 66
        0,
        // State 67
        0,
        // State 68
        0,
        // State 69
        0,
        // State 70
        0,
        // State 71
        0,
        // State 72
        0,
        // State 73
        0,
        // State 74
        0,
        // State 75
        0,
        // State 76
        0,
        // State 77
        0,
        // State 78
        0,
        // State 79
        0,
        // State 80
        0,
        // State 81
        0,
        // State 82
        0,
        // State 83
        0,
        // State 84
        0,
        // State 85
        0,
        // State 86
        0,
        // State 87
        0,
        // State 88
        0,
        // State 89
        0,
        // State 90
        0,
        // State 91
        0,
        // State 92
        0,
        // State 93
        0,
        // State 94
        0,
        // State 95
        0,
        // State 96
        0,
        // State 97
        0,
        // State 98
        0,
        // State 99
        0,
        // State 100
        0,
        // State 101
        0,
        // State 102
        0,
        // State 103
        0,
        // State 104
        0,
        // State 105
        0,
        // State 106
        -277,
        // State 107
        0,
        // State 108
        -279,
        // State 109
        -283,
        // State 110
        -311,
        // State 111
        -275,
        // State 112
        0,
        // State 113
        0,
        // State 114
        0,
        // State 115
        -278,
        // State 116
        -280,
        // State 117
        -276,
        // State 118
        0,
        // State 119
        -284,
        // State 120
        0,
        // State 121
        0,
        // State 122
        0,
        // State 123
        0,
        // State 124
        0,
        // State 125
        0,
        // State 126
        0,
        // State 127
        0,
        // State 128
        0,
        // State 129
        0,
        // State 130
        0,
        // State 131
        -144,
        // State 132
        0,
        // State 133
        -119,
        // State 134
        0,
        // State 135
        0,
        // State 136
        0,
        // State 137
        0,
        // State 138
        0,
        // State 139
        0,
        // State 140
        0,
        // State 141
        0,
        // State 142
        0,
        // State 143
        -299,
        // State 144
        0,
        // State 145
        0,
        // State 146
        0,
        // State 147
        0,
        // State 148
        0,
        // State 149
        0,
        // State 150
        0,
        // State 151
        0,
        // State 152
        0,
        // State 153
        0,
        // State 154
        0,
        // State 155
        0,
        // State 156
        0,
        // State 157
        0,
        // State 158
        0,
        // State 159
        0,
        // State 160
        0,
        // State 161
        0,
        // State 162
        0,
        // State 163
        0,
        // State 164
        0,
        // State 165
        0,
        // State 166
        0,
        // State 167
        0,
        // State 168
        0,
        // State 169
        0,
        // State 170
        0,
        // State 171
        0,
        // State 172
        0,
        // State 173
        0,
        // State 174
        -300,
        // State 175
        0,
        // State 176
        0,
        // State 177
        0,
        // State 178
        0,
        // State 179
        0,
        // State 180
        0,
        // State 181
        0,
        // State 182
        0,
        // State 183
        0,
        // State 184
        0,
        // State 185
        -118,
        // State 186
        0,
        // State 187
        0,
        // State 188
        0,
        // State 189
        0,
        // State 190
        0,
        // State 191
        0,
        // State 192
        0,
        // State 193
        0,
        // State 194
        0,
        // State 195
        0,
        // State 196
        0,
        // State 197
        0,
        // State 198
        0,
        // State 199
        0,
        // State 200
        0,
        // State 201
        0,
        // State 202
        0,
        // State 203
        0,
        // State 204
        0,
        // State 205
        0,
        // State 206
        0,
        // State 207
        0,
        // State 208
        0,
        // State 209
        0,
        // State 210
        0,
        // State 211
        0,
        // State 212
        0,
        // State 213
        0,
        // State 214
        0,
        // State 215
        0,
        // State 216
        0,
        // State 217
        0,
        // State 218
        0,
        // State 219
        0,
        // State 220
        0,
        // State 221
        0,
        // State 222
        0,
        // State 223
        0,
        // State 224
        0,
        // State 225
        0,
        // State 226
        0,
        // State 227
        0,
        // State 228
        0,
        // State 229
        0,
        // State 230
        0,
        // State 231
        0,
        // State 232
        0,
        // State 233
        0,
        // State 234
        0,
        // State 235
        0,
        // State 236
        0,
        // State 237
        0,
        // State 238
        0,
        // State 239
        0,
        // State 240
        0,
        // State 241
        0,
        // State 242
        0,
        // State 243
        0,
        // State 244
        0,
        // State 245
        0,
        // State 246
        0,
        // State 247
        0,
        // State 248
        0,
        // State 249
        0,
        // State 250
        0,
        // State 251
        0,
        // State 252
        0,
        // State 253
        0,
        // State 254
        0,
        // State 255
        0,
        // State 256
        0,
        // State 257
        0,
        // State 258
        0,
        // State 259
        0,
        // State 260
        0,
        // State 261
        0,
        // State 262
        0,
        // State 263
        0,
        // State 264
        0,
        // State 265
        0,
        // State 266
        0,
        // State 267
        0,
        // State 268
        0,
        // State 269
        0,
        // State 270
        0,
        // State 271
        0,
        // State 272
        0,
        // State 273
        0,
        // State 274
        0,
        // State 275
        0,
        // State 276
        0,
        // State 277
        0,
        // State 278
        0,
        // State 279
        0,
        // State 280
        0,
        // State 281
        0,
        // State 282
        0,
        // State 283
        0,
        // State 284
        0,
        // State 285
        0,
        // State 286
        0,
        // State 287
        0,
        // State 288
        0,
        // State 289
        0,
        // State 290
        0,
        // State 291
        0,
        // State 292
        0,
        // State 293
        0,
        // State 294
        0,
        // State 295
        0,
        // State 296
        0,
        // State 297
        0,
        // State 298
        0,
        // State 299
        0,
        // State 300
        0,
        // State 301
        0,
        // State 302
        0,
        // State 303
        0,
        // State 304
        0,
        // State 305
        0,
        // State 306
        0,
        // State 307
        0,
        // State 308
        0,
        // State 309
        -302,
        // State 310
        -301,
        // State 311
        0,
        // State 312
        0,
        // State 313
        0,
        // State 314
        0,
        // State 315
        0,
        // State 316
        0,
        // State 317
        0,
        // State 318
        0,
        // State 319
        0,
        // State 320
        0,
        // State 321
        0,
        // State 322
        0,
        // State 323
        0,
        // State 324
        0,
        // State 325
        0,
        // State 326
        0,
        // State 327
        0,
        // State 328
        0,
        // State 329
        0,
        // State 330
        0,
        // State 331
        0,
        // State 332
        0,
        // State 333
        0,
        // State 334
        0,
        // State 335
        0,
        // State 336
        0,
        // State 337
        0,
        // State 338
        0,
        // State 339
        0,
        // State 340
        0,
        // State 341
        0,
        // State 342
        0,
        // State 343
        0,
        // State 344
        0,
        // State 345
        0,
        // State 346
        0,
        // State 347
        0,
        // State 348
        0,
        // State 349
        0,
        // State 350
        0,
        // State 351
        0,
        // State 352
        0,
        // State 353
        0,
        // State 354
        0,
        // State 355
        0,
        // State 356
        0,
        // State 357
        0,
        // State 358
        0,
        // State 359
        0,
        // State 360
        0,
        // State 361
        0,
        // State 362
        0,
        // State 363
        0,
        // State 364
        0,
        // State 365
        0,
        // State 366
        0,
        // State 367
        0,
        // State 368
        0,
        // State 369
        0,
        // State 370
        0,
        // State 371
        0,
        // State 372
        0,
        // State 373
        0,
        // State 374
        0,
        // State 375
        0,
        // State 376
        0,
        // State 377
        0,
        // State 378
        0,
        // State 379
        0,
        // State 380
        0,
        // State 381
        0,
        // State 382
        0,
        // State 383
        0,
        // State 384
        0,
        // State 385
        0,
        // State 386
        0,
        // State 387
        0,
        // State 388
        0,
        // State 389
        0,
        // State 390
        0,
        // State 391
        0,
        // State 392
        0,
        // State 393
        0,
        // State 394
        0,
        // State 395
        0,
        // State 396
        0,
    ];
    fn __goto(state: i16, nt: usize) -> i16 {
        match nt {
            9 => 364,
            16 => 134,
            19 => 54,
            22 => 50,
            25 => 73,
            31 => 67,
            34 => 45,
            37 => 61,
            40 => 63,
            43 => 15,
            46 => 145,
            49 => 124,
            52 => match state {
                86 => 352,
                _ => 340,
            },
            54 => 86,
            55 => 341,
            56 => 44,
            57 => match state {
                19..=20 | 24 | 30..=31 | 44..=45 | 54..=56 | 69 | 97 | 99 => 187,
                59 | 80 => 284,
                _ => 148,
            },
            58 => match state {
                54 => 273,
                _ => 221,
            },
            60 => 196,
            61 => 197,
            62 => match state {
                68 => 307,
                _ => 267,
            },
            63 => 68,
            64 => 188,
            65 => match state {
                1 => 115,
                _ => 106,
            },
            66 => match state {
                5 => 127,
                _ => 107,
            },
            67 => match state {
                1 => 116,
                _ => 108,
            },
            68 => match state {
                19..=20 | 24 | 30..=31 | 44..=45 | 54..=56 | 69 | 97 | 99 => 189,
                22..=23 | 59 | 80 => 206,
                _ => 149,
            },
            69 => match state {
                32 => 228,
                _ => 150,
            },
            70 => 151,
            71 => match state {
                18 => 186,
                33 => 229,
                _ => 152,
            },
            72 => match state {
                34 => 230,
                35 => 231,
                _ => 153,
            },
            73 => match state {
                36 => 232,
                37 => 233,
                38 => 234,
                39 => 235,
                40 => 236,
                41 => 237,
                _ => 154,
            },
            74 => match state {
                42 => 238,
                _ => 155,
            },
            75 => match state {
                43 => 239,
                _ => 156,
            },
            76 => 157,
            77 => match state {
                80 => 338,
                _ => 285,
            },
            78 => match state {
                20 => 195,
                24 => 209,
                30 | 54 => 222,
                31 => 227,
                44 => 240,
                55 => 279,
                56 => 280,
                69 => 314,
                97 => 375,
                99 => 378,
                _ => 190,
            },
            82 => match state {
                22 => 207,
                23 => 208,
                59 => 286,
                80 => 339,
                _ => 16,
            },
            83 => match state {
                9 => 140,
                _ => 120,
            },
            84 => match state {
                21 => 198,
                70 => 319,
                81 | 86 => 342,
                _ => 245,
            },
            85 => match state {
                17 => 184,
                94 => 366,
                _ => 158,
            },
            87 => 17,
            88 => match state {
                79 => 337,
                82 => 343,
                92 => 363,
                100 => 382,
                102 => 389,
                103 => 390,
                104 => 391,
                105 => 393,
                _ => 159,
            },
            89 => match state {
                27 => 216,
                47 => 253,
                48 => 254,
                50 => 261,
                58 => 283,
                62 => 295,
                64 => 299,
                71 => 320,
                73 => 323,
                75 => 328,
                83 => 345,
                84 => 347,
                87 => 355,
                88 => 356,
                95 => 368,
                96 => 369,
                98 => 377,
                101 => 383,
                _ => 212,
            },
            91 => match state {
                3 => 121,
                _ => 137,
            },
            93 => 1,
            94 => match state {
                67 => 306,
                _ => 268,
            },
            95 => match state {
                91 => 362,
                _ => 269,
            },
            96 => match state {
                45 => 241,
                _ => 191,
            },
            98 => match state {
                60 => 287,
                _ => 199,
            },
            99 => 200,
            100 => match state {
                61 => 288,
                _ => 246,
            },
            102 => match state {
                63 => 296,
                _ => 257,
            },
            104 => match state {
                14 => 170,
                25 => 211,
                28 => 218,
                51 => 263,
                52 => 265,
                65 => 303,
                66 => 305,
                74 => 327,
                76 => 330,
                85 => 349,
                89 => 358,
                _ => 135,
            },
            105 => 223,
            106 => 217,
            107 => 300,
            108 => 192,
            109 => match state {
                57 => 282,
                _ => 247,
            },
            110 => 258,
            111 => match state {
                29 => 219,
                _ => 138,
            },
            112 => 146,
            113 => 125,
            114 => 160,
            115 => match state {
                2 => 119,
                _ => 109,
            },
            117 => 2,
            118 => 110,
            120 => match state {
                15 => 171,
                _ => 139,
            },
            122 => match state {
                49 | 63 => 259,
                72 => 322,
                77 => 332,
                78 => 333,
                90 => 360,
                _ => 213,
            },
            123 => 270,
            124 => match state {
                1 => 117,
                _ => 111,
            },
            125 => 143,
            126 => match state {
                10 => 142,
                _ => 11,
            },
            127 => 334,
            _ => 0,
        }
    }
    const __TERMINAL: &[&str] = &[
        r###""!""###,
        r###""!=""###,
        r###""&&""###,
        r###""(""###,
        r###"")""###,
        r###""*""###,
        r###""+""###,
        r###""+=""###,
        r###"",""###,
        r###""-""###,
        r###""-=""###,
        r###"".""###,
        r###""..""###,
        r###"":""###,
        r###""<""###,
        r###""<=""###,
        r###""=""###,
        r###""==""###,
        r###"">""###,
        r###"">=""###,
        r###""[""###,
        r###""]""###,
        r###""_""###,
        r###""elif""###,
        r###""else""###,
        r###""fn""###,
        r###""for""###,
        r###""if""###,
        r###""impl""###,
        r###""import""###,
        r###""in""###,
        r###""let""###,
        r###""match""###,
        r###""prim""###,
        r###""return""###,
        r###""self""###,
        r###""trait""###,
        r###""type""###,
        r###""while""###,
        r###""{""###,
        r###""|""###,
        r###""||""###,
        r###""}""###,
        r###"CharLit"###,
        r###"DEDENT"###,
        r###"INDENT"###,
        r###"IntLit"###,
        r###"LowerId"###,
        r###"NEWLINE"###,
        r###"StringLit"###,
        r###"UpperId"###,
    ];
    fn __expected_tokens(__state: i16) -> alloc::vec::Vec<alloc::string::String> {
        __TERMINAL.iter().enumerate().filter_map(|(index, terminal)| {
            let next_state = __action(__state, index);
            if next_state == 0 {
                None
            } else {
                Some(alloc::string::ToString::to_string(terminal))
            }
        }).collect()
    }
    fn __expected_tokens_from_states<
        'a,
    >(
        __states: &[i16],
        _: core::marker::PhantomData<(&'a ())>,
    ) -> alloc::vec::Vec<alloc::string::String>
    {
        __TERMINAL.iter().enumerate().filter_map(|(index, terminal)| {
            if __accepts(None, __states, Some(index), core::marker::PhantomData::<(&())>) {
                Some(alloc::string::ToString::to_string(terminal))
            } else {
                None
            }
        }).collect()
    }
    struct __StateMachine<'a>
    where 
    {
        module: &'a Rc<str>,
        __phantom: core::marker::PhantomData<(&'a ())>,
    }
    impl<'a> __state_machine::ParserDefinition for __StateMachine<'a>
    where 
    {
        type Location = Loc;
        type Error = LexerError<Infallible>;
        type Token = Token;
        type TokenIndex = usize;
        type Symbol = __Symbol<>;
        type Success = Vec<L<TopDecl>>;
        type StateIndex = i16;
        type Action = i16;
        type ReduceIndex = i16;
        type NonterminalIndex = usize;

        #[inline]
        fn start_location(&self) -> Self::Location {
              Default::default()
        }

        #[inline]
        fn start_state(&self) -> Self::StateIndex {
              0
        }

        #[inline]
        fn token_to_index(&self, token: &Self::Token) -> Option<usize> {
            __token_to_integer(token, core::marker::PhantomData::<(&())>)
        }

        #[inline]
        fn action(&self, state: i16, integer: usize) -> i16 {
            __action(state, integer)
        }

        #[inline]
        fn error_action(&self, state: i16) -> i16 {
            __action(state, 51 - 1)
        }

        #[inline]
        fn eof_action(&self, state: i16) -> i16 {
            __EOF_ACTION[state as usize]
        }

        #[inline]
        fn goto(&self, state: i16, nt: usize) -> i16 {
            __goto(state, nt)
        }

        fn token_to_symbol(&self, token_index: usize, token: Self::Token) -> Self::Symbol {
            __token_to_symbol(token_index, token, core::marker::PhantomData::<(&())>)
        }

        fn expected_tokens(&self, state: i16) -> alloc::vec::Vec<alloc::string::String> {
            __expected_tokens(state)
        }

        fn expected_tokens_from_states(&self, states: &[i16]) -> alloc::vec::Vec<alloc::string::String> {
            __expected_tokens_from_states(states, core::marker::PhantomData::<(&())>)
        }

        #[inline]
        fn uses_error_recovery(&self) -> bool {
            false
        }

        #[inline]
        fn error_recovery_symbol(
            &self,
            recovery: __state_machine::ErrorRecovery<Self>,
        ) -> Self::Symbol {
            panic!("error recovery not enabled for this grammar")
        }

        fn reduce(
            &mut self,
            action: i16,
            start_location: Option<&Self::Location>,
            states: &mut alloc::vec::Vec<i16>,
            symbols: &mut alloc::vec::Vec<__state_machine::SymbolTriple<Self>>,
        ) -> Option<__state_machine::ParseResult<Self>> {
            __reduce(
                self.module,
                action,
                start_location,
                states,
                symbols,
                core::marker::PhantomData::<(&())>,
            )
        }

        fn simulate_reduce(&self, action: i16) -> __state_machine::SimulatedReduce<Self> {
            __simulate_reduce(action, core::marker::PhantomData::<(&())>)
        }
    }
    fn __token_to_integer<
        'a,
    >(
        __token: &Token,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> Option<usize>
    {
        match *__token {
            Token { kind: TokenKind::Exclamation, .. } if true => Some(0),
            Token { kind: TokenKind::ExclamationEq, .. } if true => Some(1),
            Token { kind: TokenKind::AmpAmp, .. } if true => Some(2),
            Token { kind: TokenKind::LParen, .. } if true => Some(3),
            Token { kind: TokenKind::RParen, .. } if true => Some(4),
            Token { kind: TokenKind::Star, .. } if true => Some(5),
            Token { kind: TokenKind::Plus, .. } if true => Some(6),
            Token { kind: TokenKind::PlusEq, .. } if true => Some(7),
            Token { kind: TokenKind::Comma, .. } if true => Some(8),
            Token { kind: TokenKind::Minus, .. } if true => Some(9),
            Token { kind: TokenKind::MinusEq, .. } if true => Some(10),
            Token { kind: TokenKind::Dot, .. } if true => Some(11),
            Token { kind: TokenKind::DotDot, .. } if true => Some(12),
            Token { kind: TokenKind::Colon, .. } if true => Some(13),
            Token { kind: TokenKind::LAngle, .. } if true => Some(14),
            Token { kind: TokenKind::LAngleEq, .. } if true => Some(15),
            Token { kind: TokenKind::Eq, .. } if true => Some(16),
            Token { kind: TokenKind::EqEq, .. } if true => Some(17),
            Token { kind: TokenKind::RAngle, .. } if true => Some(18),
            Token { kind: TokenKind::RAngleEq, .. } if true => Some(19),
            Token { kind: TokenKind::LBracket, .. } if true => Some(20),
            Token { kind: TokenKind::RBracket, .. } if true => Some(21),
            Token { kind: TokenKind::Underscore, .. } if true => Some(22),
            Token { kind: TokenKind::Elif, .. } if true => Some(23),
            Token { kind: TokenKind::Else, .. } if true => Some(24),
            Token { kind: TokenKind::Fn, .. } if true => Some(25),
            Token { kind: TokenKind::For, .. } if true => Some(26),
            Token { kind: TokenKind::If, .. } if true => Some(27),
            Token { kind: TokenKind::Impl, .. } if true => Some(28),
            Token { kind: TokenKind::Import, .. } if true => Some(29),
            Token { kind: TokenKind::In, .. } if true => Some(30),
            Token { kind: TokenKind::Let, .. } if true => Some(31),
            Token { kind: TokenKind::Match, .. } if true => Some(32),
            Token { kind: TokenKind::Prim, .. } if true => Some(33),
            Token { kind: TokenKind::Return, .. } if true => Some(34),
            Token { kind: TokenKind::Self_, .. } if true => Some(35),
            Token { kind: TokenKind::Trait, .. } if true => Some(36),
            Token { kind: TokenKind::Type, .. } if true => Some(37),
            Token { kind: TokenKind::While, .. } if true => Some(38),
            Token { kind: TokenKind::LBrace, .. } if true => Some(39),
            Token { kind: TokenKind::Pipe, .. } if true => Some(40),
            Token { kind: TokenKind::PipePipe, .. } if true => Some(41),
            Token { kind: TokenKind::RBrace, .. } if true => Some(42),
            Token { kind: TokenKind::Char, .. } if true => Some(43),
            Token { kind: TokenKind::Dedent, .. } if true => Some(44),
            Token { kind: TokenKind::Indent, .. } if true => Some(45),
            Token { kind: TokenKind::Int, .. } if true => Some(46),
            Token { kind: TokenKind::LowerId, .. } if true => Some(47),
            Token { kind: TokenKind::Newline, .. } if true => Some(48),
            Token { kind: TokenKind::String, .. } if true => Some(49),
            Token { kind: TokenKind::UpperId, .. } if true => Some(50),
            _ => None,
        }
    }
    fn __token_to_symbol<
        'a,
    >(
        __token_index: usize,
        __token: Token,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> __Symbol<>
    {
        #[allow(clippy::manual_range_patterns)]match __token_index {
            0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 => __Symbol::Variant0(__token),
            _ => unreachable!(),
        }
    }
    fn __simulate_reduce<
        'a,
    >(
        __reduce_index: i16,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> __state_machine::SimulatedReduce<__StateMachine<'a>>
    {
        match __reduce_index {
            0 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 0,
                }
            }
            1 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 0,
                }
            }
            2 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 1,
                }
            }
            3 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 2,
                }
            }
            4 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 2,
                }
            }
            5 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 3,
                }
            }
            6 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 4,
                }
            }
            7 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 4,
                }
            }
            8 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 5,
                }
            }
            9 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 6,
                }
            }
            10 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 6,
                }
            }
            11 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 7,
                }
            }
            12 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 8,
                }
            }
            13 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 8,
                }
            }
            14 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 9,
                }
            }
            15 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 9,
                }
            }
            16 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 10,
                }
            }
            17 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 11,
                }
            }
            18 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 11,
                }
            }
            19 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 12,
                }
            }
            20 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 12,
                }
            }
            21 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 13,
                }
            }
            22 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 13,
                }
            }
            23 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 13,
                }
            }
            24 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 14,
                }
            }
            25 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 15,
                }
            }
            26 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 15,
                }
            }
            27 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 16,
                }
            }
            28 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 16,
                }
            }
            29 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 17,
                }
            }
            30 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 18,
                }
            }
            31 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 18,
                }
            }
            32 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 19,
                }
            }
            33 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 19,
                }
            }
            34 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 20,
                }
            }
            35 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 21,
                }
            }
            36 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 21,
                }
            }
            37 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 22,
                }
            }
            38 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 22,
                }
            }
            39 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 23,
                }
            }
            40 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 24,
                }
            }
            41 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 24,
                }
            }
            42 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 25,
                }
            }
            43 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 25,
                }
            }
            44 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 26,
                }
            }
            45 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 27,
                }
            }
            46 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 27,
                }
            }
            47 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 28,
                }
            }
            48 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 29,
                }
            }
            49 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 29,
                }
            }
            50 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 30,
                }
            }
            51 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 31,
                }
            }
            52 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 31,
                }
            }
            53 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 32,
                }
            }
            54 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 33,
                }
            }
            55 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 33,
                }
            }
            56 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 34,
                }
            }
            57 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 34,
                }
            }
            58 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 35,
                }
            }
            59 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 36,
                }
            }
            60 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 36,
                }
            }
            61 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 37,
                }
            }
            62 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 37,
                }
            }
            63 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 38,
                }
            }
            64 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 39,
                }
            }
            65 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 39,
                }
            }
            66 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 40,
                }
            }
            67 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 40,
                }
            }
            68 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 41,
                }
            }
            69 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 42,
                }
            }
            70 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 42,
                }
            }
            71 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 43,
                }
            }
            72 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 43,
                }
            }
            73 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 44,
                }
            }
            74 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 45,
                }
            }
            75 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 45,
                }
            }
            76 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 46,
                }
            }
            77 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 46,
                }
            }
            78 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 47,
                }
            }
            79 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 48,
                }
            }
            80 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 48,
                }
            }
            81 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 49,
                }
            }
            82 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 49,
                }
            }
            83 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 50,
                }
            }
            84 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 51,
                }
            }
            85 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 52,
                }
            }
            86 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 52,
                }
            }
            87 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 53,
                }
            }
            88 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 53,
                }
            }
            89 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 54,
                }
            }
            90 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 54,
                }
            }
            91 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 55,
                }
            }
            92 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 55,
                }
            }
            93 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 56,
                }
            }
            94 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 56,
                }
            }
            95 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 56,
                }
            }
            96 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 57,
                }
            }
            97 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 57,
                }
            }
            98 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 57,
                }
            }
            99 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 57,
                }
            }
            100 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 57,
                }
            }
            101 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 58,
                }
            }
            102 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 58,
                }
            }
            103 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 59,
                }
            }
            104 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 59,
                }
            }
            105 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 60,
                }
            }
            106 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 60,
                }
            }
            107 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 61,
                }
            }
            108 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 61,
                }
            }
            109 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 62,
                }
            }
            110 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 62,
                }
            }
            111 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 62,
                }
            }
            112 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 62,
                }
            }
            113 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 63,
                }
            }
            114 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 63,
                }
            }
            115 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 64,
                }
            }
            116 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 64,
                }
            }
            117 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 65,
                }
            }
            118 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 65,
                }
            }
            119 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 14,
                    nonterminal_produced: 66,
                }
            }
            120 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 66,
                }
            }
            121 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 13,
                    nonterminal_produced: 66,
                }
            }
            122 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 66,
                }
            }
            123 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 66,
                }
            }
            124 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 66,
                }
            }
            125 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 66,
                }
            }
            126 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 66,
                }
            }
            127 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 66,
                }
            }
            128 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 66,
                }
            }
            129 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 66,
                }
            }
            130 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 66,
                }
            }
            131 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 12,
                    nonterminal_produced: 66,
                }
            }
            132 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 66,
                }
            }
            133 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 66,
                }
            }
            134 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 66,
                }
            }
            135 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 66,
                }
            }
            136 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 66,
                }
            }
            137 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 66,
                }
            }
            138 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 66,
                }
            }
            139 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 66,
                }
            }
            140 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 66,
                }
            }
            141 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 66,
                }
            }
            142 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 66,
                }
            }
            143 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 67,
                }
            }
            144 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 68,
                }
            }
            145 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 68,
                }
            }
            146 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            147 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            148 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            149 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 69,
                }
            }
            150 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            151 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            152 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 69,
                }
            }
            153 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 69,
                }
            }
            154 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 69,
                }
            }
            155 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 69,
                }
            }
            156 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 69,
                }
            }
            157 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 70,
                }
            }
            158 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 70,
                }
            }
            159 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 71,
                }
            }
            160 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 71,
                }
            }
            161 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 72,
                }
            }
            162 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 72,
                }
            }
            163 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 73,
                }
            }
            164 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 73,
                }
            }
            165 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 73,
                }
            }
            166 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            167 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            168 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            169 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            170 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            171 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 74,
                }
            }
            172 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 74,
                }
            }
            173 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 75,
                }
            }
            174 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 75,
                }
            }
            175 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 76,
                }
            }
            176 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 76,
                }
            }
            177 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 77,
                }
            }
            178 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 78,
                }
            }
            179 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 79,
                }
            }
            180 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 80,
                }
            }
            181 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 80,
                }
            }
            182 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 81,
                }
            }
            183 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 81,
                }
            }
            184 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 82,
                }
            }
            185 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 83,
                }
            }
            186 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 84,
                }
            }
            187 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 85,
                }
            }
            188 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 86,
                }
            }
            189 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 86,
                }
            }
            190 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 87,
                }
            }
            191 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 87,
                }
            }
            192 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 88,
                }
            }
            193 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 88,
                }
            }
            194 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 89,
                }
            }
            195 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 90,
                }
            }
            196 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 90,
                }
            }
            197 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 91,
                }
            }
            198 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 92,
                }
            }
            199 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 92,
                }
            }
            200 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 93,
                }
            }
            201 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 93,
                }
            }
            202 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 94,
                }
            }
            203 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 95,
                }
            }
            204 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 96,
                }
            }
            205 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 96,
                }
            }
            206 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 97,
                }
            }
            207 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 97,
                }
            }
            208 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 98,
                }
            }
            209 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 98,
                }
            }
            210 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            211 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            212 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 99,
                }
            }
            213 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            214 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            215 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 99,
                }
            }
            216 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 99,
                }
            }
            217 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 100,
                }
            }
            218 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 100,
                }
            }
            219 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 101,
                }
            }
            220 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 101,
                }
            }
            221 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 102,
                }
            }
            222 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 102,
                }
            }
            223 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 103,
                }
            }
            224 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 103,
                }
            }
            225 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 104,
                }
            }
            226 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 104,
                }
            }
            227 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 104,
                }
            }
            228 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 104,
                }
            }
            229 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 105,
                }
            }
            230 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 105,
                }
            }
            231 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 105,
                }
            }
            232 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 105,
                }
            }
            233 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 106,
                }
            }
            234 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 106,
                }
            }
            235 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 106,
                }
            }
            236 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 106,
                }
            }
            237 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 107,
                }
            }
            238 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 107,
                }
            }
            239 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 107,
                }
            }
            240 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 107,
                }
            }
            241 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 108,
                }
            }
            242 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 108,
                }
            }
            243 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 108,
                }
            }
            244 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 108,
                }
            }
            245 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 109,
                }
            }
            246 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 109,
                }
            }
            247 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 109,
                }
            }
            248 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 109,
                }
            }
            249 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 110,
                }
            }
            250 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 110,
                }
            }
            251 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 110,
                }
            }
            252 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 110,
                }
            }
            253 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 111,
                }
            }
            254 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 111,
                }
            }
            255 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 111,
                }
            }
            256 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 111,
                }
            }
            257 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 112,
                }
            }
            258 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 112,
                }
            }
            259 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 112,
                }
            }
            260 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 112,
                }
            }
            261 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 113,
                }
            }
            262 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 113,
                }
            }
            263 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 113,
                }
            }
            264 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 113,
                }
            }
            265 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 114,
                }
            }
            266 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 114,
                }
            }
            267 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 6,
                    nonterminal_produced: 114,
                }
            }
            268 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 114,
                }
            }
            269 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 114,
                }
            }
            270 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 114,
                }
            }
            271 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 114,
                }
            }
            272 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 114,
                }
            }
            273 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 7,
                    nonterminal_produced: 114,
                }
            }
            274 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 115,
                }
            }
            275 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 115,
                }
            }
            276 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 115,
                }
            }
            277 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 115,
                }
            }
            278 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 115,
                }
            }
            279 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 115,
                }
            }
            280 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 116,
                }
            }
            281 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 116,
                }
            }
            282 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 117,
                }
            }
            283 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 2,
                    nonterminal_produced: 117,
                }
            }
            284 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 118,
                }
            }
            285 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 118,
                }
            }
            286 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 10,
                    nonterminal_produced: 119,
                }
            }
            287 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 11,
                    nonterminal_produced: 119,
                }
            }
            288 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 8,
                    nonterminal_produced: 119,
                }
            }
            289 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 9,
                    nonterminal_produced: 119,
                }
            }
            290 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 120,
                }
            }
            291 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 120,
                }
            }
            292 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 121,
                }
            }
            293 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 121,
                }
            }
            294 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 122,
                }
            }
            295 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 122,
                }
            }
            296 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 122,
                }
            }
            297 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 123,
                }
            }
            298 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 4,
                    nonterminal_produced: 124,
                }
            }
            299 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 124,
                }
            }
            300 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 125,
                }
            }
            301 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 5,
                    nonterminal_produced: 125,
                }
            }
            302 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 126,
                }
            }
            303 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 126,
                }
            }
            304 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 3,
                    nonterminal_produced: 127,
                }
            }
            305 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 127,
                }
            }
            306 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 128,
                }
            }
            307 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 0,
                    nonterminal_produced: 128,
                }
            }
            308 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 129,
                }
            }
            309 => {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop: 1,
                    nonterminal_produced: 130,
                }
            }
            310 => __state_machine::SimulatedReduce::Accept,
            _ => panic!("invalid reduction index {}", __reduce_index)
        }
    }
    pub struct TopDeclsParser {
        _priv: (),
    }

    impl Default for TopDeclsParser { fn default() -> Self { Self::new() } }
    impl TopDeclsParser {
        pub fn new() -> TopDeclsParser {
            TopDeclsParser {
                _priv: (),
            }
        }

        #[allow(dead_code)]
        pub fn parse<
            'a,
            __TOKEN: __ToTriple<'a, >,
            __TOKENS: IntoIterator<Item=__TOKEN>,
        >(
            &self,
            module: &'a Rc<str>,
            __tokens0: __TOKENS,
        ) -> Result<Vec<L<TopDecl>>, __lalrpop_util::ParseError<Loc, Token, LexerError<Infallible>>>
        {
            let __tokens = __tokens0.into_iter();
            let mut __tokens = __tokens.map(|t| __ToTriple::to_triple(t));
            __state_machine::Parser::drive(
                __StateMachine {
                    module,
                    __phantom: core::marker::PhantomData::<(&())>,
                },
                __tokens,
            )
        }
    }
    fn __accepts<
        'a,
    >(
        __error_state: Option<i16>,
        __states: &[i16],
        __opt_integer: Option<usize>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> bool
    {
        let mut __states = __states.to_vec();
        __states.extend(__error_state);
        loop {
            let mut __states_len = __states.len();
            let __top = __states[__states_len - 1];
            let __action = match __opt_integer {
                None => __EOF_ACTION[__top as usize],
                Some(__integer) => __action(__top, __integer),
            };
            if __action == 0 { return false; }
            if __action > 0 { return true; }
            let (__to_pop, __nt) = match __simulate_reduce(-(__action + 1), core::marker::PhantomData::<(&())>) {
                __state_machine::SimulatedReduce::Reduce {
                    states_to_pop, nonterminal_produced
                } => (states_to_pop, nonterminal_produced),
                __state_machine::SimulatedReduce::Accept => return true,
            };
            __states_len -= __to_pop;
            __states.truncate(__states_len);
            let __top = __states[__states_len - 1];
            let __next_state = __goto(__top, __nt);
            __states.push(__next_state);
        }
    }
    fn __reduce<
        'a,
    >(
        module: &'a Rc<str>,
        __action: i16,
        __lookahead_start: Option<&Loc>,
        __states: &mut alloc::vec::Vec<i16>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> Option<Result<Vec<L<TopDecl>>,__lalrpop_util::ParseError<Loc, Token, LexerError<Infallible>>>>
    {
        let (__pop_states, __nonterminal) = match __action {
            0 => {
                __reduce0(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            1 => {
                __reduce1(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            2 => {
                __reduce2(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            3 => {
                __reduce3(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            4 => {
                __reduce4(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            5 => {
                __reduce5(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            6 => {
                __reduce6(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            7 => {
                __reduce7(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            8 => {
                __reduce8(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            9 => {
                __reduce9(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            10 => {
                __reduce10(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            11 => {
                __reduce11(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            12 => {
                __reduce12(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            13 => {
                __reduce13(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            14 => {
                __reduce14(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            15 => {
                __reduce15(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            16 => {
                __reduce16(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            17 => {
                __reduce17(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            18 => {
                __reduce18(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            19 => {
                __reduce19(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            20 => {
                __reduce20(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            21 => {
                __reduce21(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            22 => {
                __reduce22(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            23 => {
                __reduce23(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            24 => {
                __reduce24(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            25 => {
                __reduce25(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            26 => {
                __reduce26(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            27 => {
                __reduce27(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            28 => {
                __reduce28(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            29 => {
                __reduce29(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            30 => {
                __reduce30(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            31 => {
                __reduce31(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            32 => {
                __reduce32(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            33 => {
                __reduce33(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            34 => {
                __reduce34(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            35 => {
                __reduce35(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            36 => {
                __reduce36(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            37 => {
                __reduce37(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            38 => {
                __reduce38(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            39 => {
                __reduce39(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            40 => {
                __reduce40(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            41 => {
                __reduce41(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            42 => {
                __reduce42(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            43 => {
                __reduce43(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            44 => {
                __reduce44(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            45 => {
                __reduce45(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            46 => {
                __reduce46(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            47 => {
                __reduce47(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            48 => {
                __reduce48(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            49 => {
                __reduce49(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            50 => {
                __reduce50(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            51 => {
                __reduce51(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            52 => {
                __reduce52(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            53 => {
                __reduce53(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            54 => {
                __reduce54(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            55 => {
                __reduce55(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            56 => {
                __reduce56(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            57 => {
                __reduce57(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            58 => {
                __reduce58(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            59 => {
                __reduce59(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            60 => {
                __reduce60(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            61 => {
                __reduce61(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            62 => {
                __reduce62(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            63 => {
                __reduce63(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            64 => {
                __reduce64(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            65 => {
                __reduce65(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            66 => {
                __reduce66(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            67 => {
                __reduce67(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            68 => {
                __reduce68(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            69 => {
                __reduce69(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            70 => {
                __reduce70(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            71 => {
                __reduce71(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            72 => {
                __reduce72(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            73 => {
                __reduce73(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            74 => {
                __reduce74(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            75 => {
                __reduce75(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            76 => {
                __reduce76(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            77 => {
                __reduce77(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            78 => {
                __reduce78(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            79 => {
                __reduce79(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            80 => {
                __reduce80(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            81 => {
                __reduce81(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            82 => {
                __reduce82(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            83 => {
                __reduce83(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            84 => {
                __reduce84(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            85 => {
                __reduce85(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            86 => {
                __reduce86(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            87 => {
                __reduce87(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            88 => {
                __reduce88(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            89 => {
                __reduce89(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            90 => {
                __reduce90(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            91 => {
                __reduce91(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            92 => {
                __reduce92(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            93 => {
                __reduce93(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            94 => {
                __reduce94(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            95 => {
                __reduce95(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            96 => {
                __reduce96(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            97 => {
                __reduce97(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            98 => {
                __reduce98(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            99 => {
                __reduce99(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            100 => {
                __reduce100(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            101 => {
                __reduce101(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            102 => {
                __reduce102(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            103 => {
                __reduce103(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            104 => {
                __reduce104(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            105 => {
                __reduce105(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            106 => {
                __reduce106(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            107 => {
                __reduce107(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            108 => {
                __reduce108(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            109 => {
                __reduce109(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            110 => {
                __reduce110(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            111 => {
                __reduce111(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            112 => {
                __reduce112(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            113 => {
                __reduce113(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            114 => {
                __reduce114(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            115 => {
                __reduce115(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            116 => {
                __reduce116(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            117 => {
                __reduce117(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            118 => {
                __reduce118(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            119 => {
                __reduce119(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            120 => {
                __reduce120(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            121 => {
                __reduce121(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            122 => {
                __reduce122(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            123 => {
                __reduce123(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            124 => {
                __reduce124(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            125 => {
                __reduce125(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            126 => {
                __reduce126(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            127 => {
                __reduce127(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            128 => {
                __reduce128(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            129 => {
                __reduce129(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            130 => {
                __reduce130(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            131 => {
                __reduce131(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            132 => {
                __reduce132(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            133 => {
                __reduce133(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            134 => {
                __reduce134(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            135 => {
                __reduce135(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            136 => {
                __reduce136(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            137 => {
                __reduce137(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            138 => {
                __reduce138(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            139 => {
                __reduce139(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            140 => {
                __reduce140(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            141 => {
                __reduce141(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            142 => {
                __reduce142(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            143 => {
                __reduce143(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            144 => {
                __reduce144(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            145 => {
                __reduce145(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            146 => {
                __reduce146(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            147 => {
                __reduce147(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            148 => {
                __reduce148(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            149 => {
                __reduce149(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            150 => {
                __reduce150(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            151 => {
                __reduce151(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            152 => {
                __reduce152(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            153 => {
                __reduce153(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            154 => {
                __reduce154(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            155 => {
                __reduce155(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            156 => {
                __reduce156(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            157 => {
                __reduce157(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            158 => {
                __reduce158(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            159 => {
                __reduce159(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            160 => {
                __reduce160(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            161 => {
                __reduce161(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            162 => {
                __reduce162(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            163 => {
                __reduce163(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            164 => {
                __reduce164(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            165 => {
                __reduce165(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            166 => {
                __reduce166(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            167 => {
                __reduce167(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            168 => {
                __reduce168(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            169 => {
                __reduce169(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            170 => {
                __reduce170(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            171 => {
                __reduce171(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            172 => {
                __reduce172(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            173 => {
                __reduce173(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            174 => {
                __reduce174(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            175 => {
                __reduce175(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            176 => {
                __reduce176(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            177 => {
                __reduce177(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            178 => {
                __reduce178(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            179 => {
                __reduce179(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            180 => {
                __reduce180(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            181 => {
                __reduce181(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            182 => {
                __reduce182(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            183 => {
                __reduce183(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            184 => {
                __reduce184(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            185 => {
                __reduce185(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            186 => {
                __reduce186(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            187 => {
                __reduce187(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            188 => {
                __reduce188(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            189 => {
                __reduce189(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            190 => {
                __reduce190(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            191 => {
                __reduce191(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            192 => {
                __reduce192(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            193 => {
                __reduce193(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            194 => {
                __reduce194(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            195 => {
                __reduce195(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            196 => {
                __reduce196(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            197 => {
                __reduce197(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            198 => {
                __reduce198(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            199 => {
                __reduce199(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            200 => {
                __reduce200(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            201 => {
                __reduce201(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            202 => {
                __reduce202(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            203 => {
                __reduce203(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            204 => {
                __reduce204(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            205 => {
                __reduce205(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            206 => {
                __reduce206(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            207 => {
                __reduce207(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            208 => {
                __reduce208(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            209 => {
                __reduce209(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            210 => {
                __reduce210(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            211 => {
                __reduce211(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            212 => {
                __reduce212(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            213 => {
                __reduce213(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            214 => {
                __reduce214(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            215 => {
                __reduce215(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            216 => {
                __reduce216(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            217 => {
                __reduce217(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            218 => {
                __reduce218(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            219 => {
                __reduce219(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            220 => {
                __reduce220(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            221 => {
                __reduce221(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            222 => {
                __reduce222(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            223 => {
                __reduce223(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            224 => {
                __reduce224(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            225 => {
                __reduce225(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            226 => {
                __reduce226(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            227 => {
                __reduce227(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            228 => {
                __reduce228(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            229 => {
                __reduce229(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            230 => {
                __reduce230(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            231 => {
                __reduce231(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            232 => {
                __reduce232(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            233 => {
                __reduce233(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            234 => {
                __reduce234(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            235 => {
                __reduce235(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            236 => {
                __reduce236(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            237 => {
                __reduce237(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            238 => {
                __reduce238(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            239 => {
                __reduce239(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            240 => {
                __reduce240(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            241 => {
                __reduce241(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            242 => {
                __reduce242(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            243 => {
                __reduce243(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            244 => {
                __reduce244(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            245 => {
                __reduce245(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            246 => {
                __reduce246(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            247 => {
                __reduce247(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            248 => {
                __reduce248(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            249 => {
                __reduce249(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            250 => {
                __reduce250(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            251 => {
                __reduce251(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            252 => {
                __reduce252(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            253 => {
                __reduce253(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            254 => {
                __reduce254(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            255 => {
                __reduce255(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            256 => {
                __reduce256(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            257 => {
                __reduce257(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            258 => {
                __reduce258(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            259 => {
                __reduce259(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            260 => {
                __reduce260(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            261 => {
                __reduce261(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            262 => {
                __reduce262(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            263 => {
                __reduce263(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            264 => {
                __reduce264(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            265 => {
                __reduce265(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            266 => {
                __reduce266(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            267 => {
                __reduce267(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            268 => {
                __reduce268(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            269 => {
                __reduce269(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            270 => {
                __reduce270(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            271 => {
                __reduce271(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            272 => {
                __reduce272(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            273 => {
                __reduce273(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            274 => {
                __reduce274(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            275 => {
                __reduce275(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            276 => {
                __reduce276(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            277 => {
                __reduce277(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            278 => {
                __reduce278(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            279 => {
                __reduce279(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            280 => {
                __reduce280(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            281 => {
                __reduce281(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            282 => {
                __reduce282(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            283 => {
                __reduce283(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            284 => {
                __reduce284(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            285 => {
                __reduce285(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            286 => {
                __reduce286(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            287 => {
                __reduce287(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            288 => {
                __reduce288(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            289 => {
                __reduce289(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            290 => {
                __reduce290(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            291 => {
                __reduce291(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            292 => {
                __reduce292(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            293 => {
                __reduce293(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            294 => {
                __reduce294(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            295 => {
                __reduce295(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            296 => {
                __reduce296(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            297 => {
                __reduce297(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            298 => {
                __reduce298(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            299 => {
                __reduce299(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            300 => {
                __reduce300(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            301 => {
                __reduce301(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            302 => {
                __reduce302(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            303 => {
                __reduce303(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            304 => {
                __reduce304(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            305 => {
                __reduce305(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            306 => {
                __reduce306(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            307 => {
                __reduce307(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            308 => {
                __reduce308(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            309 => {
                __reduce309(module, __lookahead_start, __symbols, core::marker::PhantomData::<(&())>)
            }
            310 => {
                // __TopDecls = TopDecls => ActionFn(2);
                let __sym0 = __pop_Variant67(__symbols);
                let __start = __sym0.0;
                let __end = __sym0.2;
                let __nt = super::__action2::<>(module, __sym0);
                return Some(Ok(__nt));
            }
            _ => panic!("invalid action code {}", __action)
        };
        let __states_len = __states.len();
        __states.truncate(__states_len - __pop_states);
        let __state = *__states.last().unwrap();
        let __next_state = __goto(__state, __nonterminal);
        __states.push(__next_state);
        None
    }
    #[inline(never)]
    fn __symbol_type_mismatch() -> ! {
        panic!("symbol type mismatch")
    }
    fn __pop_Variant8<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (L<Expr>, Vec<L<Stmt>>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant8(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant24<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (Option<SmolStr>, L<Expr>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant24(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant26<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (Option<SmolStr>, L<Pat>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant26(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant22<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (SmolStr, Type), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant22(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant14<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (Token, L<Type>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant14(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant12<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, (Token, core::option::Option<Token>), Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant12(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant34<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Alt, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant34(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant37<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, AssignOp, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant37(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant16<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, CallArg, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant16(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant40<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, ConstrPattern, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant40(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant41<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Constructor, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant41(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant42<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, ConstructorDecl, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant42(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant38<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Expr, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant38(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant45<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, FunSig, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant45(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant30<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<(L<SmolStr>, Vec<L<Type>>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant30(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant47<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<Expr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant47(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant44<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<FunDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant44(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant48<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<FunSig>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant48(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant46<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<ImportDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant46(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant50<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<Pat>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant50(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant19<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<SmolStr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant19(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant51<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<Stmt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant51(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant65<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<TopDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant65(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant68<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<TraitDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant68(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant2<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant2(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant72<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, L<TypeDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant72(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant33<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Loc, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant33(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant28<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Named<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant28(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant55<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Pat, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant55(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant64<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Stmt, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant64(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant0<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Token, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant0(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant70<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Type, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant70(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant73<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, TypeDeclRhs, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant73(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant60<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant60(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant61<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant61(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant53<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<(SmolStr, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant53(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant58<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<(Token, L<Type>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant58(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant36<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<Alt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant36(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant59<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant59(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant71<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<ConstructorDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant71(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant6<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant6(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant10<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<L<Stmt>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant10(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant67<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<L<TopDecl>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant67(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant4<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<L<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant4(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant62<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant62(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant74<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<SmolStr>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant74(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant63<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<Token>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant63(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant75<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, Vec<Type>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant75(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant9<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant9(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant25<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant25(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant27<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant27(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant23<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(SmolStr, Type)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant23(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant15<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<(Token, L<Type>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant15(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant35<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Alt>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant35(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant17<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant17(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant43<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<ConstructorDecl>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant43(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant31<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant31(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant49<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<FunSig>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant49(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant52<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<Stmt>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant52(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant66<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<TopDecl>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant66(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant18<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<L<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant18(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant29<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant29(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant32<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, alloc::vec::Vec<Token>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant32(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant54<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<(Option<SmolStr>, L<Expr>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant54(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant56<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<(Option<SmolStr>, L<Pat>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant56(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant21<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<(Token, L<Type>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant21(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant13<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<(Token, core::option::Option<Token>)>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant13(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant39<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<CallArg>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant39(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant69<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant69(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant20<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<L<SmolStr>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant20(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant3<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<L<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant3(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant57<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Named<Type>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant57(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant1<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Token>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant1(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant7<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Vec<L<(L<SmolStr>, Vec<L<Type>>)>>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant7(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant11<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Vec<L<Stmt>>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant11(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __pop_Variant5<
    >(
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>
    ) -> (Loc, core::option::Option<Vec<L<Type>>>, Loc)
     {
        match __symbols.pop() {
            Some((__l, __Symbol::Variant5(__v), __r)) => (__l, __v, __r),
            _ => __symbol_type_mismatch()
        }
    }
    fn __reduce0<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ","? = "," => ActionFn(156);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action156::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (1, 0)
    }
    fn __reduce1<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ","? =  => ActionFn(157);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action157::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (0, 0)
    }
    fn __reduce2<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <LType>) = ":", LType => ActionFn(138);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action138::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 1)
    }
    fn __reduce3<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <LType>)? = ":", LType => ActionFn(245);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action245::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (2, 2)
    }
    fn __reduce4<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <LType>)? =  => ActionFn(137);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action137::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (0, 2)
    }
    fn __reduce5<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <Sep<LType, "+">>) = ":", Sep<LType, "+"> => ActionFn(120);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant4(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action120::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 3)
    }
    fn __reduce6<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <Sep<LType, "+">>)? = ":", Sep<LType, "+"> => ActionFn(252);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant4(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action252::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant5(__nt), __end));
        (2, 4)
    }
    fn __reduce7<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (":" <Sep<LType, "+">>)? =  => ActionFn(119);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action119::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant5(__nt), __end));
        (0, 4)
    }
    fn __reduce8<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("[" <Sep<TyParamWithPreds, ",">> "]") = "[", Sep<TyParamWithPreds, ",">, "]" => ActionFn(146);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant6(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action146::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (3, 5)
    }
    fn __reduce9<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("[" <Sep<TyParamWithPreds, ",">> "]")? = "[", Sep<TyParamWithPreds, ",">, "]" => ActionFn(255);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant6(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action255::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (3, 6)
    }
    fn __reduce10<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("[" <Sep<TyParamWithPreds, ",">> "]")? =  => ActionFn(145);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action145::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant7(__nt), __end));
        (0, 6)
    }
    fn __reduce11<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT) = "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(130);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action130::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant8(__nt), __end));
        (7, 7)
    }
    fn __reduce12<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)* =  => ActionFn(128);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action128::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (0, 8)
    }
    fn __reduce13<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)* = ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ => ActionFn(129);
        let __sym0 = __pop_Variant9(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action129::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (1, 8)
    }
    fn __reduce14<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ = "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(260);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action260::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (7, 9)
    }
    fn __reduce15<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ = ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+, "elif", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(261);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant10(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant9(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action261::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant9(__nt), __end));
        (8, 9)
    }
    fn __reduce16<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT) = "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(127);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant10(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action127::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (6, 10)
    }
    fn __reduce17<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT)? = "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(264);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant10(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action264::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (6, 11)
    }
    fn __reduce18<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("else" ":" NEWLINE INDENT <LStmts> DEDENT)? =  => ActionFn(126);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action126::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant11(__nt), __end));
        (0, 11)
    }
    fn __reduce19<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?) = "self", "," => ActionFn(241);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action241::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (2, 12)
    }
    fn __reduce20<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?) = "self" => ActionFn(242);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action242::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant12(__nt), __end));
        (1, 12)
    }
    fn __reduce21<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? = "self", "," => ActionFn(269);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action269::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (2, 13)
    }
    fn __reduce22<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? = "self" => ActionFn(270);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action270::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (1, 13)
    }
    fn __reduce23<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ("self" ","?)? =  => ActionFn(142);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action142::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant13(__nt), __end));
        (0, 13)
    }
    fn __reduce24<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",") = LowerId, ":", LType, "," => ActionFn(283);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action283::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (4, 14)
    }
    fn __reduce25<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",")* =  => ActionFn(181);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action181::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (0, 15)
    }
    fn __reduce26<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",")* = (<(<LowerId> ":" <LType>)> ",")+ => ActionFn(182);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action182::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (1, 15)
    }
    fn __reduce27<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",")+ = LowerId, ":", LType, "," => ActionFn(285);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action285::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (4, 16)
    }
    fn __reduce28<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<(<LowerId> ":" <LType>)> ",")+ = (<(<LowerId> ":" <LType>)> ",")+, LowerId, ":", LType, "," => ActionFn(286);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action286::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant15(__nt), __end));
        (5, 16)
    }
    fn __reduce29<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",") = CallArg, "," => ActionFn(204);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant16(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action204::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (2, 17)
    }
    fn __reduce30<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")* =  => ActionFn(202);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action202::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (0, 18)
    }
    fn __reduce31<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")* = (<CallArg> ",")+ => ActionFn(203);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action203::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (1, 18)
    }
    fn __reduce32<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")+ = CallArg, "," => ActionFn(289);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant16(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action289::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (2, 19)
    }
    fn __reduce33<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<CallArg> ",")+ = (<CallArg> ",")+, CallArg, "," => ActionFn(290);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant16(__symbols);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action290::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant17(__nt), __end));
        (3, 19)
    }
    fn __reduce34<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+") = LType, "+" => ActionFn(188);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action188::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 20)
    }
    fn __reduce35<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+")* =  => ActionFn(186);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action186::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (0, 21)
    }
    fn __reduce36<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+")* = (<LType> "+")+ => ActionFn(187);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action187::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (1, 21)
    }
    fn __reduce37<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+")+ = LType, "+" => ActionFn(293);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action293::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (2, 22)
    }
    fn __reduce38<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> "+")+ = (<LType> "+")+, LType, "+" => ActionFn(294);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action294::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (3, 22)
    }
    fn __reduce39<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",") = LType, "," => ActionFn(168);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action168::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (2, 23)
    }
    fn __reduce40<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",")* =  => ActionFn(166);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action166::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (0, 24)
    }
    fn __reduce41<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",")* = (<LType> ",")+ => ActionFn(167);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action167::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (1, 24)
    }
    fn __reduce42<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",")+ = LType, "," => ActionFn(297);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action297::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (2, 25)
    }
    fn __reduce43<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LType> ",")+ = (<LType> ",")+, LType, "," => ActionFn(298);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action298::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant18(__nt), __end));
        (3, 25)
    }
    fn __reduce44<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LUpperId> ".") = LUpperId, "." => ActionFn(150);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action150::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (2, 26)
    }
    fn __reduce45<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LUpperId> ".")? = LUpperId, "." => ActionFn(301);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action301::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (2, 27)
    }
    fn __reduce46<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LUpperId> ".")? =  => ActionFn(149);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action149::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant20(__nt), __end));
        (0, 27)
    }
    fn __reduce47<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <LType>) = LowerId, ":", LType => ActionFn(140);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action140::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant14(__nt), __end));
        (3, 28)
    }
    fn __reduce48<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <LType>)? = LowerId, ":", LType => ActionFn(284);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action284::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (3, 29)
    }
    fn __reduce49<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<LowerId> ":" <LType>)? =  => ActionFn(180);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action180::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant21(__nt), __end));
        (0, 29)
    }
    fn __reduce50<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE) = NamedField, NEWLINE => ActionFn(155);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action155::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (2, 30)
    }
    fn __reduce51<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE)+ = NamedField, NEWLINE => ActionFn(330);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant22(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action330::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (2, 31)
    }
    fn __reduce52<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<NamedField> NEWLINE)+ = (<NamedField> NEWLINE)+, NamedField, NEWLINE => ActionFn(331);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant22(__symbols);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action331::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant23(__nt), __end));
        (3, 31)
    }
    fn __reduce53<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",") = ParenExpr, "," => ActionFn(199);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action199::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (2, 32)
    }
    fn __reduce54<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")* =  => ActionFn(197);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action197::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (0, 33)
    }
    fn __reduce55<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")* = (<ParenExpr> ",")+ => ActionFn(198);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action198::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (1, 33)
    }
    fn __reduce56<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")+ = ParenExpr, "," => ActionFn(332);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action332::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (2, 34)
    }
    fn __reduce57<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<ParenExpr> ",")+ = (<ParenExpr> ",")+, ParenExpr, "," => ActionFn(333);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant24(__symbols);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action333::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant25(__nt), __end));
        (3, 34)
    }
    fn __reduce58<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",") = PatternField, "," => ActionFn(209);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action209::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (2, 35)
    }
    fn __reduce59<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")* =  => ActionFn(207);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action207::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (0, 36)
    }
    fn __reduce60<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")* = (<PatternField> ",")+ => ActionFn(208);
        let __sym0 = __pop_Variant27(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action208::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (1, 36)
    }
    fn __reduce61<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")+ = PatternField, "," => ActionFn(336);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action336::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (2, 37)
    }
    fn __reduce62<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<PatternField> ",")+ = (<PatternField> ",")+, PatternField, "," => ActionFn(337);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant27(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action337::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant27(__nt), __end));
        (3, 37)
    }
    fn __reduce63<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",") = RecordTypeField, "," => ActionFn(173);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action173::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (2, 38)
    }
    fn __reduce64<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")* =  => ActionFn(171);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action171::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (0, 39)
    }
    fn __reduce65<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")* = (<RecordTypeField> ",")+ => ActionFn(172);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action172::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (1, 39)
    }
    fn __reduce66<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")+ = RecordTypeField, "," => ActionFn(340);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action340::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (2, 40)
    }
    fn __reduce67<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<RecordTypeField> ",")+ = (<RecordTypeField> ",")+, RecordTypeField, "," => ActionFn(341);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant28(__symbols);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action341::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant29(__nt), __end));
        (3, 40)
    }
    fn __reduce68<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",") = TyParamWithPreds, "," => ActionFn(178);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant30(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action178::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (2, 41)
    }
    fn __reduce69<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",")* =  => ActionFn(176);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action176::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (0, 42)
    }
    fn __reduce70<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",")* = (<TyParamWithPreds> ",")+ => ActionFn(177);
        let __sym0 = __pop_Variant31(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action177::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (1, 42)
    }
    fn __reduce71<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",")+ = TyParamWithPreds, "," => ActionFn(344);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant30(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action344::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (2, 43)
    }
    fn __reduce72<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<TyParamWithPreds> ",")+ = (<TyParamWithPreds> ",")+, TyParamWithPreds, "," => ActionFn(345);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant30(__symbols);
        let __sym0 = __pop_Variant31(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action345::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant31(__nt), __end));
        (3, 43)
    }
    fn __reduce73<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",") = UpperId, "," => ActionFn(165);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action165::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant0(__nt), __end));
        (2, 44)
    }
    fn __reduce74<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")* =  => ActionFn(163);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action163::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (0, 45)
    }
    fn __reduce75<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")* = (<UpperId> ",")+ => ActionFn(164);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action164::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 45)
    }
    fn __reduce76<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")+ = UpperId, "," => ActionFn(348);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action348::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (2, 46)
    }
    fn __reduce77<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ",")+ = (<UpperId> ",")+, UpperId, "," => ActionFn(349);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action349::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (3, 46)
    }
    fn __reduce78<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".") = UpperId, "." => ActionFn(214);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action214::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant0(__nt), __end));
        (2, 47)
    }
    fn __reduce79<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")* =  => ActionFn(212);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action212::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (0, 48)
    }
    fn __reduce80<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")* = (<UpperId> ".")+ => ActionFn(213);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action213::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 48)
    }
    fn __reduce81<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")+ = UpperId, "." => ActionFn(352);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action352::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (2, 49)
    }
    fn __reduce82<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // (<UpperId> ".")+ = (<UpperId> ".")+, UpperId, "." => ActionFn(353);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action353::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (3, 49)
    }
    fn __reduce83<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // @L =  => ActionFn(162);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action162::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant33(__nt), __end));
        (0, 50)
    }
    fn __reduce84<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // @R =  => ActionFn(161);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action161::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant33(__nt), __end));
        (0, 51)
    }
    fn __reduce85<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt = LPat, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(41);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant10(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant50(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action41::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant34(__nt), __end));
        (6, 52)
    }
    fn __reduce86<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt = LPat, ":", LStmt => ActionFn(42);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant51(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant50(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action42::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant34(__nt), __end));
        (3, 52)
    }
    fn __reduce87<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt* =  => ActionFn(131);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action131::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (0, 53)
    }
    fn __reduce88<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt* = Alt+ => ActionFn(132);
        let __sym0 = __pop_Variant35(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action132::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (1, 53)
    }
    fn __reduce89<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt+ = Alt => ActionFn(191);
        let __sym0 = __pop_Variant34(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action191::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (1, 54)
    }
    fn __reduce90<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alt+ = Alt+, Alt => ActionFn(192);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant34(__symbols);
        let __sym0 = __pop_Variant35(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action192::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant35(__nt), __end));
        (2, 54)
    }
    fn __reduce91<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alts =  => ActionFn(436);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action436::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant36(__nt), __end));
        (0, 55)
    }
    fn __reduce92<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Alts = Alt+ => ActionFn(437);
        let __sym0 = __pop_Variant35(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action437::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant36(__nt), __end));
        (1, 55)
    }
    fn __reduce93<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "=" => ActionFn(43);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action43::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 56)
    }
    fn __reduce94<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "+=" => ActionFn(44);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action44::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 56)
    }
    fn __reduce95<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // AssignOp = "-=" => ActionFn(45);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action45::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant37(__nt), __end));
        (1, 56)
    }
    fn __reduce96<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "match", LInlineExpr, ":", NEWLINE, INDENT, Alts, DEDENT => ActionFn(50);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant36(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action50::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (7, 57)
    }
    fn __reduce97<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(265);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant10(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action265::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (13, 57)
    }
    fn __reduce98<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(266);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action266::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (7, 57)
    }
    fn __reduce99<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+, "else", ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(267);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant0(__symbols);
        let __sym12 = __pop_Variant10(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant9(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action267::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (14, 57)
    }
    fn __reduce100<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // BlockExpr = "if", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT, ("elif" <LExpr> ":" NEWLINE INDENT <LStmts> DEDENT)+ => ActionFn(268);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant9(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action268::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (8, 57)
    }
    fn __reduce101<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // CallArg = LowerId, "=", LExpr => ActionFn(88);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action88::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (3, 58)
    }
    fn __reduce102<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // CallArg = LExpr => ActionFn(89);
        let __sym0 = __pop_Variant47(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action89::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant16(__nt), __end));
        (1, 58)
    }
    fn __reduce103<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // CallArg? = CallArg => ActionFn(200);
        let __sym0 = __pop_Variant16(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action200::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant39(__nt), __end));
        (1, 59)
    }
    fn __reduce104<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // CallArg? =  => ActionFn(201);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action201::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant39(__nt), __end));
        (0, 59)
    }
    fn __reduce105<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstrPattern = Constructor => ActionFn(102);
        let __sym0 = __pop_Variant41(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action102::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant40(__nt), __end));
        (1, 60)
    }
    fn __reduce106<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstrPattern = Constructor, "(", Sep<PatternField, ",">, ")" => ActionFn(103);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant61(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant41(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action103::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant40(__nt), __end));
        (4, 60)
    }
    fn __reduce107<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Constructor = UpperId, ".", UpperId => ActionFn(100);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action100::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant41(__nt), __end));
        (3, 61)
    }
    fn __reduce108<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Constructor = UpperId => ActionFn(101);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action101::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant41(__nt), __end));
        (1, 61)
    }
    fn __reduce109<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, NEWLINE => ActionFn(12);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action12::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (2, 62)
    }
    fn __reduce110<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, ":", NEWLINE, INDENT, NamedFields, DEDENT => ActionFn(13);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant53(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action13::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (6, 62)
    }
    fn __reduce111<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, "(", UnnamedFields, ",", ")", NEWLINE => ActionFn(243);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant75(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action243::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (6, 62)
    }
    fn __reduce112<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl = UpperId, "(", UnnamedFields, ")", NEWLINE => ActionFn(244);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant75(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action244::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant42(__nt), __end));
        (5, 62)
    }
    fn __reduce113<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl+ = ConstructorDecl => ActionFn(158);
        let __sym0 = __pop_Variant42(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action158::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (1, 63)
    }
    fn __reduce114<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ConstructorDecl+ = ConstructorDecl+, ConstructorDecl => ActionFn(159);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant42(__symbols);
        let __sym0 = __pop_Variant43(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action159::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant43(__nt), __end));
        (2, 63)
    }
    fn __reduce115<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Expr = InlineExpr => ActionFn(47);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action47::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 64)
    }
    fn __reduce116<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Expr = BlockExpr => ActionFn(48);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action48::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 64)
    }
    fn __reduce117<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunDecl = FunSig, "=", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(396);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant10(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant45(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action396::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant44(__nt), __end));
        (6, 65)
    }
    fn __reduce118<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunDecl = "prim", FunSig, NEWLINE => ActionFn(397);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant45(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action397::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant44(__nt), __end));
        (3, 65)
    }
    fn __reduce119<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(302);
        assert!(__symbols.len() >= 14);
        let __sym13 = __pop_Variant2(__symbols);
        let __sym12 = __pop_Variant0(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant58(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym13.2;
        let __nt = super::__action302::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12, __sym13);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (14, 66)
    }
    fn __reduce120<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(303);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant2(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant58(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action303::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (12, 66)
    }
    fn __reduce121<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(304);
        assert!(__symbols.len() >= 13);
        let __sym12 = __pop_Variant2(__symbols);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant58(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym12.2;
        let __nt = super::__action304::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11, __sym12);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (13, 66)
    }
    fn __reduce122<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(305);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant2(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant58(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action305::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (11, 66)
    }
    fn __reduce123<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(306);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant2(__symbols);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant58(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action306::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (12, 66)
    }
    fn __reduce124<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(307);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant2(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant58(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action307::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (10, 66)
    }
    fn __reduce125<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(308);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant2(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant58(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action308::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (11, 66)
    }
    fn __reduce126<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(309);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant2(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant58(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action309::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (9, 66)
    }
    fn __reduce127<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(310);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant2(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant58(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action310::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (10, 66)
    }
    fn __reduce128<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(311);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant2(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant58(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action311::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (8, 66)
    }
    fn __reduce129<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(312);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant2(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant58(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action312::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (9, 66)
    }
    fn __reduce130<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", Sep<(<LowerId> ":" <LType>), ",">, ")", ":", LType => ActionFn(313);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant2(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant58(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action313::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (7, 66)
    }
    fn __reduce131<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(314);
        assert!(__symbols.len() >= 12);
        let __sym11 = __pop_Variant0(__symbols);
        let __sym10 = __pop_Variant58(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym11.2;
        let __nt = super::__action314::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10, __sym11);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (12, 66)
    }
    fn __reduce132<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(315);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant58(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action315::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (10, 66)
    }
    fn __reduce133<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(316);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant0(__symbols);
        let __sym9 = __pop_Variant58(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action316::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (11, 66)
    }
    fn __reduce134<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(317);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant58(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action317::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (9, 66)
    }
    fn __reduce135<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(318);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant58(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant6(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action318::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (10, 66)
    }
    fn __reduce136<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "[", Sep<TyParamWithPreds, ",">, "]", "(", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(319);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant58(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant6(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action319::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (8, 66)
    }
    fn __reduce137<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(320);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant58(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action320::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (9, 66)
    }
    fn __reduce138<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", "self", ",", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(321);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant58(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action321::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (7, 66)
    }
    fn __reduce139<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(322);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant58(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action322::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (8, 66)
    }
    fn __reduce140<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", "self", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(323);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant58(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action323::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (6, 66)
    }
    fn __reduce141<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LUpperId, ".", LLowerId, "(", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(324);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant58(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant19(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action324::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (7, 66)
    }
    fn __reduce142<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // FunSig = "fn", LLowerId, "(", Sep<(<LowerId> ":" <LType>), ",">, ")" => ActionFn(325);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant58(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action325::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant45(__nt), __end));
        (5, 66)
    }
    fn __reduce143<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ImportDecl = "import", Sep<UpperId, ".">, NEWLINE => ActionFn(398);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant63(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action398::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant46(__nt), __end));
        (3, 67)
    }
    fn __reduce144<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr = "return", LInlineExpr => ActionFn(84);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action84::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (2, 68)
    }
    fn __reduce145<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr = InlineExpr7 => ActionFn(85);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action85::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 68)
    }
    fn __reduce146<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = "self" => ActionFn(53);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action53::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce147<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = LowerId => ActionFn(54);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action54::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce148<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = UpperId => ActionFn(55);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action55::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce149<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = "(", Sep<ParenExpr, ",">, ")" => ActionFn(56);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant60(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action56::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 69)
    }
    fn __reduce150<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = IntLit => ActionFn(57);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action57::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce151<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = StringLit => ActionFn(58);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action58::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce152<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = CharLit => ActionFn(59);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action59::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 69)
    }
    fn __reduce153<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = InlineExpr0, "[", LExpr, "]" => ActionFn(399);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action399::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (4, 69)
    }
    fn __reduce154<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = InlineExpr0, "(", Sep<CallArg, ",">, ")" => ActionFn(400);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant59(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action400::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (4, 69)
    }
    fn __reduce155<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = InlineExpr0, ".", LowerId => ActionFn(401);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action401::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 69)
    }
    fn __reduce156<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr0 = InlineExpr0, ".", UpperId => ActionFn(63);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action63::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 69)
    }
    fn __reduce157<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr1 = InlineExpr1, "..", InlineExpr0 => ActionFn(402);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action402::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 70)
    }
    fn __reduce158<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr1 = InlineExpr0 => ActionFn(65);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action65::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 70)
    }
    fn __reduce159<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr2 = "!", InlineExpr2 => ActionFn(403);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant38(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action403::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (2, 71)
    }
    fn __reduce160<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr2 = InlineExpr1 => ActionFn(67);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action67::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 71)
    }
    fn __reduce161<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr3 = InlineExpr3, "*", InlineExpr2 => ActionFn(404);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action404::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 72)
    }
    fn __reduce162<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr3 = InlineExpr2 => ActionFn(69);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action69::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 72)
    }
    fn __reduce163<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr4 = InlineExpr4, "+", InlineExpr3 => ActionFn(405);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action405::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 73)
    }
    fn __reduce164<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr4 = InlineExpr4, "-", InlineExpr3 => ActionFn(406);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action406::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 73)
    }
    fn __reduce165<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr4 = InlineExpr3 => ActionFn(72);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action72::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 73)
    }
    fn __reduce166<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, "==", InlineExpr4 => ActionFn(407);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action407::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce167<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, "!=", InlineExpr4 => ActionFn(408);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action408::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce168<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, "<", InlineExpr4 => ActionFn(409);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action409::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce169<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, ">", InlineExpr4 => ActionFn(410);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action410::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce170<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, "<=", InlineExpr4 => ActionFn(411);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action411::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce171<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr5, ">=", InlineExpr4 => ActionFn(412);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action412::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 74)
    }
    fn __reduce172<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr5 = InlineExpr4 => ActionFn(79);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action79::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 74)
    }
    fn __reduce173<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr6 = InlineExpr6, "&&", InlineExpr5 => ActionFn(413);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action413::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 75)
    }
    fn __reduce174<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr6 = InlineExpr5 => ActionFn(81);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action81::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 75)
    }
    fn __reduce175<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr7 = InlineExpr7, "||", InlineExpr6 => ActionFn(414);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant38(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action414::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (3, 76)
    }
    fn __reduce176<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // InlineExpr7 = InlineExpr6 => ActionFn(83);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action83::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant38(__nt), __end));
        (1, 76)
    }
    fn __reduce177<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LBlockExpr = BlockExpr => ActionFn(415);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action415::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 77)
    }
    fn __reduce178<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LExpr = Expr => ActionFn(416);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action416::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 78)
    }
    fn __reduce179<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig = FunSig => ActionFn(417);
        let __sym0 = __pop_Variant45(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action417::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant48(__nt), __end));
        (1, 79)
    }
    fn __reduce180<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig* =  => ActionFn(116);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action116::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (0, 80)
    }
    fn __reduce181<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig* = LFunSig+ => ActionFn(117);
        let __sym0 = __pop_Variant49(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action117::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (1, 80)
    }
    fn __reduce182<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig+ = LFunSig => ActionFn(215);
        let __sym0 = __pop_Variant48(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action215::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (1, 81)
    }
    fn __reduce183<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LFunSig+ = LFunSig+, LFunSig => ActionFn(216);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant48(__symbols);
        let __sym0 = __pop_Variant49(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action216::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant49(__nt), __end));
        (2, 81)
    }
    fn __reduce184<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LInlineExpr = InlineExpr => ActionFn(418);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action418::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 82)
    }
    fn __reduce185<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LLowerId = LowerId => ActionFn(419);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action419::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (1, 83)
    }
    fn __reduce186<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LPat = Pat => ActionFn(420);
        let __sym0 = __pop_Variant55(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action420::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant50(__nt), __end));
        (1, 84)
    }
    fn __reduce187<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt = Stmt => ActionFn(421);
        let __sym0 = __pop_Variant64(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action421::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (1, 85)
    }
    fn __reduce188<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt* =  => ActionFn(133);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action133::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (0, 86)
    }
    fn __reduce189<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt* = LStmt+ => ActionFn(134);
        let __sym0 = __pop_Variant52(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action134::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (1, 86)
    }
    fn __reduce190<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt+ = LStmt => ActionFn(189);
        let __sym0 = __pop_Variant51(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action189::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (1, 87)
    }
    fn __reduce191<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmt+ = LStmt+, LStmt => ActionFn(190);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant51(__symbols);
        let __sym0 = __pop_Variant52(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action190::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant52(__nt), __end));
        (2, 87)
    }
    fn __reduce192<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmts =  => ActionFn(446);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action446::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (0, 88)
    }
    fn __reduce193<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LStmts = LStmt+ => ActionFn(447);
        let __sym0 = __pop_Variant52(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action447::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant10(__nt), __end));
        (1, 88)
    }
    fn __reduce194<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LType = Type => ActionFn(422);
        let __sym0 = __pop_Variant70(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action422::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant2(__nt), __end));
        (1, 89)
    }
    fn __reduce195<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LType? = LType => ActionFn(184);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action184::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (1, 90)
    }
    fn __reduce196<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LType? =  => ActionFn(185);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action185::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant3(__nt), __end));
        (0, 90)
    }
    fn __reduce197<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // LUpperId = UpperId => ActionFn(423);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action423::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant19(__nt), __end));
        (1, 91)
    }
    fn __reduce198<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NEWLINE* =  => ActionFn(112);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action112::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (0, 92)
    }
    fn __reduce199<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NEWLINE* = NEWLINE+ => ActionFn(113);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action113::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 92)
    }
    fn __reduce200<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NEWLINE+ = NEWLINE => ActionFn(219);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action219::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (1, 93)
    }
    fn __reduce201<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NEWLINE+ = NEWLINE+, NEWLINE => ActionFn(220);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action220::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant32(__nt), __end));
        (2, 93)
    }
    fn __reduce202<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NamedField = LowerId, ":", Type => ActionFn(16);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant70(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action16::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant22(__nt), __end));
        (3, 94)
    }
    fn __reduce203<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // NamedFields = (<NamedField> NEWLINE)+ => ActionFn(15);
        let __sym0 = __pop_Variant23(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action15::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant53(__nt), __end));
        (1, 95)
    }
    fn __reduce204<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ParenExpr = LowerId, "=", LExpr => ActionFn(86);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action86::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (3, 96)
    }
    fn __reduce205<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ParenExpr = LExpr => ActionFn(87);
        let __sym0 = __pop_Variant47(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action87::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant24(__nt), __end));
        (1, 96)
    }
    fn __reduce206<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ParenExpr? = ParenExpr => ActionFn(195);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action195::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (1, 97)
    }
    fn __reduce207<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // ParenExpr? =  => ActionFn(196);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action196::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant54(__nt), __end));
        (0, 97)
    }
    fn __reduce208<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat = Pat0, "|", Pat => ActionFn(424);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant55(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant55(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action424::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (3, 98)
    }
    fn __reduce209<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat = Pat0 => ActionFn(99);
        let __sym0 = __pop_Variant55(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action99::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 98)
    }
    fn __reduce210<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = LowerId => ActionFn(91);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action91::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce211<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = ConstrPattern => ActionFn(92);
        let __sym0 = __pop_Variant40(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action92::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce212<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = "(", Sep<PatternField, ",">, ")" => ActionFn(93);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant61(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action93::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (3, 99)
    }
    fn __reduce213<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = "_" => ActionFn(94);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action94::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce214<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = StringLit => ActionFn(95);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action95::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce215<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = CharLit => ActionFn(96);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action96::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (1, 99)
    }
    fn __reduce216<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Pat0 = StringLit, LowerId => ActionFn(97);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action97::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant55(__nt), __end));
        (2, 99)
    }
    fn __reduce217<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // PatternField = LowerId, "=", LPat => ActionFn(104);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant50(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action104::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (3, 100)
    }
    fn __reduce218<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // PatternField = LPat => ActionFn(105);
        let __sym0 = __pop_Variant50(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action105::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant26(__nt), __end));
        (1, 100)
    }
    fn __reduce219<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // PatternField? = PatternField => ActionFn(205);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action205::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (1, 101)
    }
    fn __reduce220<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // PatternField? =  => ActionFn(206);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action206::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant56(__nt), __end));
        (0, 101)
    }
    fn __reduce221<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField = LowerId, ":", Type => ActionFn(23);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant70(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action23::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (3, 102)
    }
    fn __reduce222<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField = Type => ActionFn(24);
        let __sym0 = __pop_Variant70(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action24::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant28(__nt), __end));
        (1, 102)
    }
    fn __reduce223<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField? = RecordTypeField => ActionFn(169);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action169::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (1, 103)
    }
    fn __reduce224<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // RecordTypeField? =  => ActionFn(170);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action170::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant57(__nt), __end));
        (0, 103)
    }
    fn __reduce225<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <LType>), ","> = LowerId, ":", LType => ActionFn(326);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant2(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action326::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (3, 104)
    }
    fn __reduce226<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <LType>), ","> =  => ActionFn(327);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action327::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (0, 104)
    }
    fn __reduce227<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <LType>), ","> = (<(<LowerId> ":" <LType>)> ",")+, LowerId, ":", LType => ActionFn(328);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action328::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (4, 104)
    }
    fn __reduce228<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<(<LowerId> ":" <LType>), ","> = (<(<LowerId> ":" <LType>)> ",")+ => ActionFn(329);
        let __sym0 = __pop_Variant15(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action329::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant58(__nt), __end));
        (1, 104)
    }
    fn __reduce229<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = CallArg => ActionFn(438);
        let __sym0 = __pop_Variant16(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action438::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (1, 105)
    }
    fn __reduce230<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> =  => ActionFn(439);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action439::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (0, 105)
    }
    fn __reduce231<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = (<CallArg> ",")+, CallArg => ActionFn(440);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant16(__symbols);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action440::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (2, 105)
    }
    fn __reduce232<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<CallArg, ","> = (<CallArg> ",")+ => ActionFn(441);
        let __sym0 = __pop_Variant17(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action441::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant59(__nt), __end));
        (1, 105)
    }
    fn __reduce233<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, "+"> = LType => ActionFn(448);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action448::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 106)
    }
    fn __reduce234<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, "+"> =  => ActionFn(449);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action449::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (0, 106)
    }
    fn __reduce235<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, "+"> = (<LType> "+")+, LType => ActionFn(450);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action450::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 106)
    }
    fn __reduce236<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, "+"> = (<LType> "+")+ => ActionFn(451);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action451::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 106)
    }
    fn __reduce237<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, ","> = LType => ActionFn(452);
        let __sym0 = __pop_Variant2(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action452::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 107)
    }
    fn __reduce238<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, ","> =  => ActionFn(453);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action453::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (0, 107)
    }
    fn __reduce239<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, ","> = (<LType> ",")+, LType => ActionFn(454);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant2(__symbols);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action454::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (2, 107)
    }
    fn __reduce240<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<LType, ","> = (<LType> ",")+ => ActionFn(455);
        let __sym0 = __pop_Variant18(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action455::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant4(__nt), __end));
        (1, 107)
    }
    fn __reduce241<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = ParenExpr => ActionFn(462);
        let __sym0 = __pop_Variant24(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action462::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (1, 108)
    }
    fn __reduce242<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> =  => ActionFn(463);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action463::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (0, 108)
    }
    fn __reduce243<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = (<ParenExpr> ",")+, ParenExpr => ActionFn(464);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant24(__symbols);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action464::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (2, 108)
    }
    fn __reduce244<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<ParenExpr, ","> = (<ParenExpr> ",")+ => ActionFn(465);
        let __sym0 = __pop_Variant25(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action465::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant60(__nt), __end));
        (1, 108)
    }
    fn __reduce245<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = PatternField => ActionFn(466);
        let __sym0 = __pop_Variant26(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action466::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (1, 109)
    }
    fn __reduce246<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> =  => ActionFn(467);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action467::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (0, 109)
    }
    fn __reduce247<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = (<PatternField> ",")+, PatternField => ActionFn(468);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant26(__symbols);
        let __sym0 = __pop_Variant27(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action468::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (2, 109)
    }
    fn __reduce248<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<PatternField, ","> = (<PatternField> ",")+ => ActionFn(469);
        let __sym0 = __pop_Variant27(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action469::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant61(__nt), __end));
        (1, 109)
    }
    fn __reduce249<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = RecordTypeField => ActionFn(470);
        let __sym0 = __pop_Variant28(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action470::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (1, 110)
    }
    fn __reduce250<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> =  => ActionFn(471);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action471::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (0, 110)
    }
    fn __reduce251<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = (<RecordTypeField> ",")+, RecordTypeField => ActionFn(472);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant28(__symbols);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action472::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (2, 110)
    }
    fn __reduce252<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<RecordTypeField, ","> = (<RecordTypeField> ",")+ => ActionFn(473);
        let __sym0 = __pop_Variant29(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action473::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant62(__nt), __end));
        (1, 110)
    }
    fn __reduce253<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<TyParamWithPreds, ","> = TyParamWithPreds => ActionFn(476);
        let __sym0 = __pop_Variant30(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action476::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (1, 111)
    }
    fn __reduce254<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<TyParamWithPreds, ","> =  => ActionFn(477);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action477::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (0, 111)
    }
    fn __reduce255<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<TyParamWithPreds, ","> = (<TyParamWithPreds> ",")+, TyParamWithPreds => ActionFn(478);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant30(__symbols);
        let __sym0 = __pop_Variant31(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action478::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (2, 111)
    }
    fn __reduce256<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<TyParamWithPreds, ","> = (<TyParamWithPreds> ",")+ => ActionFn(479);
        let __sym0 = __pop_Variant31(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action479::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant6(__nt), __end));
        (1, 111)
    }
    fn __reduce257<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = UpperId => ActionFn(480);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action480::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (1, 112)
    }
    fn __reduce258<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> =  => ActionFn(481);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action481::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (0, 112)
    }
    fn __reduce259<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = (<UpperId> ",")+, UpperId => ActionFn(482);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action482::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (2, 112)
    }
    fn __reduce260<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, ","> = (<UpperId> ",")+ => ActionFn(483);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action483::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (1, 112)
    }
    fn __reduce261<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = UpperId => ActionFn(484);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action484::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (1, 113)
    }
    fn __reduce262<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> =  => ActionFn(485);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action485::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (0, 113)
    }
    fn __reduce263<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = (<UpperId> ".")+, UpperId => ActionFn(486);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action486::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (2, 113)
    }
    fn __reduce264<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Sep<UpperId, "."> = (<UpperId> ".")+ => ActionFn(487);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action487::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant63(__nt), __end));
        (1, 113)
    }
    fn __reduce265<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, ":", LType, "=", LInlineExpr, NEWLINE => ActionFn(248);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant47(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant50(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action248::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (7, 114)
    }
    fn __reduce266<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, "=", LInlineExpr, NEWLINE => ActionFn(249);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant47(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant50(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action249::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (5, 114)
    }
    fn __reduce267<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, ":", LType, "=", LBlockExpr => ActionFn(250);
        assert!(__symbols.len() >= 6);
        let __sym5 = __pop_Variant47(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant2(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant50(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym5.2;
        let __nt = super::__action250::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (6, 114)
    }
    fn __reduce268<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "let", LPat, "=", LBlockExpr => ActionFn(251);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant47(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant50(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action251::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (4, 114)
    }
    fn __reduce269<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = LInlineExpr, AssignOp, LExpr, NEWLINE => ActionFn(35);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant47(__symbols);
        let __sym1 = __pop_Variant37(__symbols);
        let __sym0 = __pop_Variant47(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action35::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (4, 114)
    }
    fn __reduce270<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = InlineExpr, NEWLINE => ActionFn(425);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action425::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (2, 114)
    }
    fn __reduce271<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = BlockExpr => ActionFn(426);
        let __sym0 = __pop_Variant38(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action426::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (1, 114)
    }
    fn __reduce272<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "for", LowerId, "in", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(38);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant10(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant47(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action38::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (9, 114)
    }
    fn __reduce273<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Stmt = "while", LExpr, ":", NEWLINE, INDENT, LStmts, DEDENT => ActionFn(39);
        assert!(__symbols.len() >= 7);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant10(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant47(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym6.2;
        let __nt = super::__action39::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6);
        __symbols.push((__start, __Symbol::Variant64(__nt), __end));
        (7, 114)
    }
    fn __reduce274<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = TypeDecl => ActionFn(456);
        let __sym0 = __pop_Variant72(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action456::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (1, 115)
    }
    fn __reduce275<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, TypeDecl => ActionFn(457);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant72(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action457::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (2, 115)
    }
    fn __reduce276<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = FunDecl => ActionFn(458);
        let __sym0 = __pop_Variant44(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action458::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (1, 115)
    }
    fn __reduce277<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, FunDecl => ActionFn(459);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant44(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action459::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (2, 115)
    }
    fn __reduce278<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = ImportDecl => ActionFn(460);
        let __sym0 = __pop_Variant46(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action460::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (1, 115)
    }
    fn __reduce279<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl = NEWLINE+, ImportDecl => ActionFn(461);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant46(__symbols);
        let __sym0 = __pop_Variant32(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action461::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant65(__nt), __end));
        (2, 115)
    }
    fn __reduce280<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl* =  => ActionFn(114);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action114::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant66(__nt), __end));
        (0, 116)
    }
    fn __reduce281<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl* = TopDecl+ => ActionFn(115);
        let __sym0 = __pop_Variant66(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action115::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant66(__nt), __end));
        (1, 116)
    }
    fn __reduce282<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl+ = TopDecl => ActionFn(217);
        let __sym0 = __pop_Variant65(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action217::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant66(__nt), __end));
        (1, 117)
    }
    fn __reduce283<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecl+ = TopDecl+, TopDecl => ActionFn(218);
        assert!(__symbols.len() >= 2);
        let __sym1 = __pop_Variant65(__symbols);
        let __sym0 = __pop_Variant66(__symbols);
        let __start = __sym0.0;
        let __end = __sym1.2;
        let __nt = super::__action218::<>(module, __sym0, __sym1);
        __symbols.push((__start, __Symbol::Variant66(__nt), __end));
        (2, 117)
    }
    fn __reduce284<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecls =  => ActionFn(474);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action474::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant67(__nt), __end));
        (0, 118)
    }
    fn __reduce285<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TopDecls = TopDecl+ => ActionFn(475);
        let __sym0 = __pop_Variant66(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action475::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant67(__nt), __end));
        (1, 118)
    }
    fn __reduce286<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TraitDecl = "trait", LUpperId, "[", UpperId, ":", Sep<LType, "+">, "]", ":", NEWLINE, INDENT => ActionFn(442);
        assert!(__symbols.len() >= 10);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant4(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym9.2;
        let __nt = super::__action442::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9);
        __symbols.push((__start, __Symbol::Variant68(__nt), __end));
        (10, 119)
    }
    fn __reduce287<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TraitDecl = "trait", LUpperId, "[", UpperId, ":", Sep<LType, "+">, "]", ":", NEWLINE, INDENT, LFunSig+ => ActionFn(443);
        assert!(__symbols.len() >= 11);
        let __sym10 = __pop_Variant49(__symbols);
        let __sym9 = __pop_Variant0(__symbols);
        let __sym8 = __pop_Variant0(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant4(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym10.2;
        let __nt = super::__action443::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8, __sym9, __sym10);
        __symbols.push((__start, __Symbol::Variant68(__nt), __end));
        (11, 119)
    }
    fn __reduce288<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TraitDecl = "trait", LUpperId, "[", UpperId, "]", ":", NEWLINE, INDENT => ActionFn(444);
        assert!(__symbols.len() >= 8);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym7.2;
        let __nt = super::__action444::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7);
        __symbols.push((__start, __Symbol::Variant68(__nt), __end));
        (8, 119)
    }
    fn __reduce289<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TraitDecl = "trait", LUpperId, "[", UpperId, "]", ":", NEWLINE, INDENT, LFunSig+ => ActionFn(445);
        assert!(__symbols.len() >= 9);
        let __sym8 = __pop_Variant49(__symbols);
        let __sym7 = __pop_Variant0(__symbols);
        let __sym6 = __pop_Variant0(__symbols);
        let __sym5 = __pop_Variant0(__symbols);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant19(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym8.2;
        let __nt = super::__action445::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4, __sym5, __sym6, __sym7, __sym8);
        __symbols.push((__start, __Symbol::Variant68(__nt), __end));
        (9, 119)
    }
    fn __reduce290<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TyParamWithPreds = LUpperId => ActionFn(432);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action432::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (1, 120)
    }
    fn __reduce291<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TyParamWithPreds = LUpperId, ":", Sep<LType, "+"> => ActionFn(433);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant4(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant19(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action433::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant30(__nt), __end));
        (3, 120)
    }
    fn __reduce292<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TyParamWithPreds? = TyParamWithPreds => ActionFn(174);
        let __sym0 = __pop_Variant30(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action174::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant69(__nt), __end));
        (1, 121)
    }
    fn __reduce293<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TyParamWithPreds? =  => ActionFn(175);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action175::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant69(__nt), __end));
        (0, 121)
    }
    fn __reduce294<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Type = UpperId => ActionFn(20);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action20::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant70(__nt), __end));
        (1, 122)
    }
    fn __reduce295<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Type = UpperId, "[", Sep<LType, ",">, "]" => ActionFn(21);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant0(__symbols);
        let __sym2 = __pop_Variant4(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action21::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant70(__nt), __end));
        (4, 122)
    }
    fn __reduce296<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // Type = "(", Sep<RecordTypeField, ",">, ")" => ActionFn(22);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant62(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action22::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant70(__nt), __end));
        (3, 122)
    }
    fn __reduce297<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeConstrs = ConstructorDecl+ => ActionFn(11);
        let __sym0 = __pop_Variant43(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action11::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant71(__nt), __end));
        (1, 123)
    }
    fn __reduce298<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeDecl = "type", UpperId, TypeParams, TypeDeclRhs => ActionFn(434);
        assert!(__symbols.len() >= 4);
        let __sym3 = __pop_Variant73(__symbols);
        let __sym2 = __pop_Variant74(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym3.2;
        let __nt = super::__action434::<>(module, __sym0, __sym1, __sym2, __sym3);
        __symbols.push((__start, __Symbol::Variant72(__nt), __end));
        (4, 124)
    }
    fn __reduce299<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeDecl = "prim", "type", UpperId, TypeParams, NEWLINE => ActionFn(435);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant74(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action435::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant72(__nt), __end));
        (5, 124)
    }
    fn __reduce300<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeDeclRhs = ":", NEWLINE, INDENT, TypeConstrs, DEDENT => ActionFn(7);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant71(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action7::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant73(__nt), __end));
        (5, 125)
    }
    fn __reduce301<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeDeclRhs = ":", NEWLINE, INDENT, NamedFields, DEDENT => ActionFn(8);
        assert!(__symbols.len() >= 5);
        let __sym4 = __pop_Variant0(__symbols);
        let __sym3 = __pop_Variant53(__symbols);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym4.2;
        let __nt = super::__action8::<>(module, __sym0, __sym1, __sym2, __sym3, __sym4);
        __symbols.push((__start, __Symbol::Variant73(__nt), __end));
        (5, 125)
    }
    fn __reduce302<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeParams =  => ActionFn(9);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action9::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant74(__nt), __end));
        (0, 126)
    }
    fn __reduce303<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // TypeParams = "[", Sep<UpperId, ",">, "]" => ActionFn(10);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant0(__symbols);
        let __sym1 = __pop_Variant63(__symbols);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action10::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant74(__nt), __end));
        (3, 126)
    }
    fn __reduce304<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // UnnamedFields = UnnamedFields, ",", Type => ActionFn(17);
        assert!(__symbols.len() >= 3);
        let __sym2 = __pop_Variant70(__symbols);
        let __sym1 = __pop_Variant0(__symbols);
        let __sym0 = __pop_Variant75(__symbols);
        let __start = __sym0.0;
        let __end = __sym2.2;
        let __nt = super::__action17::<>(module, __sym0, __sym1, __sym2);
        __symbols.push((__start, __Symbol::Variant75(__nt), __end));
        (3, 127)
    }
    fn __reduce305<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // UnnamedFields = Type => ActionFn(18);
        let __sym0 = __pop_Variant70(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action18::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant75(__nt), __end));
        (1, 127)
    }
    fn __reduce306<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // UpperId? = UpperId => ActionFn(210);
        let __sym0 = __pop_Variant0(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action210::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (1, 128)
    }
    fn __reduce307<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // UpperId? =  => ActionFn(211);
        let __start = __lookahead_start.cloned().or_else(|| __symbols.last().map(|s| s.2)).unwrap_or_default();
        let __end = __start;
        let __nt = super::__action211::<>(module, &__start, &__end);
        __symbols.push((__start, __Symbol::Variant1(__nt), __end));
        (0, 128)
    }
    fn __reduce308<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // __LExpr = LExpr => ActionFn(1);
        let __sym0 = __pop_Variant47(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action1::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant47(__nt), __end));
        (1, 129)
    }
    fn __reduce309<
        'a,
    >(
        module: &'a Rc<str>,
        __lookahead_start: Option<&Loc>,
        __symbols: &mut alloc::vec::Vec<(Loc,__Symbol<>,Loc)>,
        _: core::marker::PhantomData<(&'a ())>,
    ) -> (usize, usize)
    {
        // __LStmt = LStmt => ActionFn(0);
        let __sym0 = __pop_Variant51(__symbols);
        let __start = __sym0.0;
        let __end = __sym0.2;
        let __nt = super::__action0::<>(module, __sym0);
        __symbols.push((__start, __Symbol::Variant51(__nt), __end));
        (1, 130)
    }
}
#[allow(unused_imports)]
pub use self::__parse__TopDecls::TopDeclsParser;

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action0<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, L<Stmt>, Loc)) -> L<Stmt> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action1<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, L<Expr>, Loc)) -> L<Expr> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action2<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Vec<L<TopDecl>>, Loc)) -> Vec<L<TopDecl>> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action3<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, id, _): (Loc, Token, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<SmolStr> {
    L::new(module, l, r, id.smol_str())
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action4<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, id, _): (Loc, Token, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<SmolStr> {
    L::new(module, l, r, id.smol_str())
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action5<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, type_name, _): (Loc, Token, Loc),
    (_, type_params, _): (Loc, Vec<SmolStr>, Loc),
    (_, rhs, _): (Loc, TypeDeclRhs, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<TypeDecl> {
    L::new(
        module,
        l,
        r,
        TypeDecl {
            name: type_name.smol_str(),
            type_params,
            rhs: Some(rhs),
        },
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action6<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, type_name, _): (Loc, Token, Loc),
    (_, type_params, _): (Loc, Vec<SmolStr>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<TypeDecl> {
    L::new(
        module,
        l,
        r,
        TypeDecl {
            name: type_name.smol_str(),
            type_params,
            rhs: None,
        },
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action7<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, constrs, _): (Loc, Vec<ConstructorDecl>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> TypeDeclRhs {
    TypeDeclRhs::Sum(constrs)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action8<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, named_fields, _): (Loc, Vec<(SmolStr, Type)>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> TypeDeclRhs {
    TypeDeclRhs::Product(ConstructorFields::Named(named_fields))
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action9<'a>(module: &'a Rc<str>, __lookbehind: &Loc, __lookahead: &Loc) -> Vec<SmolStr> {
    vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action10<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, params, _): (Loc, Vec<Token>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Vec<SmolStr> {
    params.into_iter().map(|id| id.smol_str()).collect()
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action11<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, alloc::vec::Vec<ConstructorDecl>, Loc),
) -> Vec<ConstructorDecl> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action12<'a>(
    module: &'a Rc<str>,
    (_, name, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> ConstructorDecl {
    ConstructorDecl {
        name: name.smol_str(),
        fields: ConstructorFields::Empty,
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action13<'a>(
    module: &'a Rc<str>,
    (_, name, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, named_fields, _): (Loc, Vec<(SmolStr, Type)>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> ConstructorDecl {
    ConstructorDecl {
        name: name.smol_str(),
        fields: ConstructorFields::Named(named_fields),
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action14<'a>(
    module: &'a Rc<str>,
    (_, name, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, fields, _): (Loc, Vec<Type>, Loc),
    (_, _, _): (Loc, core::option::Option<Token>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> ConstructorDecl {
    ConstructorDecl {
        name: name.smol_str(),
        fields: ConstructorFields::Unnamed(fields),
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action15<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, alloc::vec::Vec<(SmolStr, Type)>, Loc),
) -> Vec<(SmolStr, Type)> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action16<'a>(
    module: &'a Rc<str>,
    (_, name, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, type_, _): (Loc, Type, Loc),
) -> (SmolStr, Type) {
    (name.smol_str(), type_)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action17<'a>(
    module: &'a Rc<str>,
    (_, mut fields, _): (Loc, Vec<Type>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, field, _): (Loc, Type, Loc),
) -> Vec<Type> {
    {
        fields.push(field);
        fields
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action18<'a>(module: &'a Rc<str>, (_, field, _): (Loc, Type, Loc)) -> Vec<Type> {
    vec![field]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action19<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, ty, _): (Loc, Type, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<Type> {
    L::new(module, l, r, ty)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action20<'a>(module: &'a Rc<str>, (_, name, _): (Loc, Token, Loc)) -> Type {
    Type::Named(NamedType {
        name: name.smol_str(),
        args: vec![],
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action21<'a>(
    module: &'a Rc<str>,
    (_, name, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, args, _): (Loc, Vec<L<Type>>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Type {
    Type::Named(NamedType {
        name: name.smol_str(),
        args,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action22<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, fields, _): (Loc, Vec<Named<Type>>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Type {
    Type::Record(fields)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action23<'a>(
    module: &'a Rc<str>,
    (_, name, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, ty, _): (Loc, Type, Loc),
) -> Named<Type> {
    Named {
        name: Some(name.smol_str()),
        node: ty,
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action24<'a>(module: &'a Rc<str>, (_, ty, _): (Loc, Type, Loc)) -> Named<Type> {
    Named {
        name: None,
        node: ty,
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action25<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, sig, _): (Loc, FunSig, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, body_l, _): (Loc, Loc, Loc),
    (_, body, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, body_r, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<FunDecl> {
    L::new(
        module,
        l,
        r,
        FunDecl {
            sig,
            body: Some(L::new(module, body_l, body_r, body)),
        },
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action26<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, sig, _): (Loc, FunSig, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<FunDecl> {
    L::new(module, l, r, FunDecl { sig, body: None })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action27<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, sig, _): (Loc, FunSig, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<FunSig> {
    L::new(module, l, r, sig)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action28<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, type_name, _): (Loc, core::option::Option<L<SmolStr>>, Loc),
    (_, name, _): (Loc, L<SmolStr>, Loc),
    (_, type_params, _): (
        Loc,
        core::option::Option<Vec<L<(L<SmolStr>, Vec<L<Type>>)>>>,
        Loc,
    ),
    (_, _, _): (Loc, Token, Loc),
    (_, self_, _): (
        Loc,
        core::option::Option<(Token, core::option::Option<Token>)>,
        Loc,
    ),
    (_, params, _): (Loc, Vec<(Token, L<Type>)>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, return_ty, _): (Loc, core::option::Option<L<Type>>, Loc),
) -> FunSig {
    FunSig {
        type_name,
        name,
        type_params: type_params.unwrap_or(vec![]),
        self_: self_.is_some(),
        params: params
            .into_iter()
            .map(|(name, ty)| (name.smol_str(), ty))
            .collect(),
        return_ty,
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action29<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, ty_param, _): (Loc, L<SmolStr>, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<(L<SmolStr>, Vec<L<Type>>)> {
    L::new(module, l, r, (ty_param, vec![]))
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action30<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, ty_param, _): (Loc, L<SmolStr>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, tys, _): (Loc, Vec<L<Type>>, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<(L<SmolStr>, Vec<L<Type>>)> {
    L::new(module, l, r, (ty_param, tys))
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action31<'a>(
    module: &'a Rc<str>,
    (_, stmts, _): (Loc, alloc::vec::Vec<L<Stmt>>, Loc),
) -> Vec<L<Stmt>> {
    stmts
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action32<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, stmt, _): (Loc, Stmt, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<Stmt> {
    L::new(module, l, r, stmt)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action33<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, lhs, _): (Loc, L<Pat>, Loc),
    (_, ty, _): (Loc, core::option::Option<L<Type>>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, rhs, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Stmt {
    Stmt::Let(LetStmt { lhs, ty, rhs })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action34<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, lhs, _): (Loc, L<Pat>, Loc),
    (_, ty, _): (Loc, core::option::Option<L<Type>>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, rhs, _): (Loc, L<Expr>, Loc),
) -> Stmt {
    Stmt::Let(LetStmt { lhs, ty, rhs })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action35<'a>(
    module: &'a Rc<str>,
    (_, lhs, _): (Loc, L<Expr>, Loc),
    (_, op, _): (Loc, AssignOp, Loc),
    (_, rhs, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Stmt {
    Stmt::Assign(AssignStmt { lhs, rhs, op })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action36<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, expr, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Stmt {
    Stmt::Expr(L::new(module, l, r, expr))
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action37<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, expr, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> Stmt {
    Stmt::Expr(L::new(module, l, r, expr))
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action38<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, id, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, expr, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, statements, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Stmt {
    Stmt::For(ForStmt {
        var: id.smol_str(),
        ty: None,
        expr,
        body: statements,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action39<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, cond, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, statements, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Stmt {
    Stmt::While(WhileStmt {
        cond,
        body: statements,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action40<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, alloc::vec::Vec<Alt>, Loc)) -> Vec<Alt> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action41<'a>(
    module: &'a Rc<str>,
    (_, pattern, _): (Loc, L<Pat>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, stmts, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Alt {
    Alt {
        pattern,
        guard: None,
        rhs: stmts,
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action42<'a>(
    module: &'a Rc<str>,
    (_, pattern, _): (Loc, L<Pat>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, stmt, _): (Loc, L<Stmt>, Loc),
) -> Alt {
    Alt {
        pattern,
        guard: None,
        rhs: vec![stmt],
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action43<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Token, Loc)) -> AssignOp {
    AssignOp::Eq
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action44<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Token, Loc)) -> AssignOp {
    AssignOp::PlusEq
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action45<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Token, Loc)) -> AssignOp {
    AssignOp::MinusEq
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action46<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, expr, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<Expr> {
    L::new(module, l, r, expr)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action47<'a>(module: &'a Rc<str>, (_, expr, _): (Loc, Expr, Loc)) -> Expr {
    expr
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action48<'a>(module: &'a Rc<str>, (_, expr, _): (Loc, Expr, Loc)) -> Expr {
    expr
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action49<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, expr, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<Expr> {
    L::new(module, l, r, expr)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action50<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, expr, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, alts, _): (Loc, Vec<Alt>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Expr {
    Expr::Match(MatchExpr {
        scrutinee: Box::new(expr),
        alts,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action51<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, cond, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, then_, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, mut branches, _): (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
    (_, else_branch, _): (Loc, core::option::Option<Vec<L<Stmt>>>, Loc),
) -> Expr {
    {
        branches.insert(0, (cond, then_));
        Expr::If(IfExpr {
            branches,
            else_branch,
        })
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action52<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, expr, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<Expr> {
    L::new(module, l, r, expr)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action53<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Token, Loc)) -> Expr {
    Expr::Self_
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action54<'a>(module: &'a Rc<str>, (_, id, _): (Loc, Token, Loc)) -> Expr {
    Expr::Var(id.smol_str())
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action55<'a>(module: &'a Rc<str>, (_, id, _): (Loc, Token, Loc)) -> Expr {
    Expr::UpperVar(id.smol_str())
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action56<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, mut exprs, _): (Loc, Vec<(Option<SmolStr>, L<Expr>)>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Expr {
    {
        match exprs.len() {
            0 => Expr::Record(vec![]),
            1 if exprs[0].0.is_none() => exprs.pop().unwrap().1.node,
            _ => Expr::Record(
                exprs
                    .into_iter()
                    .map(|(name, expr)| Named {
                        name: name,
                        node: Box::new(expr),
                    })
                    .collect(),
            ),
        }
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action57<'a>(module: &'a Rc<str>, (_, int, _): (Loc, Token, Loc)) -> Expr {
    Expr::Int(
        i32::from_str_radix(&int.text, 10)
            .unwrap_or_else(|_| panic!("Can't parse I32: {}", int.text)),
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action58<'a>(module: &'a Rc<str>, (_, string, _): (Loc, Token, Loc)) -> Expr {
    Expr::String(parse_string_parts(
        module,
        &string.text[1..string.text.len() - 1],
    ))
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action59<'a>(module: &'a Rc<str>, (_, char, _): (Loc, Token, Loc)) -> Expr {
    Expr::Char(char.text.chars().nth(1).unwrap())
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action60<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, array, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, index, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Expr {
    Expr::ArrayIndex(ArrayIndexExpr {
        array: Box::new(L::new(module, l, r, array)),
        index: Box::new(index),
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action61<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, fun, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, args, _): (Loc, Vec<CallArg>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Expr {
    Expr::Call(CallExpr {
        fun: Box::new(L::new(module, l, r, fun)),
        args,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action62<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, expr, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, field, _): (Loc, Token, Loc),
) -> Expr {
    Expr::FieldSelect(FieldSelectExpr {
        object: Box::new(L::new(module, l, r, expr)),
        field: field.smol_str(),
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action63<'a>(
    module: &'a Rc<str>,
    (_, expr, _): (Loc, Expr, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, constr, _): (Loc, Token, Loc),
) -> Expr {
    {
        match expr {
            Expr::UpperVar(ty) => Expr::ConstrSelect(ConstrSelectExpr {
                ty,
                constr: constr.smol_str(),
            }),

            _ => panic!(),
        }
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action64<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, from, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, to, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::Range(RangeExpr {
        from: Box::new(L::new(module, l1, r1, from)),
        to: Box::new(L::new(module, l2, r2, to)),
        inclusive: false,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action65<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Expr, Loc)) -> Expr {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action66<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, l, _): (Loc, Loc, Loc),
    (_, expr, _): (Loc, Expr, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::UnOp(UnOpExpr {
        op: UnOp::Not,
        expr: Box::new(L::new(module, l, r, expr)),
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action67<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Expr, Loc)) -> Expr {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action68<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::BinOp(BinOpExpr {
        left: Box::new(L::new(module, l1, r1, left)),
        right: Box::new(L::new(module, l2, r2, right)),
        op: BinOp::Multiply,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action69<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Expr, Loc)) -> Expr {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action70<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::BinOp(BinOpExpr {
        left: Box::new(L::new(module, l1, r1, left)),
        right: Box::new(L::new(module, l2, r2, right)),
        op: BinOp::Add,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action71<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::BinOp(BinOpExpr {
        left: Box::new(L::new(module, l1, r1, left)),
        right: Box::new(L::new(module, l2, r2, right)),
        op: BinOp::Subtract,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action72<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Expr, Loc)) -> Expr {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action73<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::BinOp(BinOpExpr {
        left: Box::new(L::new(module, l1, r1, left)),
        right: Box::new(L::new(module, l2, r2, right)),
        op: BinOp::Equal,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action74<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::BinOp(BinOpExpr {
        left: Box::new(L::new(module, l1, r1, left)),
        right: Box::new(L::new(module, l2, r2, right)),
        op: BinOp::NotEqual,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action75<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::BinOp(BinOpExpr {
        left: Box::new(L::new(module, l1, r1, left)),
        right: Box::new(L::new(module, l2, r2, right)),
        op: BinOp::Lt,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action76<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::BinOp(BinOpExpr {
        left: Box::new(L::new(module, l1, r1, left)),
        right: Box::new(L::new(module, l2, r2, right)),
        op: BinOp::Gt,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action77<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::BinOp(BinOpExpr {
        left: Box::new(L::new(module, l1, r1, left)),
        right: Box::new(L::new(module, l2, r2, right)),
        op: BinOp::LtEq,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action78<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::BinOp(BinOpExpr {
        left: Box::new(L::new(module, l1, r1, left)),
        right: Box::new(L::new(module, l2, r2, right)),
        op: BinOp::GtEq,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action79<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Expr, Loc)) -> Expr {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action80<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::BinOp(BinOpExpr {
        left: Box::new(L::new(module, l1, r1, left)),
        right: Box::new(L::new(module, l2, r2, right)),
        op: BinOp::And,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action81<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Expr, Loc)) -> Expr {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action82<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, left, _): (Loc, Expr, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, right, _): (Loc, Expr, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Expr {
    Expr::BinOp(BinOpExpr {
        left: Box::new(L::new(module, l1, r1, left)),
        right: Box::new(L::new(module, l2, r2, right)),
        op: BinOp::Or,
    })
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action83<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Expr, Loc)) -> Expr {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action84<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, expr, _): (Loc, L<Expr>, Loc),
) -> Expr {
    Expr::Return(Box::new(expr))
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action85<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Expr, Loc)) -> Expr {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action86<'a>(
    module: &'a Rc<str>,
    (_, id, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, expr, _): (Loc, L<Expr>, Loc),
) -> (Option<SmolStr>, L<Expr>) {
    (Some(id.smol_str()), expr)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action87<'a>(
    module: &'a Rc<str>,
    (_, expr, _): (Loc, L<Expr>, Loc),
) -> (Option<SmolStr>, L<Expr>) {
    (None, expr)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action88<'a>(
    module: &'a Rc<str>,
    (_, name, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, expr, _): (Loc, L<Expr>, Loc),
) -> CallArg {
    CallArg {
        name: Some(name.smol_str()),
        expr,
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action89<'a>(module: &'a Rc<str>, (_, expr, _): (Loc, L<Expr>, Loc)) -> CallArg {
    CallArg { name: None, expr }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action90<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, pat, _): (Loc, Pat, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<Pat> {
    L::new(module, l, r, pat)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action91<'a>(module: &'a Rc<str>, (_, id, _): (Loc, Token, Loc)) -> Pat {
    Pat::Var(id.smol_str())
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action92<'a>(module: &'a Rc<str>, (_, constr, _): (Loc, ConstrPattern, Loc)) -> Pat {
    Pat::Constr(constr)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action93<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, fields, _): (Loc, Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Pat {
    Pat::Record(
        fields
            .into_iter()
            .map(|(name, pat)| Named {
                name,
                node: Box::new(pat),
            })
            .collect(),
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action94<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Token, Loc)) -> Pat {
    Pat::Ignore
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action95<'a>(module: &'a Rc<str>, (_, str, _): (Loc, Token, Loc)) -> Pat {
    Pat::Str(str.text[1..str.text.len() - 1].to_string())
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action96<'a>(module: &'a Rc<str>, (_, char, _): (Loc, Token, Loc)) -> Pat {
    Pat::Char(char.text.chars().nth(1).unwrap())
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action97<'a>(
    module: &'a Rc<str>,
    (_, str, _): (Loc, Token, Loc),
    (_, id, _): (Loc, Token, Loc),
) -> Pat {
    Pat::StrPfx(str.text[1..str.text.len() - 1].to_string(), id.smol_str())
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action98<'a>(
    module: &'a Rc<str>,
    (_, l1, _): (Loc, Loc, Loc),
    (_, p1, _): (Loc, Pat, Loc),
    (_, r1, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, l2, _): (Loc, Loc, Loc),
    (_, p2, _): (Loc, Pat, Loc),
    (_, r2, _): (Loc, Loc, Loc),
) -> Pat {
    {
        Pat::Or(
            Box::new(L::new(module, l1, r1, p1)),
            Box::new(L::new(module, l2, r2, p2)),
        )
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action99<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Pat, Loc)) -> Pat {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action100<'a>(
    module: &'a Rc<str>,
    (_, type_, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, constr, _): (Loc, Token, Loc),
) -> Constructor {
    Constructor {
        type_: type_.smol_str(),
        constr: Some(constr.smol_str()),
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action101<'a>(module: &'a Rc<str>, (_, type_, _): (Loc, Token, Loc)) -> Constructor {
    Constructor {
        type_: type_.smol_str(),
        constr: None,
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action102<'a>(module: &'a Rc<str>, (_, constr, _): (Loc, Constructor, Loc)) -> ConstrPattern {
    ConstrPattern {
        constr,
        fields: vec![],
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action103<'a>(
    module: &'a Rc<str>,
    (_, constr, _): (Loc, Constructor, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, fields, _): (Loc, Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> ConstrPattern {
    ConstrPattern {
        constr,
        fields: fields
            .into_iter()
            .map(|(name, pat)| Named {
                name,
                node: Box::new(pat),
            })
            .collect(),
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action104<'a>(
    module: &'a Rc<str>,
    (_, id, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, pat, _): (Loc, L<Pat>, Loc),
) -> (Option<SmolStr>, L<Pat>) {
    (Some(id.smol_str()), pat)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action105<'a>(
    module: &'a Rc<str>,
    (_, pat, _): (Loc, L<Pat>, Loc),
) -> (Option<SmolStr>, L<Pat>) {
    (None, pat)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action106<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, path, _): (Loc, Vec<Token>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<ImportDecl> {
    L::new(
        module,
        l,
        r,
        ImportDecl {
            path: path.into_iter().map(|t| t.smol_str()).collect(),
        },
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action107<'a>(
    module: &'a Rc<str>,
    (_, l, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, name, _): (Loc, L<SmolStr>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, bound_l, _): (Loc, Loc, Loc),
    (_, ty, _): (Loc, Token, Loc),
    (_, bounds, _): (Loc, core::option::Option<Vec<L<Type>>>, Loc),
    (_, bound_r, _): (Loc, Loc, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, funs, _): (Loc, alloc::vec::Vec<L<FunSig>>, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<TraitDecl> {
    L::new(
        module,
        l,
        r,
        TraitDecl {
            name,
            ty: L::new(
                module,
                bound_l,
                bound_r,
                (ty.smol_str(), bounds.unwrap_or(vec![])),
            ),
            funs,
        },
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action108<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, alloc::vec::Vec<L<TopDecl>>, Loc),
) -> Vec<L<TopDecl>> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action109<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, alloc::vec::Vec<Token>, Loc),
    (_, l, _): (Loc, Loc, Loc),
    (_, type_decl, _): (Loc, L<TypeDecl>, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<TopDecl> {
    L::new(module, l, r, TopDecl::Type(type_decl))
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action110<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, alloc::vec::Vec<Token>, Loc),
    (_, l, _): (Loc, Loc, Loc),
    (_, fun_decl, _): (Loc, L<FunDecl>, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<TopDecl> {
    L::new(module, l, r, TopDecl::Fun(fun_decl))
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action111<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, alloc::vec::Vec<Token>, Loc),
    (_, l, _): (Loc, Loc, Loc),
    (_, import_decl, _): (Loc, L<ImportDecl>, Loc),
    (_, r, _): (Loc, Loc, Loc),
) -> L<TopDecl> {
    L::new(module, l, r, TopDecl::Import(import_decl))
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action112<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<Token> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action113<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<Token>, Loc),
) -> alloc::vec::Vec<Token> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action114<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<L<TopDecl>> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action115<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<L<TopDecl>>, Loc),
) -> alloc::vec::Vec<L<TopDecl>> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action116<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<L<FunSig>> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action117<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<L<FunSig>>, Loc),
) -> alloc::vec::Vec<L<FunSig>> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action118<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, Vec<L<Type>>, Loc),
) -> core::option::Option<Vec<L<Type>>> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action119<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Vec<L<Type>>> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action120<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, __0, _): (Loc, Vec<L<Type>>, Loc),
) -> Vec<L<Type>> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action121<'a>(
    module: &'a Rc<str>,
    (_, mut v, _): (Loc, alloc::vec::Vec<Token>, Loc),
    (_, e, _): (Loc, core::option::Option<Token>, Loc),
) -> Vec<Token> {
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action122<'a>(
    module: &'a Rc<str>,
    (_, mut v, _): (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    (_, e, _): (Loc, core::option::Option<(Option<SmolStr>, L<Pat>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Pat>)> {
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action123<'a>(
    module: &'a Rc<str>,
    (_, mut v, _): (Loc, alloc::vec::Vec<CallArg>, Loc),
    (_, e, _): (Loc, core::option::Option<CallArg>, Loc),
) -> Vec<CallArg> {
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action124<'a>(
    module: &'a Rc<str>,
    (_, mut v, _): (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
    (_, e, _): (Loc, core::option::Option<(Option<SmolStr>, L<Expr>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Expr>)> {
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action125<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, Vec<L<Stmt>>, Loc),
) -> core::option::Option<Vec<L<Stmt>>> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action126<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Vec<L<Stmt>>> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action127<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, __0, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Vec<L<Stmt>> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action128<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action129<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
) -> alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action130<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, __0, _): (Loc, L<Expr>, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, __1, _): (Loc, Vec<L<Stmt>>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> (L<Expr>, Vec<L<Stmt>>) {
    (__0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action131<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<Alt> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action132<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<Alt>, Loc),
) -> alloc::vec::Vec<Alt> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action133<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<L<Stmt>> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action134<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<L<Stmt>>, Loc),
) -> alloc::vec::Vec<L<Stmt>> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action135<'a>(
    module: &'a Rc<str>,
    (_, mut v, _): (Loc, alloc::vec::Vec<L<Type>>, Loc),
    (_, e, _): (Loc, core::option::Option<L<Type>>, Loc),
) -> Vec<L<Type>> {
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action136<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<Type>, Loc),
) -> core::option::Option<L<Type>> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action137<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<L<Type>> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action138<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, __0, _): (Loc, L<Type>, Loc),
) -> L<Type> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action139<'a>(
    module: &'a Rc<str>,
    (_, mut v, _): (Loc, alloc::vec::Vec<(Token, L<Type>)>, Loc),
    (_, e, _): (Loc, core::option::Option<(Token, L<Type>)>, Loc),
) -> Vec<(Token, L<Type>)> {
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action140<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
    (_, __1, _): (Loc, L<Type>, Loc),
) -> (Token, L<Type>) {
    (__0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action141<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (Token, core::option::Option<Token>), Loc),
) -> core::option::Option<(Token, core::option::Option<Token>)> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action142<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<(Token, core::option::Option<Token>)> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action143<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, Token, Loc),
    (_, __1, _): (Loc, core::option::Option<Token>, Loc),
) -> (Token, core::option::Option<Token>) {
    (__0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action144<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
) -> core::option::Option<Vec<L<(L<SmolStr>, Vec<L<Type>>)>>> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action145<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Vec<L<(L<SmolStr>, Vec<L<Type>>)>>> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action146<'a>(
    module: &'a Rc<str>,
    (_, _, _): (Loc, Token, Loc),
    (_, __0, _): (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action147<'a>(
    module: &'a Rc<str>,
    (_, mut v, _): (Loc, alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    (_, e, _): (
        Loc,
        core::option::Option<L<(L<SmolStr>, Vec<L<Type>>)>>,
        Loc,
    ),
) -> Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action148<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<SmolStr>, Loc),
) -> core::option::Option<L<SmolStr>> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action149<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<L<SmolStr>> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action150<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<SmolStr>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> L<SmolStr> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action151<'a>(
    module: &'a Rc<str>,
    (_, mut v, _): (Loc, alloc::vec::Vec<Named<Type>>, Loc),
    (_, e, _): (Loc, core::option::Option<Named<Type>>, Loc),
) -> Vec<Named<Type>> {
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action152<'a>(
    module: &'a Rc<str>,
    (_, mut v, _): (Loc, alloc::vec::Vec<L<Type>>, Loc),
    (_, e, _): (Loc, core::option::Option<L<Type>>, Loc),
) -> Vec<L<Type>> {
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action153<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (SmolStr, Type), Loc),
) -> alloc::vec::Vec<(SmolStr, Type)> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action154<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<(SmolStr, Type)>, Loc),
    (_, e, _): (Loc, (SmolStr, Type), Loc),
) -> alloc::vec::Vec<(SmolStr, Type)> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action155<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (SmolStr, Type), Loc),
    (_, _, _): (Loc, Token, Loc),
) -> (SmolStr, Type) {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action156<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, Token, Loc),
) -> core::option::Option<Token> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action157<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Token> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action158<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, ConstructorDecl, Loc),
) -> alloc::vec::Vec<ConstructorDecl> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action159<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<ConstructorDecl>, Loc),
    (_, e, _): (Loc, ConstructorDecl, Loc),
) -> alloc::vec::Vec<ConstructorDecl> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action160<'a>(
    module: &'a Rc<str>,
    (_, mut v, _): (Loc, alloc::vec::Vec<Token>, Loc),
    (_, e, _): (Loc, core::option::Option<Token>, Loc),
) -> Vec<Token> {
    match e {
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

#[allow(unused_variables)]
fn __action161<'a>(module: &'a Rc<str>, __lookbehind: &Loc, __lookahead: &Loc) -> Loc {
    *__lookbehind
}

#[allow(unused_variables)]
fn __action162<'a>(module: &'a Rc<str>, __lookbehind: &Loc, __lookahead: &Loc) -> Loc {
    *__lookahead
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action163<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<Token> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action164<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<Token>, Loc),
) -> alloc::vec::Vec<Token> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action165<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Token {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action166<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<L<Type>> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action167<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<L<Type>>, Loc),
) -> alloc::vec::Vec<L<Type>> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action168<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<Type>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> L<Type> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action169<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, Named<Type>, Loc),
) -> core::option::Option<Named<Type>> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action170<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Named<Type>> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action171<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<Named<Type>> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action172<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<Named<Type>>, Loc),
) -> alloc::vec::Vec<Named<Type>> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action173<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, Named<Type>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Named<Type> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action174<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<(L<SmolStr>, Vec<L<Type>>)>, Loc),
) -> core::option::Option<L<(L<SmolStr>, Vec<L<Type>>)>> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action175<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<L<(L<SmolStr>, Vec<L<Type>>)>> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action176<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action177<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
) -> alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action178<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<(L<SmolStr>, Vec<L<Type>>)>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> L<(L<SmolStr>, Vec<L<Type>>)> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action179<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (Token, L<Type>), Loc),
) -> core::option::Option<(Token, L<Type>)> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action180<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<(Token, L<Type>)> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action181<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<(Token, L<Type>)> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action182<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<(Token, L<Type>)>, Loc),
) -> alloc::vec::Vec<(Token, L<Type>)> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action183<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (Token, L<Type>), Loc),
    (_, _, _): (Loc, Token, Loc),
) -> (Token, L<Type>) {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action184<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<Type>, Loc),
) -> core::option::Option<L<Type>> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action185<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<L<Type>> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action186<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<L<Type>> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action187<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<L<Type>>, Loc),
) -> alloc::vec::Vec<L<Type>> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action188<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<Type>, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> L<Type> {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action189<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<Stmt>, Loc),
) -> alloc::vec::Vec<L<Stmt>> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action190<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<L<Stmt>>, Loc),
    (_, e, _): (Loc, L<Stmt>, Loc),
) -> alloc::vec::Vec<L<Stmt>> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action191<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Alt, Loc)) -> alloc::vec::Vec<Alt> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action192<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<Alt>, Loc),
    (_, e, _): (Loc, Alt, Loc),
) -> alloc::vec::Vec<Alt> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action193<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (L<Expr>, Vec<L<Stmt>>), Loc),
) -> alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action194<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
    (_, e, _): (Loc, (L<Expr>, Vec<L<Stmt>>), Loc),
) -> alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action195<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (Option<SmolStr>, L<Expr>), Loc),
) -> core::option::Option<(Option<SmolStr>, L<Expr>)> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action196<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<(Option<SmolStr>, L<Expr>)> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action197<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<(Option<SmolStr>, L<Expr>)> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action198<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Expr>)> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action199<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (Option<SmolStr>, L<Expr>), Loc),
    (_, _, _): (Loc, Token, Loc),
) -> (Option<SmolStr>, L<Expr>) {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action200<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, CallArg, Loc),
) -> core::option::Option<CallArg> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action201<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<CallArg> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action202<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<CallArg> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action203<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<CallArg>, Loc),
) -> alloc::vec::Vec<CallArg> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action204<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, CallArg, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> CallArg {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action205<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (Option<SmolStr>, L<Pat>), Loc),
) -> core::option::Option<(Option<SmolStr>, L<Pat>)> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action206<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<(Option<SmolStr>, L<Pat>)> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action207<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<(Option<SmolStr>, L<Pat>)> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action208<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Pat>)> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action209<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (Option<SmolStr>, L<Pat>), Loc),
    (_, _, _): (Loc, Token, Loc),
) -> (Option<SmolStr>, L<Pat>) {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action210<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, Token, Loc),
) -> core::option::Option<Token> {
    Some(__0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action211<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> core::option::Option<Token> {
    None
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action212<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> alloc::vec::Vec<Token> {
    alloc::vec![]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action213<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<Token>, Loc),
) -> alloc::vec::Vec<Token> {
    v
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action214<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, Token, Loc),
    (_, _, _): (Loc, Token, Loc),
) -> Token {
    __0
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action215<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<FunSig>, Loc),
) -> alloc::vec::Vec<L<FunSig>> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action216<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<L<FunSig>>, Loc),
    (_, e, _): (Loc, L<FunSig>, Loc),
) -> alloc::vec::Vec<L<FunSig>> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action217<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<TopDecl>, Loc),
) -> alloc::vec::Vec<L<TopDecl>> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action218<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<L<TopDecl>>, Loc),
    (_, e, _): (Loc, L<TopDecl>, Loc),
) -> alloc::vec::Vec<L<TopDecl>> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action219<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Token, Loc)) -> alloc::vec::Vec<Token> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action220<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<Token>, Loc),
    (_, e, _): (Loc, Token, Loc),
) -> alloc::vec::Vec<Token> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action221<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Token, Loc)) -> alloc::vec::Vec<Token> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action222<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<Token>, Loc),
    (_, e, _): (Loc, Token, Loc),
) -> alloc::vec::Vec<Token> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action223<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (Option<SmolStr>, L<Pat>), Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Pat>)> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action224<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    (_, e, _): (Loc, (Option<SmolStr>, L<Pat>), Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Pat>)> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action225<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, CallArg, Loc),
) -> alloc::vec::Vec<CallArg> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action226<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<CallArg>, Loc),
    (_, e, _): (Loc, CallArg, Loc),
) -> alloc::vec::Vec<CallArg> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action227<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (Option<SmolStr>, L<Expr>), Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Expr>)> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action228<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
    (_, e, _): (Loc, (Option<SmolStr>, L<Expr>), Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Expr>)> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action229<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<Type>, Loc),
) -> alloc::vec::Vec<L<Type>> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action230<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<L<Type>>, Loc),
    (_, e, _): (Loc, L<Type>, Loc),
) -> alloc::vec::Vec<L<Type>> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action231<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, (Token, L<Type>), Loc),
) -> alloc::vec::Vec<(Token, L<Type>)> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action232<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<(Token, L<Type>)>, Loc),
    (_, e, _): (Loc, (Token, L<Type>), Loc),
) -> alloc::vec::Vec<(Token, L<Type>)> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action233<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<(L<SmolStr>, Vec<L<Type>>)>, Loc),
) -> alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action234<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    (_, e, _): (Loc, L<(L<SmolStr>, Vec<L<Type>>)>, Loc),
) -> alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action235<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, Named<Type>, Loc),
) -> alloc::vec::Vec<Named<Type>> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action236<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<Named<Type>>, Loc),
    (_, e, _): (Loc, Named<Type>, Loc),
) -> alloc::vec::Vec<Named<Type>> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action237<'a>(
    module: &'a Rc<str>,
    (_, __0, _): (Loc, L<Type>, Loc),
) -> alloc::vec::Vec<L<Type>> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action238<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<L<Type>>, Loc),
    (_, e, _): (Loc, L<Type>, Loc),
) -> alloc::vec::Vec<L<Type>> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action239<'a>(module: &'a Rc<str>, (_, __0, _): (Loc, Token, Loc)) -> alloc::vec::Vec<Token> {
    alloc::vec![__0]
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action240<'a>(
    module: &'a Rc<str>,
    (_, v, _): (Loc, alloc::vec::Vec<Token>, Loc),
    (_, e, _): (Loc, Token, Loc),
) -> alloc::vec::Vec<Token> {
    {
        let mut v = v;
        v.push(e);
        v
    }
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action241<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
) -> (Token, core::option::Option<Token>) {
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action156(module, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action143(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action242<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
) -> (Token, core::option::Option<Token>) {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action157(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action143(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action243<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Vec<Type>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
) -> ConstructorDecl {
    let __start0 = __3.0;
    let __end0 = __3.2;
    let __temp0 = __action156(module, __3);
    let __temp0 = (__start0, __temp0, __end0);
    __action14(module, __0, __1, __2, __temp0, __4, __5)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action244<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Vec<Type>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
) -> ConstructorDecl {
    let __start0 = __2.2;
    let __end0 = __3.0;
    let __temp0 = __action157(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action14(module, __0, __1, __2, __temp0, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action245<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<Type>, Loc),
) -> core::option::Option<L<Type>> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action138(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action136(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action246<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (
        Loc,
        core::option::Option<Vec<L<(L<SmolStr>, Vec<L<Type>>)>>>,
        Loc,
    ),
    __4: (Loc, Token, Loc),
    __5: (
        Loc,
        core::option::Option<(Token, core::option::Option<Token>)>,
        Loc,
    ),
    __6: (Loc, Vec<(Token, L<Type>)>, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __8.0;
    let __end0 = __9.2;
    let __temp0 = __action245(module, __8, __9);
    let __temp0 = (__start0, __temp0, __end0);
    __action28(module, __0, __1, __2, __3, __4, __5, __6, __7, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action247<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (
        Loc,
        core::option::Option<Vec<L<(L<SmolStr>, Vec<L<Type>>)>>>,
        Loc,
    ),
    __4: (Loc, Token, Loc),
    __5: (
        Loc,
        core::option::Option<(Token, core::option::Option<Token>)>,
        Loc,
    ),
    __6: (Loc, Vec<(Token, L<Type>)>, Loc),
    __7: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __7.2;
    let __end0 = __7.2;
    let __temp0 = __action137(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action28(module, __0, __1, __2, __3, __4, __5, __6, __7, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action248<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<Pat>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<Type>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, L<Expr>, Loc),
    __6: (Loc, Token, Loc),
) -> Stmt {
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action245(module, __2, __3);
    let __temp0 = (__start0, __temp0, __end0);
    __action33(module, __0, __1, __temp0, __4, __5, __6)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action249<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<Pat>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<Expr>, Loc),
    __4: (Loc, Token, Loc),
) -> Stmt {
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action137(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action33(module, __0, __1, __temp0, __2, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action250<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<Pat>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<Type>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, L<Expr>, Loc),
) -> Stmt {
    let __start0 = __2.0;
    let __end0 = __3.2;
    let __temp0 = __action245(module, __2, __3);
    let __temp0 = (__start0, __temp0, __end0);
    __action34(module, __0, __1, __temp0, __4, __5)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action251<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<Pat>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<Expr>, Loc),
) -> Stmt {
    let __start0 = __1.2;
    let __end0 = __2.0;
    let __temp0 = __action137(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action34(module, __0, __1, __temp0, __2, __3)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action252<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Vec<L<Type>>, Loc),
) -> core::option::Option<Vec<L<Type>>> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action120(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action118(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action253<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Loc, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Vec<L<Type>>, Loc),
    __8: (Loc, Loc, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, Token, Loc),
    __11: (Loc, Token, Loc),
    __12: (Loc, Token, Loc),
    __13: (Loc, alloc::vec::Vec<L<FunSig>>, Loc),
    __14: (Loc, Loc, Loc),
) -> L<TraitDecl> {
    let __start0 = __6.0;
    let __end0 = __7.2;
    let __temp0 = __action252(module, __6, __7);
    let __temp0 = (__start0, __temp0, __end0);
    __action107(
        module, __0, __1, __2, __3, __4, __5, __temp0, __8, __9, __10, __11, __12, __13, __14,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action254<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Loc, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Loc, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Loc, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, Token, Loc),
    __11: (Loc, alloc::vec::Vec<L<FunSig>>, Loc),
    __12: (Loc, Loc, Loc),
) -> L<TraitDecl> {
    let __start0 = __5.2;
    let __end0 = __6.0;
    let __temp0 = __action119(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action107(
        module, __0, __1, __2, __3, __4, __5, __temp0, __6, __7, __8, __9, __10, __11, __12,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action255<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __2: (Loc, Token, Loc),
) -> core::option::Option<Vec<L<(L<SmolStr>, Vec<L<Type>>)>>> {
    let __start0 = __0.0;
    let __end0 = __2.2;
    let __temp0 = __action146(module, __0, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action144(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action256<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (
        Loc,
        core::option::Option<(Token, core::option::Option<Token>)>,
        Loc,
    ),
    __8: (Loc, Vec<(Token, L<Type>)>, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, Token, Loc),
    __11: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __3.0;
    let __end0 = __5.2;
    let __temp0 = __action255(module, __3, __4, __5);
    let __temp0 = (__start0, __temp0, __end0);
    __action246(
        module, __0, __1, __2, __temp0, __6, __7, __8, __9, __10, __11,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action257<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (
        Loc,
        core::option::Option<(Token, core::option::Option<Token>)>,
        Loc,
    ),
    __5: (Loc, Vec<(Token, L<Type>)>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __2.2;
    let __end0 = __3.0;
    let __temp0 = __action145(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action246(module, __0, __1, __2, __temp0, __3, __4, __5, __6, __7, __8)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action258<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (
        Loc,
        core::option::Option<(Token, core::option::Option<Token>)>,
        Loc,
    ),
    __8: (Loc, Vec<(Token, L<Type>)>, Loc),
    __9: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __3.0;
    let __end0 = __5.2;
    let __temp0 = __action255(module, __3, __4, __5);
    let __temp0 = (__start0, __temp0, __end0);
    __action247(module, __0, __1, __2, __temp0, __6, __7, __8, __9)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action259<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (
        Loc,
        core::option::Option<(Token, core::option::Option<Token>)>,
        Loc,
    ),
    __5: (Loc, Vec<(Token, L<Type>)>, Loc),
    __6: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __2.2;
    let __end0 = __3.0;
    let __temp0 = __action145(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action247(module, __0, __1, __2, __temp0, __3, __4, __5, __6)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action260<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token, Loc),
) -> alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)> {
    let __start0 = __0.0;
    let __end0 = __6.2;
    let __temp0 = __action130(module, __0, __1, __2, __3, __4, __5, __6);
    let __temp0 = (__start0, __temp0, __end0);
    __action193(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action261<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, L<Expr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Vec<L<Stmt>>, Loc),
    __7: (Loc, Token, Loc),
) -> alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)> {
    let __start0 = __1.0;
    let __end0 = __7.2;
    let __temp0 = __action130(module, __1, __2, __3, __4, __5, __6, __7);
    let __temp0 = (__start0, __temp0, __end0);
    __action194(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action262<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, core::option::Option<Vec<L<Stmt>>>, Loc),
) -> Expr {
    let __start0 = __6.2;
    let __end0 = __7.0;
    let __temp0 = __action128(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action51(module, __0, __1, __2, __3, __4, __5, __6, __temp0, __7)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action263<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
    __8: (Loc, core::option::Option<Vec<L<Stmt>>>, Loc),
) -> Expr {
    let __start0 = __7.0;
    let __end0 = __7.2;
    let __temp0 = __action129(module, __7);
    let __temp0 = (__start0, __temp0, __end0);
    __action51(module, __0, __1, __2, __3, __4, __5, __6, __temp0, __8)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action264<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<L<Stmt>>, Loc),
    __5: (Loc, Token, Loc),
) -> core::option::Option<Vec<L<Stmt>>> {
    let __start0 = __0.0;
    let __end0 = __5.2;
    let __temp0 = __action127(module, __0, __1, __2, __3, __4, __5);
    let __temp0 = (__start0, __temp0, __end0);
    __action125(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action265<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, Token, Loc),
    __11: (Loc, Vec<L<Stmt>>, Loc),
    __12: (Loc, Token, Loc),
) -> Expr {
    let __start0 = __7.0;
    let __end0 = __12.2;
    let __temp0 = __action264(module, __7, __8, __9, __10, __11, __12);
    let __temp0 = (__start0, __temp0, __end0);
    __action262(module, __0, __1, __2, __3, __4, __5, __6, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action266<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token, Loc),
) -> Expr {
    let __start0 = __6.2;
    let __end0 = __6.2;
    let __temp0 = __action126(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action262(module, __0, __1, __2, __3, __4, __5, __6, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action267<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, Token, Loc),
    __11: (Loc, Token, Loc),
    __12: (Loc, Vec<L<Stmt>>, Loc),
    __13: (Loc, Token, Loc),
) -> Expr {
    let __start0 = __8.0;
    let __end0 = __13.2;
    let __temp0 = __action264(module, __8, __9, __10, __11, __12, __13);
    let __temp0 = (__start0, __temp0, __end0);
    __action263(module, __0, __1, __2, __3, __4, __5, __6, __7, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action268<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<Expr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<Stmt>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, alloc::vec::Vec<(L<Expr>, Vec<L<Stmt>>)>, Loc),
) -> Expr {
    let __start0 = __7.2;
    let __end0 = __7.2;
    let __temp0 = __action126(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action263(module, __0, __1, __2, __3, __4, __5, __6, __7, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action269<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
) -> core::option::Option<(Token, core::option::Option<Token>)> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action241(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action141(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action270<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
) -> core::option::Option<(Token, core::option::Option<Token>)> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action242(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action141(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action271<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Vec<(Token, L<Type>)>, Loc),
    __10: (Loc, Token, Loc),
    __11: (Loc, Token, Loc),
    __12: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __7.0;
    let __end0 = __8.2;
    let __temp0 = __action269(module, __7, __8);
    let __temp0 = (__start0, __temp0, __end0);
    __action256(
        module, __0, __1, __2, __3, __4, __5, __6, __temp0, __9, __10, __11, __12,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action272<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Vec<(Token, L<Type>)>, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, Token, Loc),
    __11: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __7.0;
    let __end0 = __7.2;
    let __temp0 = __action270(module, __7);
    let __temp0 = (__start0, __temp0, __end0);
    __action256(
        module, __0, __1, __2, __3, __4, __5, __6, __temp0, __8, __9, __10, __11,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action273<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Vec<(Token, L<Type>)>, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __6.2;
    let __end0 = __7.0;
    let __temp0 = __action142(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action256(
        module, __0, __1, __2, __3, __4, __5, __6, __temp0, __7, __8, __9, __10,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action274<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Vec<(Token, L<Type>)>, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __4.0;
    let __end0 = __5.2;
    let __temp0 = __action269(module, __4, __5);
    let __temp0 = (__start0, __temp0, __end0);
    __action257(module, __0, __1, __2, __3, __temp0, __6, __7, __8, __9)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action275<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<(Token, L<Type>)>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __4.0;
    let __end0 = __4.2;
    let __temp0 = __action270(module, __4);
    let __temp0 = (__start0, __temp0, __end0);
    __action257(module, __0, __1, __2, __3, __temp0, __5, __6, __7, __8)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action276<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<(Token, L<Type>)>, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __3.2;
    let __end0 = __4.0;
    let __temp0 = __action142(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action257(module, __0, __1, __2, __3, __temp0, __4, __5, __6, __7)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action277<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Vec<(Token, L<Type>)>, Loc),
    __10: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __7.0;
    let __end0 = __8.2;
    let __temp0 = __action269(module, __7, __8);
    let __temp0 = (__start0, __temp0, __end0);
    __action258(
        module, __0, __1, __2, __3, __4, __5, __6, __temp0, __9, __10,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action278<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Vec<(Token, L<Type>)>, Loc),
    __9: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __7.0;
    let __end0 = __7.2;
    let __temp0 = __action270(module, __7);
    let __temp0 = (__start0, __temp0, __end0);
    __action258(module, __0, __1, __2, __3, __4, __5, __6, __temp0, __8, __9)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action279<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Vec<(Token, L<Type>)>, Loc),
    __8: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __6.2;
    let __end0 = __7.0;
    let __temp0 = __action142(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action258(module, __0, __1, __2, __3, __4, __5, __6, __temp0, __7, __8)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action280<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Vec<(Token, L<Type>)>, Loc),
    __7: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __4.0;
    let __end0 = __5.2;
    let __temp0 = __action269(module, __4, __5);
    let __temp0 = (__start0, __temp0, __end0);
    __action259(module, __0, __1, __2, __3, __temp0, __6, __7)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action281<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<(Token, L<Type>)>, Loc),
    __6: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __4.0;
    let __end0 = __4.2;
    let __temp0 = __action270(module, __4);
    let __temp0 = (__start0, __temp0, __end0);
    __action259(module, __0, __1, __2, __3, __temp0, __5, __6)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action282<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, core::option::Option<L<SmolStr>>, Loc),
    __2: (Loc, L<SmolStr>, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<(Token, L<Type>)>, Loc),
    __5: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __3.2;
    let __end0 = __4.0;
    let __temp0 = __action142(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action259(module, __0, __1, __2, __3, __temp0, __4, __5)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action283<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, L<Type>, Loc),
    __3: (Loc, Token, Loc),
) -> (Token, L<Type>) {
    let __start0 = __0.0;
    let __end0 = __2.2;
    let __temp0 = __action140(module, __0, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action183(module, __temp0, __3)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action284<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, L<Type>, Loc),
) -> core::option::Option<(Token, L<Type>)> {
    let __start0 = __0.0;
    let __end0 = __2.2;
    let __temp0 = __action140(module, __0, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action179(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action285<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, L<Type>, Loc),
    __3: (Loc, Token, Loc),
) -> alloc::vec::Vec<(Token, L<Type>)> {
    let __start0 = __0.0;
    let __end0 = __3.2;
    let __temp0 = __action283(module, __0, __1, __2, __3);
    let __temp0 = (__start0, __temp0, __end0);
    __action231(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action286<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(Token, L<Type>)>, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<Type>, Loc),
    __4: (Loc, Token, Loc),
) -> alloc::vec::Vec<(Token, L<Type>)> {
    let __start0 = __1.0;
    let __end0 = __4.2;
    let __temp0 = __action283(module, __1, __2, __3, __4);
    let __temp0 = (__start0, __temp0, __end0);
    __action232(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action287<'a>(
    module: &'a Rc<str>,
    __0: (Loc, core::option::Option<(Token, L<Type>)>, Loc),
) -> Vec<(Token, L<Type>)> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action181(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action139(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action288<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(Token, L<Type>)>, Loc),
    __1: (Loc, core::option::Option<(Token, L<Type>)>, Loc),
) -> Vec<(Token, L<Type>)> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action182(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action139(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action289<'a>(
    module: &'a Rc<str>,
    __0: (Loc, CallArg, Loc),
    __1: (Loc, Token, Loc),
) -> alloc::vec::Vec<CallArg> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action204(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action225(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action290<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<CallArg>, Loc),
    __1: (Loc, CallArg, Loc),
    __2: (Loc, Token, Loc),
) -> alloc::vec::Vec<CallArg> {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action204(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action226(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action291<'a>(
    module: &'a Rc<str>,
    __0: (Loc, core::option::Option<CallArg>, Loc),
) -> Vec<CallArg> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action202(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action123(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action292<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<CallArg>, Loc),
    __1: (Loc, core::option::Option<CallArg>, Loc),
) -> Vec<CallArg> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action203(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action123(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action293<'a>(
    module: &'a Rc<str>,
    __0: (Loc, L<Type>, Loc),
    __1: (Loc, Token, Loc),
) -> alloc::vec::Vec<L<Type>> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action188(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action229(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action294<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<L<Type>>, Loc),
    __1: (Loc, L<Type>, Loc),
    __2: (Loc, Token, Loc),
) -> alloc::vec::Vec<L<Type>> {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action188(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action230(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action295<'a>(
    module: &'a Rc<str>,
    __0: (Loc, core::option::Option<L<Type>>, Loc),
) -> Vec<L<Type>> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action186(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action135(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action296<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<L<Type>>, Loc),
    __1: (Loc, core::option::Option<L<Type>>, Loc),
) -> Vec<L<Type>> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action187(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action135(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action297<'a>(
    module: &'a Rc<str>,
    __0: (Loc, L<Type>, Loc),
    __1: (Loc, Token, Loc),
) -> alloc::vec::Vec<L<Type>> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action168(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action237(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action298<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<L<Type>>, Loc),
    __1: (Loc, L<Type>, Loc),
    __2: (Loc, Token, Loc),
) -> alloc::vec::Vec<L<Type>> {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action168(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action238(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action299<'a>(
    module: &'a Rc<str>,
    __0: (Loc, core::option::Option<L<Type>>, Loc),
) -> Vec<L<Type>> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action166(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action152(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action300<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<L<Type>>, Loc),
    __1: (Loc, core::option::Option<L<Type>>, Loc),
) -> Vec<L<Type>> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action167(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action152(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action301<'a>(
    module: &'a Rc<str>,
    __0: (Loc, L<SmolStr>, Loc),
    __1: (Loc, Token, Loc),
) -> core::option::Option<L<SmolStr>> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action150(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action148(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action302<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, Vec<(Token, L<Type>)>, Loc),
    __11: (Loc, Token, Loc),
    __12: (Loc, Token, Loc),
    __13: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action301(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action271(
        module, __0, __temp0, __3, __4, __5, __6, __7, __8, __9, __10, __11, __12, __13,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action303<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Vec<(Token, L<Type>)>, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, Token, Loc),
    __11: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action149(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action271(
        module, __0, __temp0, __1, __2, __3, __4, __5, __6, __7, __8, __9, __10, __11,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action304<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Vec<(Token, L<Type>)>, Loc),
    __10: (Loc, Token, Loc),
    __11: (Loc, Token, Loc),
    __12: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action301(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action272(
        module, __0, __temp0, __3, __4, __5, __6, __7, __8, __9, __10, __11, __12,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action305<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Vec<(Token, L<Type>)>, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action149(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action272(
        module, __0, __temp0, __1, __2, __3, __4, __5, __6, __7, __8, __9, __10,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action306<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Vec<(Token, L<Type>)>, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, Token, Loc),
    __11: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action301(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action273(
        module, __0, __temp0, __3, __4, __5, __6, __7, __8, __9, __10, __11,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action307<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Vec<(Token, L<Type>)>, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action149(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action273(
        module, __0, __temp0, __1, __2, __3, __4, __5, __6, __7, __8, __9,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action308<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Vec<(Token, L<Type>)>, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action301(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action274(
        module, __0, __temp0, __3, __4, __5, __6, __7, __8, __9, __10,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action309<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<(Token, L<Type>)>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action149(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action274(module, __0, __temp0, __1, __2, __3, __4, __5, __6, __7, __8)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action310<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Vec<(Token, L<Type>)>, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action301(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action275(module, __0, __temp0, __3, __4, __5, __6, __7, __8, __9)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action311<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<(Token, L<Type>)>, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action149(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action275(module, __0, __temp0, __1, __2, __3, __4, __5, __6, __7)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action312<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<(Token, L<Type>)>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action301(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action276(module, __0, __temp0, __3, __4, __5, __6, __7, __8)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action313<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Vec<(Token, L<Type>)>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, L<Type>, Loc),
) -> FunSig {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action149(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action276(module, __0, __temp0, __1, __2, __3, __4, __5, __6)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action314<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, Vec<(Token, L<Type>)>, Loc),
    __11: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action301(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action277(
        module, __0, __temp0, __3, __4, __5, __6, __7, __8, __9, __10, __11,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action315<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Vec<(Token, L<Type>)>, Loc),
    __9: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action149(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action277(
        module, __0, __temp0, __1, __2, __3, __4, __5, __6, __7, __8, __9,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action316<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Vec<(Token, L<Type>)>, Loc),
    __10: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action301(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action278(
        module, __0, __temp0, __3, __4, __5, __6, __7, __8, __9, __10,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action317<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Vec<(Token, L<Type>)>, Loc),
    __8: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action149(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action278(module, __0, __temp0, __1, __2, __3, __4, __5, __6, __7, __8)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action318<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Vec<(Token, L<Type>)>, Loc),
    __9: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action301(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action279(module, __0, __temp0, __3, __4, __5, __6, __7, __8, __9)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action319<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Vec<(Token, L<Type>)>, Loc),
    __7: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action149(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action279(module, __0, __temp0, __1, __2, __3, __4, __5, __6, __7)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action320<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Vec<(Token, L<Type>)>, Loc),
    __8: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action301(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action280(module, __0, __temp0, __3, __4, __5, __6, __7, __8)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action321<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<(Token, L<Type>)>, Loc),
    __6: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action149(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action280(module, __0, __temp0, __1, __2, __3, __4, __5, __6)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action322<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Vec<(Token, L<Type>)>, Loc),
    __7: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action301(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action281(module, __0, __temp0, __3, __4, __5, __6, __7)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action323<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<(Token, L<Type>)>, Loc),
    __5: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action149(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action281(module, __0, __temp0, __1, __2, __3, __4, __5)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action324<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<(Token, L<Type>)>, Loc),
    __6: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action301(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action282(module, __0, __temp0, __3, __4, __5, __6)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action325<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Vec<(Token, L<Type>)>, Loc),
    __4: (Loc, Token, Loc),
) -> FunSig {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action149(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action282(module, __0, __temp0, __1, __2, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action326<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, L<Type>, Loc),
) -> Vec<(Token, L<Type>)> {
    let __start0 = __0.0;
    let __end0 = __2.2;
    let __temp0 = __action284(module, __0, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action287(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action327<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<(Token, L<Type>)> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action180(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action287(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action328<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(Token, L<Type>)>, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<Type>, Loc),
) -> Vec<(Token, L<Type>)> {
    let __start0 = __1.0;
    let __end0 = __3.2;
    let __temp0 = __action284(module, __1, __2, __3);
    let __temp0 = (__start0, __temp0, __end0);
    __action288(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action329<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(Token, L<Type>)>, Loc),
) -> Vec<(Token, L<Type>)> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action180(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action288(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action330<'a>(
    module: &'a Rc<str>,
    __0: (Loc, (SmolStr, Type), Loc),
    __1: (Loc, Token, Loc),
) -> alloc::vec::Vec<(SmolStr, Type)> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action155(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action153(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action331<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(SmolStr, Type)>, Loc),
    __1: (Loc, (SmolStr, Type), Loc),
    __2: (Loc, Token, Loc),
) -> alloc::vec::Vec<(SmolStr, Type)> {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action155(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action154(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action332<'a>(
    module: &'a Rc<str>,
    __0: (Loc, (Option<SmolStr>, L<Expr>), Loc),
    __1: (Loc, Token, Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Expr>)> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action199(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action227(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action333<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
    __1: (Loc, (Option<SmolStr>, L<Expr>), Loc),
    __2: (Loc, Token, Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Expr>)> {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action199(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action228(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action334<'a>(
    module: &'a Rc<str>,
    __0: (Loc, core::option::Option<(Option<SmolStr>, L<Expr>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Expr>)> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action197(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action124(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action335<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
    __1: (Loc, core::option::Option<(Option<SmolStr>, L<Expr>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Expr>)> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action198(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action124(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action336<'a>(
    module: &'a Rc<str>,
    __0: (Loc, (Option<SmolStr>, L<Pat>), Loc),
    __1: (Loc, Token, Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Pat>)> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action209(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action223(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action337<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    __1: (Loc, (Option<SmolStr>, L<Pat>), Loc),
    __2: (Loc, Token, Loc),
) -> alloc::vec::Vec<(Option<SmolStr>, L<Pat>)> {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action209(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action224(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action338<'a>(
    module: &'a Rc<str>,
    __0: (Loc, core::option::Option<(Option<SmolStr>, L<Pat>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Pat>)> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action207(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action122(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action339<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    __1: (Loc, core::option::Option<(Option<SmolStr>, L<Pat>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Pat>)> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action208(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action122(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action340<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Named<Type>, Loc),
    __1: (Loc, Token, Loc),
) -> alloc::vec::Vec<Named<Type>> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action173(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action235(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action341<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Named<Type>>, Loc),
    __1: (Loc, Named<Type>, Loc),
    __2: (Loc, Token, Loc),
) -> alloc::vec::Vec<Named<Type>> {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action173(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action236(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action342<'a>(
    module: &'a Rc<str>,
    __0: (Loc, core::option::Option<Named<Type>>, Loc),
) -> Vec<Named<Type>> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action171(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action151(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action343<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Named<Type>>, Loc),
    __1: (Loc, core::option::Option<Named<Type>>, Loc),
) -> Vec<Named<Type>> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action172(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action151(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action344<'a>(
    module: &'a Rc<str>,
    __0: (Loc, L<(L<SmolStr>, Vec<L<Type>>)>, Loc),
    __1: (Loc, Token, Loc),
) -> alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action178(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action233(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action345<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __1: (Loc, L<(L<SmolStr>, Vec<L<Type>>)>, Loc),
    __2: (Loc, Token, Loc),
) -> alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action178(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action234(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action346<'a>(
    module: &'a Rc<str>,
    __0: (
        Loc,
        core::option::Option<L<(L<SmolStr>, Vec<L<Type>>)>>,
        Loc,
    ),
) -> Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action176(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action147(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action347<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __1: (
        Loc,
        core::option::Option<L<(L<SmolStr>, Vec<L<Type>>)>>,
        Loc,
    ),
) -> Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action177(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action147(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action348<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
) -> alloc::vec::Vec<Token> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action165(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action239(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action349<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Token, Loc),
) -> alloc::vec::Vec<Token> {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action165(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action240(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action350<'a>(
    module: &'a Rc<str>,
    __0: (Loc, core::option::Option<Token>, Loc),
) -> Vec<Token> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action163(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action160(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action351<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, core::option::Option<Token>, Loc),
) -> Vec<Token> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action164(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action160(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action352<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
) -> alloc::vec::Vec<Token> {
    let __start0 = __0.0;
    let __end0 = __1.2;
    let __temp0 = __action214(module, __0, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action221(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action353<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Token, Loc),
) -> alloc::vec::Vec<Token> {
    let __start0 = __1.0;
    let __end0 = __2.2;
    let __temp0 = __action214(module, __1, __2);
    let __temp0 = (__start0, __temp0, __end0);
    __action222(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action354<'a>(
    module: &'a Rc<str>,
    __0: (Loc, core::option::Option<Token>, Loc),
) -> Vec<Token> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action212(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action121(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action355<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, core::option::Option<Token>, Loc),
) -> Vec<Token> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action213(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action121(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action356<'a>(
    module: &'a Rc<str>,
    __0: (Loc, FunSig, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<L<Stmt>>, Loc),
    __5: (Loc, Loc, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Loc, Loc),
) -> L<FunDecl> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __3.2;
    let __end1 = __4.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action25(
        module, __temp0, __0, __1, __2, __3, __temp1, __4, __5, __6, __7,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action357<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, FunSig, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Loc, Loc),
) -> L<FunDecl> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action26(module, __temp0, __0, __1, __2, __3)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action358<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Vec<Token>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Loc, Loc),
) -> L<ImportDecl> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action106(module, __temp0, __0, __1, __2, __3)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action359<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, L<Expr>, Loc),
    __4: (Loc, Token, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action60(module, __temp0, __0, __1, __2, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action360<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Vec<CallArg>, Loc),
    __4: (Loc, Token, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action61(module, __temp0, __0, __1, __2, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action361<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action62(module, __temp0, __0, __1, __2, __3)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action362<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action64(module, __temp0, __0, __1, __2, __temp1, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action363<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Expr, Loc),
    __2: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action66(module, __0, __temp0, __1, __2)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action364<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action68(module, __temp0, __0, __1, __2, __temp1, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action365<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action70(module, __temp0, __0, __1, __2, __temp1, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action366<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action71(module, __temp0, __0, __1, __2, __temp1, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action367<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action73(module, __temp0, __0, __1, __2, __temp1, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action368<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action74(module, __temp0, __0, __1, __2, __temp1, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action369<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action75(module, __temp0, __0, __1, __2, __temp1, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action370<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action76(module, __temp0, __0, __1, __2, __temp1, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action371<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action77(module, __temp0, __0, __1, __2, __temp1, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action372<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action78(module, __temp0, __0, __1, __2, __temp1, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action373<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action80(module, __temp0, __0, __1, __2, __temp1, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action374<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Expr, Loc),
    __4: (Loc, Loc, Loc),
) -> Expr {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action82(module, __temp0, __0, __1, __2, __temp1, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action375<'a>(module: &'a Rc<str>, __0: (Loc, Expr, Loc), __1: (Loc, Loc, Loc)) -> L<Expr> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action49(module, __temp0, __0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action376<'a>(module: &'a Rc<str>, __0: (Loc, Expr, Loc), __1: (Loc, Loc, Loc)) -> L<Expr> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action46(module, __temp0, __0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action377<'a>(
    module: &'a Rc<str>,
    __0: (Loc, FunSig, Loc),
    __1: (Loc, Loc, Loc),
) -> L<FunSig> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action27(module, __temp0, __0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action378<'a>(module: &'a Rc<str>, __0: (Loc, Expr, Loc), __1: (Loc, Loc, Loc)) -> L<Expr> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action52(module, __temp0, __0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action379<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Loc, Loc),
) -> L<SmolStr> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action4(module, __temp0, __0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action380<'a>(module: &'a Rc<str>, __0: (Loc, Pat, Loc), __1: (Loc, Loc, Loc)) -> L<Pat> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action90(module, __temp0, __0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action381<'a>(module: &'a Rc<str>, __0: (Loc, Stmt, Loc), __1: (Loc, Loc, Loc)) -> L<Stmt> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action32(module, __temp0, __0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action382<'a>(module: &'a Rc<str>, __0: (Loc, Type, Loc), __1: (Loc, Loc, Loc)) -> L<Type> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action19(module, __temp0, __0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action383<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Loc, Loc),
) -> L<SmolStr> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action3(module, __temp0, __0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action384<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Pat, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Pat, Loc),
) -> Pat {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __start2 = __3.2;
    let __end2 = __3.2;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    let __temp2 = __action162(module, &__start2, &__end2);
    let __temp2 = (__start2, __temp2, __end2);
    __action98(module, __temp0, __0, __1, __2, __temp1, __3, __temp2)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action385<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Loc, Loc),
    __2: (Loc, Token, Loc),
) -> Stmt {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action36(module, __temp0, __0, __1, __2)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action386<'a>(module: &'a Rc<str>, __0: (Loc, Expr, Loc), __1: (Loc, Loc, Loc)) -> Stmt {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action37(module, __temp0, __0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action387<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, L<TypeDecl>, Loc),
    __2: (Loc, Loc, Loc),
) -> L<TopDecl> {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action109(module, __0, __temp0, __1, __2)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action388<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, L<FunDecl>, Loc),
    __2: (Loc, Loc, Loc),
) -> L<TopDecl> {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action110(module, __0, __temp0, __1, __2)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action389<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, L<ImportDecl>, Loc),
    __2: (Loc, Loc, Loc),
) -> L<TopDecl> {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action111(module, __0, __temp0, __1, __2)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action390<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<Type>>, Loc),
    __6: (Loc, Loc, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, Token, Loc),
    __11: (Loc, alloc::vec::Vec<L<FunSig>>, Loc),
    __12: (Loc, Loc, Loc),
) -> L<TraitDecl> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action253(
        module, __temp0, __0, __1, __2, __temp1, __3, __4, __5, __6, __7, __8, __9, __10, __11,
        __12,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action391<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Loc, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, alloc::vec::Vec<L<FunSig>>, Loc),
    __10: (Loc, Loc, Loc),
) -> L<TraitDecl> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __start1 = __2.2;
    let __end1 = __3.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action162(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action254(
        module, __temp0, __0, __1, __2, __temp1, __3, __4, __5, __6, __7, __8, __9, __10,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action392<'a>(
    module: &'a Rc<str>,
    __0: (Loc, L<SmolStr>, Loc),
    __1: (Loc, Loc, Loc),
) -> L<(L<SmolStr>, Vec<L<Type>>)> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action29(module, __temp0, __0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action393<'a>(
    module: &'a Rc<str>,
    __0: (Loc, L<SmolStr>, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Vec<L<Type>>, Loc),
    __3: (Loc, Loc, Loc),
) -> L<(L<SmolStr>, Vec<L<Type>>)> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action30(module, __temp0, __0, __1, __2, __3)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action394<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Vec<SmolStr>, Loc),
    __3: (Loc, TypeDeclRhs, Loc),
    __4: (Loc, Loc, Loc),
) -> L<TypeDecl> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action5(module, __temp0, __0, __1, __2, __3, __4)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action395<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Vec<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Loc, Loc),
) -> L<TypeDecl> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action162(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action6(module, __temp0, __0, __1, __2, __3, __4, __5)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action396<'a>(
    module: &'a Rc<str>,
    __0: (Loc, FunSig, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Vec<L<Stmt>>, Loc),
    __5: (Loc, Token, Loc),
) -> L<FunDecl> {
    let __start0 = __4.2;
    let __end0 = __5.0;
    let __start1 = __5.2;
    let __end1 = __5.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action356(module, __0, __1, __2, __3, __4, __temp0, __5, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action397<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, FunSig, Loc),
    __2: (Loc, Token, Loc),
) -> L<FunDecl> {
    let __start0 = __2.2;
    let __end0 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action357(module, __0, __1, __2, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action398<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Vec<Token>, Loc),
    __2: (Loc, Token, Loc),
) -> L<ImportDecl> {
    let __start0 = __2.2;
    let __end0 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action358(module, __0, __1, __2, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action399<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, L<Expr>, Loc),
    __3: (Loc, Token, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action359(module, __0, __temp0, __1, __2, __3)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action400<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Vec<CallArg>, Loc),
    __3: (Loc, Token, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action360(module, __0, __temp0, __1, __2, __3)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action401<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Token, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action361(module, __0, __temp0, __1, __2)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action402<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action362(module, __0, __temp0, __1, __2, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action403<'a>(module: &'a Rc<str>, __0: (Loc, Token, Loc), __1: (Loc, Expr, Loc)) -> Expr {
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action363(module, __0, __1, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action404<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action364(module, __0, __temp0, __1, __2, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action405<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action365(module, __0, __temp0, __1, __2, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action406<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action366(module, __0, __temp0, __1, __2, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action407<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action367(module, __0, __temp0, __1, __2, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action408<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action368(module, __0, __temp0, __1, __2, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action409<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action369(module, __0, __temp0, __1, __2, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action410<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action370(module, __0, __temp0, __1, __2, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action411<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action371(module, __0, __temp0, __1, __2, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action412<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action372(module, __0, __temp0, __1, __2, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action413<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action373(module, __0, __temp0, __1, __2, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action414<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Expr, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Expr, Loc),
) -> Expr {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __start1 = __2.2;
    let __end1 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action374(module, __0, __temp0, __1, __2, __temp1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action415<'a>(module: &'a Rc<str>, __0: (Loc, Expr, Loc)) -> L<Expr> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action375(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action416<'a>(module: &'a Rc<str>, __0: (Loc, Expr, Loc)) -> L<Expr> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action376(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action417<'a>(module: &'a Rc<str>, __0: (Loc, FunSig, Loc)) -> L<FunSig> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action377(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action418<'a>(module: &'a Rc<str>, __0: (Loc, Expr, Loc)) -> L<Expr> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action378(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action419<'a>(module: &'a Rc<str>, __0: (Loc, Token, Loc)) -> L<SmolStr> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action379(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action420<'a>(module: &'a Rc<str>, __0: (Loc, Pat, Loc)) -> L<Pat> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action380(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action421<'a>(module: &'a Rc<str>, __0: (Loc, Stmt, Loc)) -> L<Stmt> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action381(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action422<'a>(module: &'a Rc<str>, __0: (Loc, Type, Loc)) -> L<Type> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action382(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action423<'a>(module: &'a Rc<str>, __0: (Loc, Token, Loc)) -> L<SmolStr> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action383(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action424<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Pat, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Pat, Loc),
) -> Pat {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action384(module, __0, __temp0, __1, __2)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action425<'a>(module: &'a Rc<str>, __0: (Loc, Expr, Loc), __1: (Loc, Token, Loc)) -> Stmt {
    let __start0 = __0.2;
    let __end0 = __1.0;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action385(module, __0, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action426<'a>(module: &'a Rc<str>, __0: (Loc, Expr, Loc)) -> Stmt {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action386(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action427<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, L<TypeDecl>, Loc),
) -> L<TopDecl> {
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action387(module, __0, __1, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action428<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, L<FunDecl>, Loc),
) -> L<TopDecl> {
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action388(module, __0, __1, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action429<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, L<ImportDecl>, Loc),
) -> L<TopDecl> {
    let __start0 = __1.2;
    let __end0 = __1.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action389(module, __0, __1, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action430<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<Type>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, alloc::vec::Vec<L<FunSig>>, Loc),
) -> L<TraitDecl> {
    let __start0 = __5.2;
    let __end0 = __6.0;
    let __start1 = __10.2;
    let __end1 = __10.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action390(
        module, __0, __1, __2, __3, __4, __5, __temp0, __6, __7, __8, __9, __10, __temp1,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action431<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, alloc::vec::Vec<L<FunSig>>, Loc),
) -> L<TraitDecl> {
    let __start0 = __3.2;
    let __end0 = __4.0;
    let __start1 = __8.2;
    let __end1 = __8.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    let __temp1 = __action161(module, &__start1, &__end1);
    let __temp1 = (__start1, __temp1, __end1);
    __action391(
        module, __0, __1, __2, __3, __temp0, __4, __5, __6, __7, __8, __temp1,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action432<'a>(
    module: &'a Rc<str>,
    __0: (Loc, L<SmolStr>, Loc),
) -> L<(L<SmolStr>, Vec<L<Type>>)> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action392(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action433<'a>(
    module: &'a Rc<str>,
    __0: (Loc, L<SmolStr>, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Vec<L<Type>>, Loc),
) -> L<(L<SmolStr>, Vec<L<Type>>)> {
    let __start0 = __2.2;
    let __end0 = __2.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action393(module, __0, __1, __2, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action434<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Vec<SmolStr>, Loc),
    __3: (Loc, TypeDeclRhs, Loc),
) -> L<TypeDecl> {
    let __start0 = __3.2;
    let __end0 = __3.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action394(module, __0, __1, __2, __3, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action435<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, Token, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Vec<SmolStr>, Loc),
    __4: (Loc, Token, Loc),
) -> L<TypeDecl> {
    let __start0 = __4.2;
    let __end0 = __4.2;
    let __temp0 = __action161(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action395(module, __0, __1, __2, __3, __4, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action436<'a>(module: &'a Rc<str>, __lookbehind: &Loc, __lookahead: &Loc) -> Vec<Alt> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action131(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action40(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action437<'a>(module: &'a Rc<str>, __0: (Loc, alloc::vec::Vec<Alt>, Loc)) -> Vec<Alt> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action132(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action40(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action438<'a>(module: &'a Rc<str>, __0: (Loc, CallArg, Loc)) -> Vec<CallArg> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action200(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action291(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action439<'a>(module: &'a Rc<str>, __lookbehind: &Loc, __lookahead: &Loc) -> Vec<CallArg> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action201(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action291(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action440<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<CallArg>, Loc),
    __1: (Loc, CallArg, Loc),
) -> Vec<CallArg> {
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action200(module, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action292(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action441<'a>(module: &'a Rc<str>, __0: (Loc, alloc::vec::Vec<CallArg>, Loc)) -> Vec<CallArg> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action201(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action292(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action442<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<Type>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Token, Loc),
) -> L<TraitDecl> {
    let __start0 = __9.2;
    let __end0 = __9.2;
    let __temp0 = __action116(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action430(
        module, __0, __1, __2, __3, __4, __5, __6, __7, __8, __9, __temp0,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action443<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Vec<L<Type>>, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, Token, Loc),
    __9: (Loc, Token, Loc),
    __10: (Loc, alloc::vec::Vec<L<FunSig>>, Loc),
) -> L<TraitDecl> {
    let __start0 = __10.0;
    let __end0 = __10.2;
    let __temp0 = __action117(module, __10);
    let __temp0 = (__start0, __temp0, __end0);
    __action430(
        module, __0, __1, __2, __3, __4, __5, __6, __7, __8, __9, __temp0,
    )
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action444<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
) -> L<TraitDecl> {
    let __start0 = __7.2;
    let __end0 = __7.2;
    let __temp0 = __action116(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action431(module, __0, __1, __2, __3, __4, __5, __6, __7, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action445<'a>(
    module: &'a Rc<str>,
    __0: (Loc, Token, Loc),
    __1: (Loc, L<SmolStr>, Loc),
    __2: (Loc, Token, Loc),
    __3: (Loc, Token, Loc),
    __4: (Loc, Token, Loc),
    __5: (Loc, Token, Loc),
    __6: (Loc, Token, Loc),
    __7: (Loc, Token, Loc),
    __8: (Loc, alloc::vec::Vec<L<FunSig>>, Loc),
) -> L<TraitDecl> {
    let __start0 = __8.0;
    let __end0 = __8.2;
    let __temp0 = __action117(module, __8);
    let __temp0 = (__start0, __temp0, __end0);
    __action431(module, __0, __1, __2, __3, __4, __5, __6, __7, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action446<'a>(module: &'a Rc<str>, __lookbehind: &Loc, __lookahead: &Loc) -> Vec<L<Stmt>> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action133(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action31(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action447<'a>(module: &'a Rc<str>, __0: (Loc, alloc::vec::Vec<L<Stmt>>, Loc)) -> Vec<L<Stmt>> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action134(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action31(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action448<'a>(module: &'a Rc<str>, __0: (Loc, L<Type>, Loc)) -> Vec<L<Type>> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action184(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action295(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action449<'a>(module: &'a Rc<str>, __lookbehind: &Loc, __lookahead: &Loc) -> Vec<L<Type>> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action185(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action295(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action450<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<L<Type>>, Loc),
    __1: (Loc, L<Type>, Loc),
) -> Vec<L<Type>> {
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action184(module, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action296(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action451<'a>(module: &'a Rc<str>, __0: (Loc, alloc::vec::Vec<L<Type>>, Loc)) -> Vec<L<Type>> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action185(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action296(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action452<'a>(module: &'a Rc<str>, __0: (Loc, L<Type>, Loc)) -> Vec<L<Type>> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action184(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action299(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action453<'a>(module: &'a Rc<str>, __lookbehind: &Loc, __lookahead: &Loc) -> Vec<L<Type>> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action185(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action299(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action454<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<L<Type>>, Loc),
    __1: (Loc, L<Type>, Loc),
) -> Vec<L<Type>> {
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action184(module, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action300(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action455<'a>(module: &'a Rc<str>, __0: (Loc, alloc::vec::Vec<L<Type>>, Loc)) -> Vec<L<Type>> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action185(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action300(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action456<'a>(module: &'a Rc<str>, __0: (Loc, L<TypeDecl>, Loc)) -> L<TopDecl> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action112(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action427(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action457<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, L<TypeDecl>, Loc),
) -> L<TopDecl> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action113(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action427(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action458<'a>(module: &'a Rc<str>, __0: (Loc, L<FunDecl>, Loc)) -> L<TopDecl> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action112(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action428(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action459<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, L<FunDecl>, Loc),
) -> L<TopDecl> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action113(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action428(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action460<'a>(module: &'a Rc<str>, __0: (Loc, L<ImportDecl>, Loc)) -> L<TopDecl> {
    let __start0 = __0.0;
    let __end0 = __0.0;
    let __temp0 = __action112(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action429(module, __temp0, __0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action461<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, L<ImportDecl>, Loc),
) -> L<TopDecl> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action113(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action429(module, __temp0, __1)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action462<'a>(
    module: &'a Rc<str>,
    __0: (Loc, (Option<SmolStr>, L<Expr>), Loc),
) -> Vec<(Option<SmolStr>, L<Expr>)> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action195(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action334(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action463<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<(Option<SmolStr>, L<Expr>)> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action196(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action334(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action464<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
    __1: (Loc, (Option<SmolStr>, L<Expr>), Loc),
) -> Vec<(Option<SmolStr>, L<Expr>)> {
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action195(module, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action335(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action465<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Expr>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Expr>)> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action196(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action335(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action466<'a>(
    module: &'a Rc<str>,
    __0: (Loc, (Option<SmolStr>, L<Pat>), Loc),
) -> Vec<(Option<SmolStr>, L<Pat>)> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action205(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action338(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action467<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<(Option<SmolStr>, L<Pat>)> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action206(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action338(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action468<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
    __1: (Loc, (Option<SmolStr>, L<Pat>), Loc),
) -> Vec<(Option<SmolStr>, L<Pat>)> {
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action205(module, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action339(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action469<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<(Option<SmolStr>, L<Pat>)>, Loc),
) -> Vec<(Option<SmolStr>, L<Pat>)> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action206(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action339(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action470<'a>(module: &'a Rc<str>, __0: (Loc, Named<Type>, Loc)) -> Vec<Named<Type>> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action169(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action342(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action471<'a>(module: &'a Rc<str>, __lookbehind: &Loc, __lookahead: &Loc) -> Vec<Named<Type>> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action170(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action342(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action472<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Named<Type>>, Loc),
    __1: (Loc, Named<Type>, Loc),
) -> Vec<Named<Type>> {
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action169(module, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action343(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action473<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Named<Type>>, Loc),
) -> Vec<Named<Type>> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action170(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action343(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action474<'a>(module: &'a Rc<str>, __lookbehind: &Loc, __lookahead: &Loc) -> Vec<L<TopDecl>> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action114(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action108(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action475<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<L<TopDecl>>, Loc),
) -> Vec<L<TopDecl>> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action115(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action108(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action476<'a>(
    module: &'a Rc<str>,
    __0: (Loc, L<(L<SmolStr>, Vec<L<Type>>)>, Loc),
) -> Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action174(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action346(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action477<'a>(
    module: &'a Rc<str>,
    __lookbehind: &Loc,
    __lookahead: &Loc,
) -> Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action175(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action346(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action478<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
    __1: (Loc, L<(L<SmolStr>, Vec<L<Type>>)>, Loc),
) -> Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action174(module, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action347(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action479<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<L<(L<SmolStr>, Vec<L<Type>>)>>, Loc),
) -> Vec<L<(L<SmolStr>, Vec<L<Type>>)>> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action175(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action347(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action480<'a>(module: &'a Rc<str>, __0: (Loc, Token, Loc)) -> Vec<Token> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action210(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action350(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action481<'a>(module: &'a Rc<str>, __lookbehind: &Loc, __lookahead: &Loc) -> Vec<Token> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action211(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action350(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action482<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, Token, Loc),
) -> Vec<Token> {
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action210(module, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action351(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action483<'a>(module: &'a Rc<str>, __0: (Loc, alloc::vec::Vec<Token>, Loc)) -> Vec<Token> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action211(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action351(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action484<'a>(module: &'a Rc<str>, __0: (Loc, Token, Loc)) -> Vec<Token> {
    let __start0 = __0.0;
    let __end0 = __0.2;
    let __temp0 = __action210(module, __0);
    let __temp0 = (__start0, __temp0, __end0);
    __action354(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action485<'a>(module: &'a Rc<str>, __lookbehind: &Loc, __lookahead: &Loc) -> Vec<Token> {
    let __start0 = *__lookbehind;
    let __end0 = *__lookahead;
    let __temp0 = __action211(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action354(module, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action486<'a>(
    module: &'a Rc<str>,
    __0: (Loc, alloc::vec::Vec<Token>, Loc),
    __1: (Loc, Token, Loc),
) -> Vec<Token> {
    let __start0 = __1.0;
    let __end0 = __1.2;
    let __temp0 = __action210(module, __1);
    let __temp0 = (__start0, __temp0, __end0);
    __action355(module, __0, __temp0)
}

#[allow(unused_variables)]
#[allow(
    clippy::too_many_arguments,
    clippy::needless_lifetimes,
    clippy::just_underscores_and_digits
)]
fn __action487<'a>(module: &'a Rc<str>, __0: (Loc, alloc::vec::Vec<Token>, Loc)) -> Vec<Token> {
    let __start0 = __0.2;
    let __end0 = __0.2;
    let __temp0 = __action211(module, &__start0, &__end0);
    let __temp0 = (__start0, __temp0, __end0);
    __action355(module, __0, __temp0)
}
#[allow(clippy::type_complexity, dead_code)]

pub trait __ToTriple<'a> {
    fn to_triple(
        value: Self,
    ) -> Result<(Loc, Token, Loc), __lalrpop_util::ParseError<Loc, Token, LexerError<Infallible>>>;
}

impl<'a> __ToTriple<'a> for (Loc, Token, Loc) {
    fn to_triple(
        value: Self,
    ) -> Result<(Loc, Token, Loc), __lalrpop_util::ParseError<Loc, Token, LexerError<Infallible>>>
    {
        Ok(value)
    }
}
impl<'a> __ToTriple<'a> for Result<(Loc, Token, Loc), LexerError<Infallible>> {
    fn to_triple(
        value: Self,
    ) -> Result<(Loc, Token, Loc), __lalrpop_util::ParseError<Loc, Token, LexerError<Infallible>>>
    {
        match value {
            Ok(v) => Ok(v),
            Err(error) => Err(__lalrpop_util::ParseError::User { error }),
        }
    }
}
