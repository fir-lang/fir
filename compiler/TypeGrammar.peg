Terminals:
    "LowerId" = Token(kind = TokenKind.LowerId | TokenKind.Self_, ..)
    "UpperId" = Token(kind = TokenKind.UpperId, ..)
    "Fn" = Token(kind = TokenKind.UpperFn, ..)
    "(" = Token(kind = TokenKind.LParen, ..)
    ")" = Token(kind = TokenKind.RParen, ..)
    "[" = Token(kind = TokenKind.LBracket, ..)
    "]" = Token(kind = TokenKind.RBracket, ..)
    ":" = Token(kind = TokenKind.Colon, ..)
    "," = Token(kind = TokenKind.Comma, ..)
    ".." = Token(kind = TokenKind.DotDot, ..)

type_:
    namedType
    "LowerId"
    "(" ")"
    "(" recordTypeFields ")"
    "[" "]"
    "[" variantAlt ("," variantAlt)* "," ".." "LowerId" "]"
    "[" variantAlt ("," variantAlt)* ","? "]"
    "Fn" "(" fnArgs? ")" returnType?

namedType:
    "UpperId" "[" type_ ("," type_)* ","? "]"
    "UpperId"

recordTypeFields:
    recordTypeField ("," recordTypeField)* "," ".." "LowerId"
    recordTypeField ("," recordTypeField)* ","?

recordTypeField:
    "LowerId" ":" type_
    type_

variantAlt:
    "UpperId" "(" recordTypeFields ")"
    "UpperId"

fnArgs:
    param ("," param)* ","?

param:
    "LowerId" (":" type_)?

returnType:
    ":" type_ type_?
