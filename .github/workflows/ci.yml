name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get stable toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: Build
        run: cargo build --verbose

  check_formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get stable toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: 'Check formatting'
        run: cargo fmt --all --check

  check_lints:
    name: Check lints
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: Check lints
        run: cargo clippy --all-targets --all -- -Dwarnings

  run_unit_tests:
    name: Run unit tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get stable toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: Test
        run: cargo test

  run_compiler_tests:
    name: Run compiler tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get stable toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: Test
        run: |
            export FIR_ROOT=$(pwd)
            bash compiler/test_lexer.sh
            cargo run -- compiler/Main.fir

  run_golden_tests:
    name: 'Run golden tests'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get stable toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: Install goldentests
        run: cargo install --git https://github.com/osa1/golden-tests --features=binary

      - name: Run tests
        run: |
          cargo build
          FIR_ROOT=${{ github.workspace }} goldentests target/debug/fir tests '# '

  run_peg_tests:
    name: Run PEG tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get stable toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: Install goldentests
        run: cargo install --git https://github.com/osa1/golden-tests --features=binary

      - name: Test
        run: |
            export FIR_ROOT=$(pwd)
            cargo run -- compiler/Peg.fir -- compiler/TestGrammar.peg > compiler/TestGrammar.fir
            goldentests target/debug/fir compiler/PegTests.fir '# '
            goldentests target/debug/fir compiler/TypeGrammarTest.fir '# '

  check_generated_files:
    name: Check that generated files are up-to-date
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get stable toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: Check
        run: |
            export FIR_ROOT=$(pwd)
            cargo run -- compiler/Peg.fir -- compiler/TestGrammar.peg > compiler/TestGrammar.fir
            cargo run -- compiler/Peg.fir -- compiler/TypeGrammar.peg > compiler/TypeGrammar.fir
            cargo run -- compiler/Peg.fir -- compiler/PegGrammar.peg > compiler/PegGrammar.new.fir
            mv compiler/PegGrammar.new.fir compiler/PegGrammar.fir
            ! git status --porcelain | grep -q '^ M'
