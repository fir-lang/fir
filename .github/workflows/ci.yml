name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install just
        run: sudo apt install -y just

      - name: Build
        run: just build

  check_rust_formatting:
    name: Check Rust formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install just
        run: sudo apt install -y just

      - name: 'Check Rust formatting'
        run: just check_rust_formatting

  check_fir_formatting:
    name: Check Fir formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install just
        run: sudo apt install -y just

      - name: 'Check Fir formatting'
        run: just format_repo

  check_lints:
    name: Check lints
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install just
        run: sudo apt install -y just

      - name: Check lints
        run: just lint

  run_compiler_unit_tests:
    name: Compiler unit tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install just
        run: sudo apt install -y just

      - name: Test
        run: just compiler_unit_test

  run_compiler_golden_tests:
    name: Compiler golden tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install just
        run: sudo apt install -y just

      - name: Install goldentests
        run: cargo install --git https://github.com/osa1/golden-tests --branch fir --features=binary

      - name: Build interpreter
        run: cargo build --verbose

      - name: Test
        run: just compiler_golden_test

  run_interpreter_unit_tests:
    name: Interpreter unit tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install just
        run: sudo apt install -y just

      - name: Test
        run: just interpreter_unit_test

  run_interpreter_golden_tests:
    name: Interpreter golden tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install just
        run: sudo apt install -y just

      - name: Install goldentests
        run: cargo install --git https://github.com/osa1/golden-tests --branch fir --features=binary

      - name: Build interpreter
        run: cargo build --verbose

      - name: Test
        run: just interpreter_golden_test

  check_generated_files:
    name: Check that generated files are up-to-date
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install just
        run: sudo apt install -y just

      - name: Install lalrpop
        run: cargo install lalrpop

      - name: Build interpreter
        run: cargo build --verbose

      - name: Check
        run: just check_generated_files

  # This step takes long, so it's a separate step.
  run_compiler_parser_tests:
    name: Compiler parser tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install just
        run: sudo apt install -y just

      - name: Test
        run: just compiler_parser_test

  run_formatter_golden_tests:
    name: Formatter golden tests
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install just
        run: sudo apt install -y just

      - name: Install goldentests
        run: cargo install --git https://github.com/osa1/golden-tests --branch fir --features=binary

      - name: Build interpreter
        run: cargo build --release --verbose

      - name: Test
        run: just formatter_golden_test

  check_wasm_build:
    name: Check Wasm build
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown

      - name: Make Wasm build
        run: cargo build --lib --release --target=wasm32-unknown-unknown
